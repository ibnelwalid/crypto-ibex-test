diff --git a/riscv-target/ibex/device/rv32i_m/K b/riscv-target/ibex/device/rv32i_m/K
new file mode 120000
index 0000000..c02fc7f
--- /dev/null
+++ b/riscv-target/ibex/device/rv32i_m/K
@@ -0,0 +1 @@
+../rv32imc/
\ No newline at end of file
diff --git a/riscv-test-suite/rv32i_m/K_unratified/Makefile b/riscv-test-suite/rv32i_m/K/Makefile
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/Makefile
rename to riscv-test-suite/rv32i_m/K/Makefile
diff --git a/riscv-test-suite/rv32i_m/K_unratified/Makefrag b/riscv-test-suite/rv32i_m/K/Makefrag
similarity index 97%
rename from riscv-test-suite/rv32i_m/K_unratified/Makefrag
rename to riscv-test-suite/rv32i_m/K/Makefrag
index 1178846..3ac587b 100644
--- a/riscv-test-suite/rv32i_m/K_unratified/Makefrag
+++ b/riscv-test-suite/rv32i_m/K/Makefrag
@@ -38,7 +38,6 @@ rv32k_sc_tests = \
   orn-01 \
   pack-01 \
   packh-01 \
-  packu-01 \
   rev.b-01 \
   rev8-01 \
   rol-01 \
@@ -86,8 +85,8 @@ rv32k_sc_tests = \
   sm4ks-rwp1 \
   unzip-01 \
   xnor-01 \
-  xperm.b-01 \
-  xperm.n-01 \
+  xperm4-01 \
+  xperm8-01 \
   zip-01 \
 
 rv32k_tests = $(addsuffix .elf, $(rv32k_sc_tests))
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/aes32dsi-01.reference_output b/riscv-test-suite/rv32i_m/K/references/aes32dsi-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/aes32dsi-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/aes32dsi-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/aes32dsi-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/aes32dsi-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/aes32dsi-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/aes32dsi-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/aes32dsmi-01.reference_output b/riscv-test-suite/rv32i_m/K/references/aes32dsmi-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/aes32dsmi-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/aes32dsmi-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/aes32dsmi-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/aes32dsmi-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/aes32dsmi-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/aes32dsmi-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/aes32esi-01.reference_output b/riscv-test-suite/rv32i_m/K/references/aes32esi-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/aes32esi-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/aes32esi-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/aes32esi-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/aes32esi-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/aes32esi-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/aes32esi-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/aes32esmi-01.reference_output b/riscv-test-suite/rv32i_m/K/references/aes32esmi-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/aes32esmi-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/aes32esmi-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/aes32esmi-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/aes32esmi-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/aes32esmi-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/aes32esmi-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/andn-01.reference_output b/riscv-test-suite/rv32i_m/K/references/andn-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/andn-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/andn-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/clmul-01.reference_output b/riscv-test-suite/rv32i_m/K/references/clmul-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/clmul-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/clmul-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/clmulh-01.reference_output b/riscv-test-suite/rv32i_m/K/references/clmulh-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/clmulh-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/clmulh-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/orn-01.reference_output b/riscv-test-suite/rv32i_m/K/references/orn-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/orn-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/orn-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/pack-01.reference_output b/riscv-test-suite/rv32i_m/K/references/pack-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/pack-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/pack-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/packh-01.reference_output b/riscv-test-suite/rv32i_m/K/references/packh-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/packh-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/packh-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/rev.b-01.reference_output b/riscv-test-suite/rv32i_m/K/references/rev.b-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/rev.b-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/rev.b-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/rev8-01.reference_output b/riscv-test-suite/rv32i_m/K/references/rev8-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/rev8-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/rev8-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/rol-01.reference_output b/riscv-test-suite/rv32i_m/K/references/rol-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/rol-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/rol-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/ror-01.reference_output b/riscv-test-suite/rv32i_m/K/references/ror-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/ror-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/ror-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/rori-01.reference_output b/riscv-test-suite/rv32i_m/K/references/rori-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/rori-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/rori-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha256sig0-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sha256sig0-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha256sig0-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha256sig0-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha256sig0-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sha256sig0-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha256sig0-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha256sig0-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha256sig0-rwp2.reference_output b/riscv-test-suite/rv32i_m/K/references/sha256sig0-rwp2.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha256sig0-rwp2.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha256sig0-rwp2.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha256sig1-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sha256sig1-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha256sig1-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha256sig1-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha256sig1-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sha256sig1-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha256sig1-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha256sig1-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha256sig1-rwp2.reference_output b/riscv-test-suite/rv32i_m/K/references/sha256sig1-rwp2.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha256sig1-rwp2.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha256sig1-rwp2.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha256sum0-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sha256sum0-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha256sum0-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha256sum0-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha256sum0-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sha256sum0-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha256sum0-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha256sum0-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha256sum0-rwp2.reference_output b/riscv-test-suite/rv32i_m/K/references/sha256sum0-rwp2.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha256sum0-rwp2.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha256sum0-rwp2.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha256sum1-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sha256sum1-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha256sum1-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha256sum1-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha256sum1-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sha256sum1-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha256sum1-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha256sum1-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha256sum1-rwp2.reference_output b/riscv-test-suite/rv32i_m/K/references/sha256sum1-rwp2.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha256sum1-rwp2.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha256sum1-rwp2.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sig0h-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sig0h-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sig0h-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sig0h-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sig0h-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sig0h-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sig0h-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sig0h-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sig0h-rwp2.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sig0h-rwp2.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sig0h-rwp2.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sig0h-rwp2.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sig0l-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sig0l-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sig0l-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sig0l-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sig0l-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sig0l-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sig0l-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sig0l-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sig0l-rwp2.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sig0l-rwp2.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sig0l-rwp2.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sig0l-rwp2.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sig1h-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sig1h-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sig1h-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sig1h-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sig1h-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sig1h-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sig1h-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sig1h-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sig1h-rwp2.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sig1h-rwp2.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sig1h-rwp2.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sig1h-rwp2.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sig1l-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sig1l-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sig1l-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sig1l-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sig1l-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sig1l-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sig1l-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sig1l-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sig1l-rwp2.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sig1l-rwp2.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sig1l-rwp2.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sig1l-rwp2.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sum0r-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sum0r-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sum0r-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sum0r-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sum0r-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sum0r-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sum0r-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sum0r-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sum0r-rwp2.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sum0r-rwp2.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sum0r-rwp2.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sum0r-rwp2.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sum1r-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sum1r-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sum1r-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sum1r-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sum1r-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sum1r-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sum1r-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sum1r-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sha512sum1r-rwp2.reference_output b/riscv-test-suite/rv32i_m/K/references/sha512sum1r-rwp2.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sha512sum1r-rwp2.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sha512sum1r-rwp2.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sm3p0-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sm3p0-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sm3p0-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sm3p0-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sm3p0-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sm3p0-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sm3p0-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sm3p0-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sm3p0-rwp2.reference_output b/riscv-test-suite/rv32i_m/K/references/sm3p0-rwp2.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sm3p0-rwp2.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sm3p0-rwp2.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sm3p1-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sm3p1-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sm3p1-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sm3p1-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sm3p1-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sm3p1-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sm3p1-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sm3p1-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sm3p1-rwp2.reference_output b/riscv-test-suite/rv32i_m/K/references/sm3p1-rwp2.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sm3p1-rwp2.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sm3p1-rwp2.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sm4ed-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sm4ed-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sm4ed-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sm4ed-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sm4ed-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sm4ed-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sm4ed-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sm4ed-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sm4ks-01.reference_output b/riscv-test-suite/rv32i_m/K/references/sm4ks-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sm4ks-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sm4ks-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/sm4ks-rwp1.reference_output b/riscv-test-suite/rv32i_m/K/references/sm4ks-rwp1.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/sm4ks-rwp1.reference_output
rename to riscv-test-suite/rv32i_m/K/references/sm4ks-rwp1.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/unzip-01.reference_output b/riscv-test-suite/rv32i_m/K/references/unzip-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/unzip-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/unzip-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/xnor-01.reference_output b/riscv-test-suite/rv32i_m/K/references/xnor-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/xnor-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/xnor-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/xperm.n-01.reference_output b/riscv-test-suite/rv32i_m/K/references/xperm4-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/xperm.n-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/xperm4-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/xperm.b-01.reference_output b/riscv-test-suite/rv32i_m/K/references/xperm8-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/xperm.b-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/xperm8-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/zip-01.reference_output b/riscv-test-suite/rv32i_m/K/references/zip-01.reference_output
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/references/zip-01.reference_output
rename to riscv-test-suite/rv32i_m/K/references/zip-01.reference_output
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/aes32dsi-01.S b/riscv-test-suite/rv32i_m/K/src/aes32dsi-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/aes32dsi-01.S
rename to riscv-test-suite/rv32i_m/K/src/aes32dsi-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/aes32dsi-rwp1.S b/riscv-test-suite/rv32i_m/K/src/aes32dsi-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/aes32dsi-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/aes32dsi-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/aes32dsmi-01.S b/riscv-test-suite/rv32i_m/K/src/aes32dsmi-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/aes32dsmi-01.S
rename to riscv-test-suite/rv32i_m/K/src/aes32dsmi-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/aes32dsmi-rwp1.S b/riscv-test-suite/rv32i_m/K/src/aes32dsmi-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/aes32dsmi-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/aes32dsmi-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/aes32esi-01.S b/riscv-test-suite/rv32i_m/K/src/aes32esi-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/aes32esi-01.S
rename to riscv-test-suite/rv32i_m/K/src/aes32esi-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/aes32esi-rwp1.S b/riscv-test-suite/rv32i_m/K/src/aes32esi-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/aes32esi-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/aes32esi-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/aes32esmi-01.S b/riscv-test-suite/rv32i_m/K/src/aes32esmi-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/aes32esmi-01.S
rename to riscv-test-suite/rv32i_m/K/src/aes32esmi-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/aes32esmi-rwp1.S b/riscv-test-suite/rv32i_m/K/src/aes32esmi-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/aes32esmi-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/aes32esmi-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/andn-01.S b/riscv-test-suite/rv32i_m/K/src/andn-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/andn-01.S
rename to riscv-test-suite/rv32i_m/K/src/andn-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/clmul-01.S b/riscv-test-suite/rv32i_m/K/src/clmul-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/clmul-01.S
rename to riscv-test-suite/rv32i_m/K/src/clmul-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/clmulh-01.S b/riscv-test-suite/rv32i_m/K/src/clmulh-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/clmulh-01.S
rename to riscv-test-suite/rv32i_m/K/src/clmulh-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/orn-01.S b/riscv-test-suite/rv32i_m/K/src/orn-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/orn-01.S
rename to riscv-test-suite/rv32i_m/K/src/orn-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/pack-01.S b/riscv-test-suite/rv32i_m/K/src/pack-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/pack-01.S
rename to riscv-test-suite/rv32i_m/K/src/pack-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/packh-01.S b/riscv-test-suite/rv32i_m/K/src/packh-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/packh-01.S
rename to riscv-test-suite/rv32i_m/K/src/packh-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/rev.b-01.S b/riscv-test-suite/rv32i_m/K/src/rev.b-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/rev.b-01.S
rename to riscv-test-suite/rv32i_m/K/src/rev.b-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/rev8-01.S b/riscv-test-suite/rv32i_m/K/src/rev8-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/rev8-01.S
rename to riscv-test-suite/rv32i_m/K/src/rev8-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/rol-01.S b/riscv-test-suite/rv32i_m/K/src/rol-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/rol-01.S
rename to riscv-test-suite/rv32i_m/K/src/rol-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/ror-01.S b/riscv-test-suite/rv32i_m/K/src/ror-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/ror-01.S
rename to riscv-test-suite/rv32i_m/K/src/ror-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/rori-01.S b/riscv-test-suite/rv32i_m/K/src/rori-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/rori-01.S
rename to riscv-test-suite/rv32i_m/K/src/rori-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha256sig0-01.S b/riscv-test-suite/rv32i_m/K/src/sha256sig0-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha256sig0-01.S
rename to riscv-test-suite/rv32i_m/K/src/sha256sig0-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha256sig0-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sha256sig0-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha256sig0-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sha256sig0-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha256sig0-rwp2.S b/riscv-test-suite/rv32i_m/K/src/sha256sig0-rwp2.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha256sig0-rwp2.S
rename to riscv-test-suite/rv32i_m/K/src/sha256sig0-rwp2.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha256sig1-01.S b/riscv-test-suite/rv32i_m/K/src/sha256sig1-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha256sig1-01.S
rename to riscv-test-suite/rv32i_m/K/src/sha256sig1-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha256sig1-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sha256sig1-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha256sig1-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sha256sig1-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha256sig1-rwp2.S b/riscv-test-suite/rv32i_m/K/src/sha256sig1-rwp2.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha256sig1-rwp2.S
rename to riscv-test-suite/rv32i_m/K/src/sha256sig1-rwp2.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha256sum0-01.S b/riscv-test-suite/rv32i_m/K/src/sha256sum0-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha256sum0-01.S
rename to riscv-test-suite/rv32i_m/K/src/sha256sum0-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha256sum0-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sha256sum0-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha256sum0-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sha256sum0-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha256sum0-rwp2.S b/riscv-test-suite/rv32i_m/K/src/sha256sum0-rwp2.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha256sum0-rwp2.S
rename to riscv-test-suite/rv32i_m/K/src/sha256sum0-rwp2.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha256sum1-01.S b/riscv-test-suite/rv32i_m/K/src/sha256sum1-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha256sum1-01.S
rename to riscv-test-suite/rv32i_m/K/src/sha256sum1-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha256sum1-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sha256sum1-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha256sum1-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sha256sum1-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha256sum1-rwp2.S b/riscv-test-suite/rv32i_m/K/src/sha256sum1-rwp2.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha256sum1-rwp2.S
rename to riscv-test-suite/rv32i_m/K/src/sha256sum1-rwp2.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sig0h-01.S b/riscv-test-suite/rv32i_m/K/src/sha512sig0h-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sig0h-01.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sig0h-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sig0h-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sha512sig0h-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sig0h-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sig0h-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sig0h-rwp2.S b/riscv-test-suite/rv32i_m/K/src/sha512sig0h-rwp2.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sig0h-rwp2.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sig0h-rwp2.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sig0l-01.S b/riscv-test-suite/rv32i_m/K/src/sha512sig0l-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sig0l-01.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sig0l-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sig0l-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sha512sig0l-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sig0l-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sig0l-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sig0l-rwp2.S b/riscv-test-suite/rv32i_m/K/src/sha512sig0l-rwp2.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sig0l-rwp2.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sig0l-rwp2.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sig1h-01.S b/riscv-test-suite/rv32i_m/K/src/sha512sig1h-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sig1h-01.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sig1h-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sig1h-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sha512sig1h-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sig1h-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sig1h-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sig1h-rwp2.S b/riscv-test-suite/rv32i_m/K/src/sha512sig1h-rwp2.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sig1h-rwp2.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sig1h-rwp2.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sig1l-01.S b/riscv-test-suite/rv32i_m/K/src/sha512sig1l-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sig1l-01.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sig1l-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sig1l-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sha512sig1l-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sig1l-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sig1l-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sig1l-rwp2.S b/riscv-test-suite/rv32i_m/K/src/sha512sig1l-rwp2.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sig1l-rwp2.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sig1l-rwp2.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sum0r-01.S b/riscv-test-suite/rv32i_m/K/src/sha512sum0r-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sum0r-01.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sum0r-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sum0r-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sha512sum0r-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sum0r-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sum0r-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sum0r-rwp2.S b/riscv-test-suite/rv32i_m/K/src/sha512sum0r-rwp2.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sum0r-rwp2.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sum0r-rwp2.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sum1r-01.S b/riscv-test-suite/rv32i_m/K/src/sha512sum1r-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sum1r-01.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sum1r-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sum1r-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sha512sum1r-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sum1r-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sum1r-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sha512sum1r-rwp2.S b/riscv-test-suite/rv32i_m/K/src/sha512sum1r-rwp2.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sha512sum1r-rwp2.S
rename to riscv-test-suite/rv32i_m/K/src/sha512sum1r-rwp2.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sm3p0-01.S b/riscv-test-suite/rv32i_m/K/src/sm3p0-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sm3p0-01.S
rename to riscv-test-suite/rv32i_m/K/src/sm3p0-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sm3p0-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sm3p0-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sm3p0-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sm3p0-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sm3p0-rwp2.S b/riscv-test-suite/rv32i_m/K/src/sm3p0-rwp2.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sm3p0-rwp2.S
rename to riscv-test-suite/rv32i_m/K/src/sm3p0-rwp2.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sm3p1-01.S b/riscv-test-suite/rv32i_m/K/src/sm3p1-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sm3p1-01.S
rename to riscv-test-suite/rv32i_m/K/src/sm3p1-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sm3p1-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sm3p1-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sm3p1-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sm3p1-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sm3p1-rwp2.S b/riscv-test-suite/rv32i_m/K/src/sm3p1-rwp2.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sm3p1-rwp2.S
rename to riscv-test-suite/rv32i_m/K/src/sm3p1-rwp2.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sm4ed-01.S b/riscv-test-suite/rv32i_m/K/src/sm4ed-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sm4ed-01.S
rename to riscv-test-suite/rv32i_m/K/src/sm4ed-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sm4ed-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sm4ed-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sm4ed-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sm4ed-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sm4ks-01.S b/riscv-test-suite/rv32i_m/K/src/sm4ks-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sm4ks-01.S
rename to riscv-test-suite/rv32i_m/K/src/sm4ks-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/sm4ks-rwp1.S b/riscv-test-suite/rv32i_m/K/src/sm4ks-rwp1.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/sm4ks-rwp1.S
rename to riscv-test-suite/rv32i_m/K/src/sm4ks-rwp1.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/unzip-01.S b/riscv-test-suite/rv32i_m/K/src/unzip-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/unzip-01.S
rename to riscv-test-suite/rv32i_m/K/src/unzip-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/xnor-01.S b/riscv-test-suite/rv32i_m/K/src/xnor-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/xnor-01.S
rename to riscv-test-suite/rv32i_m/K/src/xnor-01.S
diff --git a/riscv-test-suite/rv32i_m/K/src/xperm4-01.S b/riscv-test-suite/rv32i_m/K/src/xperm4-01.S
new file mode 100644
index 0000000..4a6acfb
--- /dev/null
+++ b/riscv-test-suite/rv32i_m/K/src/xperm4-01.S
@@ -0,0 +1,1531 @@
+// -----------
+// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
+// version   : 0.4.5
+// timestamp : Thu May 27 16:46:51 2021 GMT
+// usage     : riscv_ctg \
+//                  --cgf /scratch/git-repo/github/riscv-ctg/sample_cgfs/dataset.cgf \
+//                  --cgf /scratch/git-repo/github/riscv-ctg/sample_cgfs/rv32i_k.cgf \
+//                  --base-isa rv32i \
+//                  --randomize
+// -----------
+//
+// -----------
+// Copyright (c) 2021. Indian Institute of Technology Madras. All rights reserved.
+// SPDX-License-Identifier: BSD-3-Clause
+// -----------
+//
+// This assembly file tests the xperm4 instruction of the RISC-V  extension for the xperm4 covergroup.
+//
+#include "model_test.h"
+#include "arch_test.h"
+RVTEST_ISA("RV32I")
+
+.section .text.init
+.globl rvtest_entry_point
+rvtest_entry_point:
+RVMODEL_BOOT
+RVTEST_CODE_BEGIN
+
+#ifdef TEST_CASE_1
+
+RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*K.*);def TEST_CASE_1=True;",xperm4)
+
+RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKs.*);def TEST_CASE_1=True;",xperm4)
+
+RVTEST_CASE(2,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKb.*);def TEST_CASE_1=True;",xperm4)
+
+RVTEST_CASE(3,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKn.*);def TEST_CASE_1=True;",xperm4)
+
+RVTEST_SIGBASE( x10,signature_x10_1)
+
+inst_0:
+// rs1 == rd != rs2, rs1==x31, rs2==x7, rd==x31, rs1_val == 0xFFFFFFFF and rs2_val == 0x08577EB1
+// opcode: xperm4 ; op1:x31; op2:x7; dest:x31; op1val:0xffffffff;  op2val:0x8577eb1
+TEST_RR_OP(xperm4, x31, x31, x7, 0x00000000, 0xffffffff, 0x8577eb1, x10, 0, x17)
+
+inst_1:
+// rs1 == rs2 == rd, rs1==x8, rs2==x8, rd==x8, rs1_val == 0x91766f62 and rs2_val == 0x5570084b
+// opcode: xperm4 ; op1:x8; op2:x8; dest:x8; op1val:0x91766f62;  op2val:0x91766f62
+TEST_RR_OP(xperm4, x8, x8, x8, 0x00000000, 0x91766f62, 0x91766f62, x10, 4, x17)
+
+inst_2:
+// rs1 == rs2 != rd, rs1==x12, rs2==x12, rd==x7, rs1_val == 0xc0fe15dd and rs2_val == 0x9f053821
+// opcode: xperm4 ; op1:x12; op2:x12; dest:x7; op1val:0xc0fe15dd;  op2val:0xc0fe15dd
+TEST_RR_OP(xperm4, x7, x12, x12, 0x00000000, 0xc0fe15dd, 0xc0fe15dd, x10, 8, x17)
+
+inst_3:
+// rs2 == rd != rs1, rs1==x28, rs2==x2, rd==x2, rs1_val == 0xdc80d916 and rs2_val == 0x2a2a146d 
+// opcode: xperm4 ; op1:x28; op2:x2; dest:x2; op1val:0xdc80d916;  op2val:0x2a2a146d
+TEST_RR_OP(xperm4, x2, x28, x2, 0x00000000, 0xdc80d916, 0x2a2a146d, x10, 12, x17)
+
+inst_4:
+// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x4, rs2==x24, rd==x15, rs1_val == 0x952acffe and rs2_val == 0x25ae27ee 
+// opcode: xperm4 ; op1:x4; op2:x24; dest:x15; op1val:0x952acffe;  op2val:0x25ae27ee
+TEST_RR_OP(xperm4, x15, x4, x24, 0x00000000, 0x952acffe, 0x25ae27ee, x10, 16, x17)
+
+inst_5:
+// rs1==x29, rs2==x4, rd==x14, rs1_val == 0x40a5ff52 and rs2_val == 0xb6f9706f
+// opcode: xperm4 ; op1:x29; op2:x4; dest:x14; op1val:0x40a5ff52;  op2val:0xb6f9706f
+TEST_RR_OP(xperm4, x14, x29, x4, 0x00000000, 0x40a5ff52, 0xb6f9706f, x10, 20, x17)
+
+inst_6:
+// rs1==x19, rs2==x5, rd==x25, rs1_val == 0xe3f4fca3 and rs2_val == 0xa6c9253a
+// opcode: xperm4 ; op1:x19; op2:x5; dest:x25; op1val:0xe3f4fca3;  op2val:0xa6c9253a
+TEST_RR_OP(xperm4, x25, x19, x5, 0x00000000, 0xe3f4fca3, 0xa6c9253a, x10, 24, x17)
+
+inst_7:
+// rs1==x23, rs2==x30, rd==x27, rs1_val == 0xc2f1c53e and rs2_val == 0xd05668ae
+// opcode: xperm4 ; op1:x23; op2:x30; dest:x27; op1val:0xc2f1c53e;  op2val:0xd05668ae
+TEST_RR_OP(xperm4, x27, x23, x30, 0x00000000, 0xc2f1c53e, 0xd05668ae, x10, 28, x17)
+
+inst_8:
+// rs1==x16, rs2==x11, rd==x24, rs1_val == 0x9722c9a6 and rs2_val == 0x7bcad7c4 
+// opcode: xperm4 ; op1:x16; op2:x11; dest:x24; op1val:0x9722c9a6;  op2val:0x7bcad7c4
+TEST_RR_OP(xperm4, x24, x16, x11, 0x00000000, 0x9722c9a6, 0x7bcad7c4, x10, 32, x17)
+
+inst_9:
+// rs1==x26, rs2==x0, rd==x5, rs1_val == 0xf7f1305a and rs2_val == 0x9bedfe39
+// opcode: xperm4 ; op1:x26; op2:x0; dest:x5; op1val:0xf7f1305a;  op2val:0x0
+TEST_RR_OP(xperm4, x5, x26, x0, 0x00000000, 0xf7f1305a, 0x0, x10, 36, x17)
+
+inst_10:
+// rs1==x24, rs2==x31, rd==x11, rs1_val == 0xd75739f8 and rs2_val == 0xe6fff3d9
+// opcode: xperm4 ; op1:x24; op2:x31; dest:x11; op1val:0xd75739f8;  op2val:0xe6fff3d9
+TEST_RR_OP(xperm4, x11, x24, x31, 0x00000000, 0xd75739f8, 0xe6fff3d9, x10, 40, x17)
+
+inst_11:
+// rs1==x1, rs2==x29, rd==x9, rs1_val == 0x90efb625 and rs2_val == 0x3150e5fa
+// opcode: xperm4 ; op1:x1; op2:x29; dest:x9; op1val:0x90efb625;  op2val:0x3150e5fa
+TEST_RR_OP(xperm4, x9, x1, x29, 0x00000000, 0x90efb625, 0x3150e5fa, x10, 44, x17)
+
+inst_12:
+// rs1==x30, rs2==x3, rd==x13, rs1_val == 0x1fc493ca and rs2_val == 0x65408c73 
+// opcode: xperm4 ; op1:x30; op2:x3; dest:x13; op1val:0x1fc493ca;  op2val:0x65408c73
+TEST_RR_OP(xperm4, x13, x30, x3, 0x00000000, 0x1fc493ca, 0x65408c73, x10, 48, x17)
+
+inst_13:
+// rs1==x27, rs2==x6, rd==x20, rs1_val == 0x8e2eac2a and rs2_val == 0xd169a3f8
+// opcode: xperm4 ; op1:x27; op2:x6; dest:x20; op1val:0x8e2eac2a;  op2val:0xd169a3f8
+TEST_RR_OP(xperm4, x20, x27, x6, 0x00000000, 0x8e2eac2a, 0xd169a3f8, x10, 52, x17)
+
+inst_14:
+// rs1==x22, rs2==x26, rd==x23, rs1_val == 0x35f9377f and rs2_val == 0xf4c30307
+// opcode: xperm4 ; op1:x22; op2:x26; dest:x23; op1val:0x35f9377f;  op2val:0xf4c30307
+TEST_RR_OP(xperm4, x23, x22, x26, 0x00000000, 0x35f9377f, 0xf4c30307, x10, 56, x17)
+
+inst_15:
+// rs1==x21, rs2==x25, rd==x28, rs1_val == 0x58d548aa and rs2_val == 0xa0569d76
+// opcode: xperm4 ; op1:x21; op2:x25; dest:x28; op1val:0x58d548aa;  op2val:0xa0569d76
+TEST_RR_OP(xperm4, x28, x21, x25, 0x00000000, 0x58d548aa, 0xa0569d76, x10, 60, x7)
+RVTEST_SIGBASE( x8,signature_x8_0)
+
+inst_16:
+// rs1==x15, rs2==x21, rd==x0, rs1_val == 0x55d98c6e and rs2_val == 0x2daf9ac7
+// opcode: xperm4 ; op1:x15; op2:x21; dest:x0; op1val:0x55d98c6e;  op2val:0x2daf9ac7
+TEST_RR_OP(xperm4, x0, x15, x21, 0x00000000, 0x55d98c6e, 0x2daf9ac7, x8, 0, x7)
+
+inst_17:
+// rs1==x14, rs2==x10, rd==x26, rs1_val == 0x74b8de87 and rs2_val == 0xf273b44c 
+// opcode: xperm4 ; op1:x14; op2:x10; dest:x26; op1val:0x74b8de87;  op2val:0xf273b44c
+TEST_RR_OP(xperm4, x26, x14, x10, 0x00000000, 0x74b8de87, 0xf273b44c, x8, 4, x7)
+
+inst_18:
+// rs1==x3, rs2==x9, rd==x1, rs1_val == 0xccce240c and rs2_val == 0x886c3a30
+// opcode: xperm4 ; op1:x3; op2:x9; dest:x1; op1val:0xccce240c;  op2val:0x886c3a30
+TEST_RR_OP(xperm4, x1, x3, x9, 0x00000000, 0xccce240c, 0x886c3a30, x8, 8, x7)
+
+inst_19:
+// rs1==x13, rs2==x28, rd==x22, rs1_val == 0xb49c83dc and rs2_val == 0xbb61a9cd
+// opcode: xperm4 ; op1:x13; op2:x28; dest:x22; op1val:0xb49c83dc;  op2val:0xbb61a9cd
+TEST_RR_OP(xperm4, x22, x13, x28, 0x00000000, 0xb49c83dc, 0xbb61a9cd, x8, 12, x7)
+
+inst_20:
+// rs1==x20, rs2==x1, rd==x6, rs1_val == 0x254a9493 and rs2_val == 0xc5521660
+// opcode: xperm4 ; op1:x20; op2:x1; dest:x6; op1val:0x254a9493;  op2val:0xc5521660
+TEST_RR_OP(xperm4, x6, x20, x1, 0x00000000, 0x254a9493, 0xc5521660, x8, 16, x7)
+
+inst_21:
+// rs1==x9, rs2==x15, rd==x17, rs2_val == 0x00000000 and rs1_val == 0x4FFE831A
+// opcode: xperm4 ; op1:x9; op2:x15; dest:x17; op1val:0x4ffe831a;  op2val:0x0
+TEST_RR_OP(xperm4, x17, x9, x15, 0x00000000, 0x4ffe831a, 0x0, x8, 20, x7)
+
+inst_22:
+// rs1==x25, rs2==x20, rd==x4, rs2_val == 0x80000000 and rs1_val == 0xAFC08ACE
+// opcode: xperm4 ; op1:x25; op2:x20; dest:x4; op1val:0xafc08ace;  op2val:0x80000000
+TEST_RR_OP(xperm4, x4, x25, x20, 0x00000000, 0xafc08ace, 0x80000000, x8, 24, x7)
+
+inst_23:
+// rs1==x2, rs2==x27, rd==x19, rs2_val == 0x40000000 and rs1_val == 0xAF6E9055 
+// opcode: xperm4 ; op1:x2; op2:x27; dest:x19; op1val:0xaf6e9055;  op2val:0x40000000
+TEST_RR_OP(xperm4, x19, x2, x27, 0x00000000, 0xaf6e9055, 0x40000000, x8, 28, x7)
+
+inst_24:
+// rs1==x10, rs2==x17, rd==x30, rs2_val == 0xE0000000 and rs1_val == 0x5B130474 
+// opcode: xperm4 ; op1:x10; op2:x17; dest:x30; op1val:0x5b130474;  op2val:0xe0000000
+TEST_RR_OP(xperm4, x30, x10, x17, 0x00000000, 0x5b130474, 0xe0000000, x8, 32, x7)
+
+inst_25:
+// rs1==x11, rs2==x13, rd==x29, rs2_val == 0x90000000 and rs1_val == 0x3EEA126E
+// opcode: xperm4 ; op1:x11; op2:x13; dest:x29; op1val:0x3eea126e;  op2val:0x90000000
+TEST_RR_OP(xperm4, x29, x11, x13, 0x00000000, 0x3eea126e, 0x90000000, x8, 36, x7)
+
+inst_26:
+// rs1==x0, rs2==x14, rd==x18, rs2_val == 0xB8000000 and rs1_val == 0x9C734D77
+// opcode: xperm4 ; op1:x0; op2:x14; dest:x18; op1val:0x0;  op2val:0xb8000000
+TEST_RR_OP(xperm4, x18, x0, x14, 0x00000000, 0x0, 0xb8000000, x8, 40, x7)
+
+inst_27:
+// rs1==x17, rs2==x16, rd==x21, rs2_val == 0xB4000000 and rs1_val == 0x5A694BCA
+// opcode: xperm4 ; op1:x17; op2:x16; dest:x21; op1val:0x5a694bca;  op2val:0xb4000000
+TEST_RR_OP(xperm4, x21, x17, x16, 0x00000000, 0x5a694bca, 0xb4000000, x8, 44, x7)
+
+inst_28:
+// rs1==x18, rs2==x19, rd==x10, rs2_val == 0x3E000000 and rs1_val == 0xED52E4CA 
+// opcode: xperm4 ; op1:x18; op2:x19; dest:x10; op1val:0xed52e4ca;  op2val:0x3e000000
+TEST_RR_OP(xperm4, x10, x18, x19, 0x00000000, 0xed52e4ca, 0x3e000000, x8, 48, x7)
+
+inst_29:
+// rs1==x5, rs2==x23, rd==x16, rs2_val == 0xFB000000 and rs1_val == 0xB5CB2A93
+// opcode: xperm4 ; op1:x5; op2:x23; dest:x16; op1val:0xb5cb2a93;  op2val:0xfb000000
+TEST_RR_OP(xperm4, x16, x5, x23, 0x00000000, 0xb5cb2a93, 0xfb000000, x8, 52, x7)
+
+inst_30:
+// rs1==x6, rs2==x18, rd==x12, rs2_val == 0x68800000 and rs1_val == 0x29324E16
+// opcode: xperm4 ; op1:x6; op2:x18; dest:x12; op1val:0x29324e16;  op2val:0x68800000
+TEST_RR_OP(xperm4, x12, x6, x18, 0x00000000, 0x29324e16, 0x68800000, x8, 56, x7)
+
+inst_31:
+// rs1==x7, rs2==x22, rd==x3, rs2_val == 0xB7400000 and rs1_val == 0xBC5FB419
+// opcode: xperm4 ; op1:x7; op2:x22; dest:x3; op1val:0xbc5fb419;  op2val:0xb7400000
+TEST_RR_OP(xperm4, x3, x7, x22, 0x00000000, 0xbc5fb419, 0xb7400000, x8, 60, x2)
+RVTEST_SIGBASE( x1,signature_x1_0)
+
+inst_32:
+// rs2_val == 0x5CE00000 and rs1_val == 0x8E92E1B8
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x8e92e1b8;  op2val:0x5ce00000
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x8e92e1b8, 0x5ce00000, x1, 0, x2)
+
+inst_33:
+// rs2_val == 0x49F00000 and rs1_val == 0x96A3B48B
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x96a3b48b;  op2val:0x49f00000
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x96a3b48b, 0x49f00000, x1, 4, x2)
+
+inst_34:
+// rs2_val == 0x53D80000 and rs1_val == 0x0A095049 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xa095049;  op2val:0x53d80000
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xa095049, 0x53d80000, x1, 8, x2)
+
+inst_35:
+// rs2_val == 0x2EC40000 and rs1_val == 0x6F6E71B7 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x6f6e71b7;  op2val:0x2ec40000
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x6f6e71b7, 0x2ec40000, x1, 12, x2)
+
+inst_36:
+// rs2_val == 0x8E860000 and rs1_val == 0x236CC43D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x236cc43d;  op2val:0x8e860000
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x236cc43d, 0x8e860000, x1, 16, x2)
+
+inst_37:
+// rs2_val == 0x6FBF0000 and rs1_val == 0xE2ED8971 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xe2ed8971;  op2val:0x6fbf0000
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xe2ed8971, 0x6fbf0000, x1, 20, x2)
+
+inst_38:
+// rs2_val == 0x354E8000 and rs1_val == 0x06FA7B3E 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x6fa7b3e;  op2val:0x354e8000
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x6fa7b3e, 0x354e8000, x1, 24, x2)
+
+inst_39:
+// rs2_val == 0xFB07C000 and rs1_val == 0x4143DA51 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x4143da51;  op2val:0xfb07c000
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x4143da51, 0xfb07c000, x1, 28, x2)
+
+inst_40:
+// rs2_val == 0xDFFA2000 and rs1_val == 0xCAC78511 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xcac78511;  op2val:0xdffa2000
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xcac78511, 0xdffa2000, x1, 32, x2)
+
+inst_41:
+// rs2_val == 0x45D1F000 and rs1_val == 0xDF880B11 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xdf880b11;  op2val:0x45d1f000
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xdf880b11, 0x45d1f000, x1, 36, x2)
+
+inst_42:
+// rs2_val == 0x9069A800 and rs1_val == 0xBD230058 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xbd230058;  op2val:0x9069a800
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xbd230058, 0x9069a800, x1, 40, x2)
+
+inst_43:
+// rs2_val == 0xF5B1B400 and rs1_val == 0xF2597377 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xf2597377;  op2val:0xf5b1b400
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xf2597377, 0xf5b1b400, x1, 44, x2)
+
+inst_44:
+// rs2_val == 0x06B6DA00 and rs1_val == 0x5A8E7F31 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x5a8e7f31;  op2val:0x6b6da00
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x5a8e7f31, 0x6b6da00, x1, 48, x2)
+
+inst_45:
+// rs2_val == 0xBFB0F100 and rs1_val == 0x7A3621F5 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x7a3621f5;  op2val:0xbfb0f100
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x7a3621f5, 0xbfb0f100, x1, 52, x2)
+
+inst_46:
+// rs2_val == 0xD838C880 and rs1_val == 0x1E3C492C 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x1e3c492c;  op2val:0xd838c880
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x1e3c492c, 0xd838c880, x1, 56, x2)
+
+inst_47:
+// rs2_val == 0x5C46AEC0 and rs1_val == 0xD4FAF4B1 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xd4faf4b1;  op2val:0x5c46aec0
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xd4faf4b1, 0x5c46aec0, x1, 60, x2)
+
+inst_48:
+// rs2_val == 0xCF7AC620 and rs1_val == 0x27A16894 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x27a16894;  op2val:0xcf7ac620
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x27a16894, 0xcf7ac620, x1, 64, x2)
+
+inst_49:
+// rs2_val == 0x05C2F650 and rs1_val == 0x0A3EF19E 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xa3ef19e;  op2val:0x5c2f650
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xa3ef19e, 0x5c2f650, x1, 68, x2)
+
+inst_50:
+// rs2_val == 0xEEC50588 and rs1_val == 0xCB8193EF 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xcb8193ef;  op2val:0xeec50588
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xcb8193ef, 0xeec50588, x1, 72, x2)
+
+inst_51:
+// rs2_val == 0xCA7160CC and rs1_val == 0x577F8847 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x577f8847;  op2val:0xca7160cc
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x577f8847, 0xca7160cc, x1, 76, x2)
+
+inst_52:
+// rs2_val == 0x60E30DA2 and rs1_val == 0x9B5EAF0A 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x9b5eaf0a;  op2val:0x60e30da2
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x9b5eaf0a, 0x60e30da2, x1, 80, x2)
+
+inst_53:
+// rs2_val == 0x76F86039 and rs1_val == 0x5D3BBCE0 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x5d3bbce0;  op2val:0x76f86039
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x5d3bbce0, 0x76f86039, x1, 84, x2)
+
+inst_54:
+// rs1_val == 0x00000000 and rs2_val == 0xFD1032E8 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xfd1032e8
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x0, 0xfd1032e8, x1, 88, x2)
+
+inst_55:
+// rs1_val == 0x80000000 and rs2_val == 0x7B246C17 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x80000000;  op2val:0x7b246c17
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x80000000, 0x7b246c17, x1, 92, x2)
+
+inst_56:
+// rs1_val == 0x40000000 and rs2_val == 0x56F3EEF1 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x40000000;  op2val:0x56f3eef1
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x40000000, 0x56f3eef1, x1, 96, x2)
+
+inst_57:
+// rs1_val == 0xA0000000 and rs2_val == 0x75923260 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xa0000000;  op2val:0x75923260
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xa0000000, 0x75923260, x1, 100, x2)
+
+inst_58:
+// rs1_val == 0x10000000 and rs2_val == 0xB9D3087C 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x10000000;  op2val:0xb9d3087c
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x10000000, 0xb9d3087c, x1, 104, x2)
+
+inst_59:
+// rs1_val == 0xA8000000 and rs2_val == 0x46CBD355 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xa8000000;  op2val:0x46cbd355
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xa8000000, 0x46cbd355, x1, 108, x2)
+
+inst_60:
+// rs1_val == 0xE4000000 and rs2_val == 0x4616E73D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xe4000000;  op2val:0x4616e73d
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xe4000000, 0x4616e73d, x1, 112, x2)
+
+inst_61:
+// rs1_val == 0x8E000000 and rs2_val == 0x8CCAEC71 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x8e000000;  op2val:0x8ccaec71
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x8e000000, 0x8ccaec71, x1, 116, x2)
+
+inst_62:
+// rs1_val == 0x13000000 and rs2_val == 0x9B774054 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x13000000;  op2val:0x9b774054
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x13000000, 0x9b774054, x1, 120, x2)
+
+inst_63:
+// rs1_val == 0x8B800000 and rs2_val == 0x6D5FCD18 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x8b800000;  op2val:0x6d5fcd18
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x8b800000, 0x6d5fcd18, x1, 124, x2)
+
+inst_64:
+// rs1_val == 0x7EC00000 and rs2_val == 0x0696F561 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x7ec00000;  op2val:0x696f561
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x7ec00000, 0x696f561, x1, 128, x2)
+
+inst_65:
+// rs1_val == 0x3DA00000 and rs2_val == 0x6E1E98E2 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x3da00000;  op2val:0x6e1e98e2
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x3da00000, 0x6e1e98e2, x1, 132, x2)
+
+inst_66:
+// rs1_val == 0x20100000 and rs2_val == 0x2DEDB6A7 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x20100000;  op2val:0x2dedb6a7
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x20100000, 0x2dedb6a7, x1, 136, x2)
+
+inst_67:
+// rs1_val == 0x98380000 and rs2_val == 0x3C272728 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x98380000;  op2val:0x3c272728
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x98380000, 0x3c272728, x1, 140, x2)
+
+inst_68:
+// rs1_val == 0x80F40000 and rs2_val == 0x4F55C73D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x80f40000;  op2val:0x4f55c73d
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x80f40000, 0x4f55c73d, x1, 144, x2)
+
+inst_69:
+// rs1_val == 0x43560000 and rs2_val == 0xB0AB577A 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x43560000;  op2val:0xb0ab577a
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x43560000, 0xb0ab577a, x1, 148, x2)
+
+inst_70:
+// rs1_val == 0x62A90000 and rs2_val == 0x42F5D75E 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x62a90000;  op2val:0x42f5d75e
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x62a90000, 0x42f5d75e, x1, 152, x2)
+
+inst_71:
+// rs1_val == 0x60348000 and rs2_val == 0xB9F09825 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x60348000;  op2val:0xb9f09825
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x60348000, 0xb9f09825, x1, 156, x2)
+
+inst_72:
+// rs1_val == 0x5EF6C000 and rs2_val == 0x9BFAD94F 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x5ef6c000;  op2val:0x9bfad94f
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x5ef6c000, 0x9bfad94f, x1, 160, x2)
+
+inst_73:
+// rs1_val == 0x79DF6000 and rs2_val == 0x98918DD8 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x79df6000;  op2val:0x98918dd8
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x79df6000, 0x98918dd8, x1, 164, x2)
+
+inst_74:
+// rs1_val == 0x864C1000 and rs2_val == 0x9B811F47 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x864c1000;  op2val:0x9b811f47
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x864c1000, 0x9b811f47, x1, 168, x2)
+
+inst_75:
+// rs1_val == 0x735CB800 and rs2_val == 0xD0D18FB0 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x735cb800;  op2val:0xd0d18fb0
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x735cb800, 0xd0d18fb0, x1, 172, x2)
+
+inst_76:
+// rs1_val == 0x29554400 and rs2_val == 0x71992790 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x29554400;  op2val:0x71992790
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x29554400, 0x71992790, x1, 176, x2)
+
+inst_77:
+// rs1_val == 0xA9A56A00 and rs2_val == 0x8248F803 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xa9a56a00;  op2val:0x8248f803
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xa9a56a00, 0x8248f803, x1, 180, x2)
+
+inst_78:
+// rs1_val == 0xC3405D00 and rs2_val == 0xEB3D7873 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xc3405d00;  op2val:0xeb3d7873
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xc3405d00, 0xeb3d7873, x1, 184, x2)
+
+inst_79:
+// rs1_val == 0x394D8080 and rs2_val == 0xD7A7BF5E 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x394d8080;  op2val:0xd7a7bf5e
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x394d8080, 0xd7a7bf5e, x1, 188, x2)
+
+inst_80:
+// rs1_val == 0xC6677840 and rs2_val == 0xD1BA5C0F 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xc6677840;  op2val:0xd1ba5c0f
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xc6677840, 0xd1ba5c0f, x1, 192, x2)
+
+inst_81:
+// rs1_val == 0x70598E60 and rs2_val == 0xD19E3224 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x70598e60;  op2val:0xd19e3224
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x70598e60, 0xd19e3224, x1, 196, x2)
+
+inst_82:
+// rs1_val == 0x98A59F90 and rs2_val == 0x35D30D74 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x98a59f90;  op2val:0x35d30d74
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x98a59f90, 0x35d30d74, x1, 200, x2)
+
+inst_83:
+// rs1_val == 0xD306DEB8 and rs2_val == 0x70A76E49 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xd306deb8;  op2val:0x70a76e49
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xd306deb8, 0x70a76e49, x1, 204, x2)
+
+inst_84:
+// rs1_val == 0x18A01374 and rs2_val == 0x9FCDB9E1 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x18a01374;  op2val:0x9fcdb9e1
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x18a01374, 0x9fcdb9e1, x1, 208, x2)
+
+inst_85:
+// rs1_val == 0xC3667402 and rs2_val == 0x5FEFE911 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xc3667402;  op2val:0x5fefe911
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xc3667402, 0x5fefe911, x1, 212, x2)
+
+inst_86:
+// rs1_val == 0x797D76DF and rs2_val == 0x598B88DB 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x797d76df;  op2val:0x598b88db
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x797d76df, 0x598b88db, x1, 216, x2)
+
+inst_87:
+// rs2_val == 0x0C04F662 and rs1_val == 0xB7E7669E 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xb7e7669e;  op2val:0xc04f662
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xb7e7669e, 0xc04f662, x1, 220, x2)
+
+inst_88:
+// rs2_val == 0xCD41CAD1 and rs1_val == 0xD24F0724 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xd24f0724;  op2val:0xcd41cad1
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xd24f0724, 0xcd41cad1, x1, 224, x2)
+
+inst_89:
+// rs2_val == 0x1203965B and rs1_val == 0x585022A3 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x585022a3;  op2val:0x1203965b
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x585022a3, 0x1203965b, x1, 228, x2)
+
+inst_90:
+// rs2_val == 0x7A9AC0A7 and rs1_val == 0xEE8F948A 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xee8f948a;  op2val:0x7a9ac0a7
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xee8f948a, 0x7a9ac0a7, x1, 232, x2)
+
+inst_91:
+// rs2_val == 0x2AA8E42F and rs1_val == 0x2655FA99 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x2655fa99;  op2val:0x2aa8e42f
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x2655fa99, 0x2aa8e42f, x1, 236, x2)
+
+inst_92:
+// rs2_val == 0x211D785F and rs1_val == 0x0C96A183 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xc96a183;  op2val:0x211d785f
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xc96a183, 0x211d785f, x1, 240, x2)
+
+inst_93:
+// rs2_val == 0x59DDE33F and rs1_val == 0x88F931F4 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x88f931f4;  op2val:0x59dde33f
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x88f931f4, 0x59dde33f, x1, 244, x2)
+
+inst_94:
+// rs2_val == 0x711E627F and rs1_val == 0x6F2BF862 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x6f2bf862;  op2val:0x711e627f
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x6f2bf862, 0x711e627f, x1, 248, x2)
+
+inst_95:
+// rs2_val == 0x19835AFF and rs1_val == 0x5C6C32A5 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x5c6c32a5;  op2val:0x19835aff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x5c6c32a5, 0x19835aff, x1, 252, x2)
+
+inst_96:
+// rs2_val == 0x088B3DFF and rs1_val == 0x58FC0342 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x58fc0342;  op2val:0x88b3dff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x58fc0342, 0x88b3dff, x1, 256, x2)
+
+inst_97:
+// rs2_val == 0x9A6DA3FF and rs1_val == 0x636A75E3 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x636a75e3;  op2val:0x9a6da3ff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x636a75e3, 0x9a6da3ff, x1, 260, x2)
+
+inst_98:
+// rs2_val == 0x37E0D7FF and rs1_val == 0x4ED62428 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x4ed62428;  op2val:0x37e0d7ff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x4ed62428, 0x37e0d7ff, x1, 264, x2)
+
+inst_99:
+// rs2_val == 0x5E59CFFF and rs1_val == 0xD2D12745 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xd2d12745;  op2val:0x5e59cfff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xd2d12745, 0x5e59cfff, x1, 268, x2)
+
+inst_100:
+// rs2_val == 0xDD129FFF and rs1_val == 0x0D770F3C 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xd770f3c;  op2val:0xdd129fff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xd770f3c, 0xdd129fff, x1, 272, x2)
+
+inst_101:
+// rs2_val == 0x872EBFFF and rs1_val == 0x2311ACFB 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x2311acfb;  op2val:0x872ebfff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x2311acfb, 0x872ebfff, x1, 276, x2)
+
+inst_102:
+// rs2_val == 0x55367FFF and rs1_val == 0x0FB13BBC 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfb13bbc;  op2val:0x55367fff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfb13bbc, 0x55367fff, x1, 280, x2)
+
+inst_103:
+// rs2_val == 0xFDD2FFFF and rs1_val == 0x8DFC2307 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x8dfc2307;  op2val:0xfdd2ffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x8dfc2307, 0xfdd2ffff, x1, 284, x2)
+
+inst_104:
+// rs2_val == 0x30BDFFFF and rs1_val == 0x7312BE6D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x7312be6d;  op2val:0x30bdffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x7312be6d, 0x30bdffff, x1, 288, x2)
+
+inst_105:
+// rs2_val == 0xA743FFFF and rs1_val == 0xC61B1FBF 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xc61b1fbf;  op2val:0xa743ffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xc61b1fbf, 0xa743ffff, x1, 292, x2)
+
+inst_106:
+// rs2_val == 0x9987FFFF and rs1_val == 0xEBDA5A4F 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xebda5a4f;  op2val:0x9987ffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xebda5a4f, 0x9987ffff, x1, 296, x2)
+
+inst_107:
+// rs2_val == 0x118FFFFF and rs1_val == 0xC215E193 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xc215e193;  op2val:0x118fffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xc215e193, 0x118fffff, x1, 300, x2)
+
+inst_108:
+// rs2_val == 0x65DFFFFF and rs1_val == 0x75EE935F 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x75ee935f;  op2val:0x65dfffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x75ee935f, 0x65dfffff, x1, 304, x2)
+
+inst_109:
+// rs2_val == 0x6CBFFFFF and rs1_val == 0x09C16162 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x9c16162;  op2val:0x6cbfffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x9c16162, 0x6cbfffff, x1, 308, x2)
+
+inst_110:
+// rs2_val == 0x347FFFFF and rs1_val == 0xA4053175 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xa4053175;  op2val:0x347fffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xa4053175, 0x347fffff, x1, 312, x2)
+
+inst_111:
+// rs2_val == 0xC4FFFFFF and rs1_val == 0x499006C8 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x499006c8;  op2val:0xc4ffffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x499006c8, 0xc4ffffff, x1, 316, x2)
+
+inst_112:
+// rs2_val == 0x41FFFFFF and rs1_val == 0x3C5B3EEE 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x3c5b3eee;  op2val:0x41ffffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x3c5b3eee, 0x41ffffff, x1, 320, x2)
+
+inst_113:
+// rs2_val == 0x6BFFFFFF and rs1_val == 0xD95FD86A 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xd95fd86a;  op2val:0x6bffffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xd95fd86a, 0x6bffffff, x1, 324, x2)
+
+inst_114:
+// rs2_val == 0x87FFFFFF and rs1_val == 0x25784F4F 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x25784f4f;  op2val:0x87ffffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x25784f4f, 0x87ffffff, x1, 328, x2)
+
+inst_115:
+// rs2_val == 0xCFFFFFFF and rs1_val == 0x082018FA 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x82018fa;  op2val:0xcfffffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x82018fa, 0xcfffffff, x1, 332, x2)
+
+inst_116:
+// rs2_val == 0x9FFFFFFF and rs1_val == 0x350CC530 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x350cc530;  op2val:0x9fffffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x350cc530, 0x9fffffff, x1, 336, x2)
+
+inst_117:
+// rs2_val == 0x3FFFFFFF and rs1_val == 0x7966A24E 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x7966a24e;  op2val:0x3fffffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x7966a24e, 0x3fffffff, x1, 340, x2)
+
+inst_118:
+// rs2_val == 0x7FFFFFFF and rs1_val == 0x51D6D6DA 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x51d6d6da;  op2val:0x7fffffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x51d6d6da, 0x7fffffff, x1, 344, x2)
+
+inst_119:
+// rs2_val == 0xFFFFFFFF and rs1_val == 0xD5A2038F 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xd5a2038f;  op2val:0xffffffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xd5a2038f, 0xffffffff, x1, 348, x2)
+
+inst_120:
+// rs1_val == 0xFF7746E6 and rs2_val == 0x4F829B65 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xff7746e6;  op2val:0x4f829b65
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xff7746e6, 0x4f829b65, x1, 352, x2)
+
+inst_121:
+// rs1_val == 0xF89A7241 and rs2_val == 0x00C2F091 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xf89a7241;  op2val:0xc2f091
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xf89a7241, 0xc2f091, x1, 356, x2)
+
+inst_122:
+// rs1_val == 0x11B36A93 and rs2_val == 0xB1F5D853 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x11b36a93;  op2val:0xb1f5d853
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x11b36a93, 0xb1f5d853, x1, 360, x2)
+
+inst_123:
+// rs1_val == 0xC9932457 and rs2_val == 0x39BE2172 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xc9932457;  op2val:0x39be2172
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xc9932457, 0x39be2172, x1, 364, x2)
+
+inst_124:
+// rs1_val == 0x4B9A6C8F and rs2_val == 0x316039EE 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x4b9a6c8f;  op2val:0x316039ee
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x4b9a6c8f, 0x316039ee, x1, 368, x2)
+
+inst_125:
+// rs1_val == 0x9541241F and rs2_val == 0x5761A866 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x9541241f;  op2val:0x5761a866
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x9541241f, 0x5761a866, x1, 372, x2)
+
+inst_126:
+// rs1_val == 0x94B431BF and rs2_val == 0x09E4D1F4 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x94b431bf;  op2val:0x9e4d1f4
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x94b431bf, 0x9e4d1f4, x1, 376, x2)
+
+inst_127:
+// rs1_val == 0xDC8FE97F and rs2_val == 0x9E03793F 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xdc8fe97f;  op2val:0x9e03793f
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xdc8fe97f, 0x9e03793f, x1, 380, x2)
+
+inst_128:
+// rs1_val == 0xB903CEFF and rs2_val == 0x7F1071EC 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xb903ceff;  op2val:0x7f1071ec
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xb903ceff, 0x7f1071ec, x1, 384, x2)
+
+inst_129:
+// rs1_val == 0xB494A5FF and rs2_val == 0x9A7EF9E4 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xb494a5ff;  op2val:0x9a7ef9e4
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xb494a5ff, 0x9a7ef9e4, x1, 388, x2)
+
+inst_130:
+// rs1_val == 0xE2DD83FF and rs2_val == 0x59C05BB9 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xe2dd83ff;  op2val:0x59c05bb9
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xe2dd83ff, 0x59c05bb9, x1, 392, x2)
+
+inst_131:
+// rs1_val == 0xBBAFD7FF and rs2_val == 0xDE451397 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xbbafd7ff;  op2val:0xde451397
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xbbafd7ff, 0xde451397, x1, 396, x2)
+
+inst_132:
+// rs1_val == 0xCE5C4FFF and rs2_val == 0x40F27005 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xce5c4fff;  op2val:0x40f27005
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xce5c4fff, 0x40f27005, x1, 400, x2)
+
+inst_133:
+// rs1_val == 0x39935FFF and rs2_val == 0x24496FE3 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x39935fff;  op2val:0x24496fe3
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x39935fff, 0x24496fe3, x1, 404, x2)
+
+inst_134:
+// rs1_val == 0xEED7BFFF and rs2_val == 0xDE14BFF2 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xeed7bfff;  op2val:0xde14bff2
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xeed7bfff, 0xde14bff2, x1, 408, x2)
+
+inst_135:
+// rs1_val == 0x008E7FFF and rs2_val == 0xB808A677 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x8e7fff;  op2val:0xb808a677
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x8e7fff, 0xb808a677, x1, 412, x2)
+
+inst_136:
+// rs1_val == 0x12C2FFFF and rs2_val == 0x76B1FD3D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x12c2ffff;  op2val:0x76b1fd3d
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x12c2ffff, 0x76b1fd3d, x1, 416, x2)
+
+inst_137:
+// rs1_val == 0xE3A5FFFF and rs2_val == 0x5DCF019D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xe3a5ffff;  op2val:0x5dcf019d
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xe3a5ffff, 0x5dcf019d, x1, 420, x2)
+
+inst_138:
+// rs1_val == 0x9B03FFFF and rs2_val == 0x47B7097B 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x9b03ffff;  op2val:0x47b7097b
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x9b03ffff, 0x47b7097b, x1, 424, x2)
+
+inst_139:
+// rs1_val == 0x5F07FFFF and rs2_val == 0x759F1B43 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x5f07ffff;  op2val:0x759f1b43
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x5f07ffff, 0x759f1b43, x1, 428, x2)
+
+inst_140:
+// rs1_val == 0x33CFFFFF and rs2_val == 0x5B331999 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x33cfffff;  op2val:0x5b331999
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x33cfffff, 0x5b331999, x1, 432, x2)
+
+inst_141:
+// rs1_val == 0x709FFFFF and rs2_val == 0x2D37DE81 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x709fffff;  op2val:0x2d37de81
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x709fffff, 0x2d37de81, x1, 436, x2)
+
+inst_142:
+// rs1_val == 0xD1BFFFFF and rs2_val == 0xFCB627AF 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xd1bfffff;  op2val:0xfcb627af
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xd1bfffff, 0xfcb627af, x1, 440, x2)
+
+inst_143:
+// rs1_val == 0xAB7FFFFF and rs2_val == 0x1E0B4EE5 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xab7fffff;  op2val:0x1e0b4ee5
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xab7fffff, 0x1e0b4ee5, x1, 444, x2)
+
+inst_144:
+// rs1_val == 0x7CFFFFFF and rs2_val == 0xFB3E7196 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x7cffffff;  op2val:0xfb3e7196
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x7cffffff, 0xfb3e7196, x1, 448, x2)
+
+inst_145:
+// rs1_val == 0x59FFFFFF and rs2_val == 0xD9959A62 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x59ffffff;  op2val:0xd9959a62
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x59ffffff, 0xd9959a62, x1, 452, x2)
+
+inst_146:
+// rs1_val == 0xDBFFFFFF and rs2_val == 0xE08409F0 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xdbffffff;  op2val:0xe08409f0
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xdbffffff, 0xe08409f0, x1, 456, x2)
+
+inst_147:
+// rs1_val == 0xF7FFFFFF and rs2_val == 0x258ECECB 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xf7ffffff;  op2val:0x258ececb
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xf7ffffff, 0x258ececb, x1, 460, x2)
+
+inst_148:
+// rs1_val == 0x6FFFFFFF and rs2_val == 0xFF7D5EC0 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x6fffffff;  op2val:0xff7d5ec0
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x6fffffff, 0xff7d5ec0, x1, 464, x2)
+
+inst_149:
+// rs1_val == 0x9FFFFFFF and rs2_val == 0x4B6EA010 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x9fffffff;  op2val:0x4b6ea010
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x9fffffff, 0x4b6ea010, x1, 468, x2)
+
+inst_150:
+// rs1_val == 0x3FFFFFFF and rs2_val == 0xD885BBAC 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x3fffffff;  op2val:0xd885bbac
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x3fffffff, 0xd885bbac, x1, 472, x2)
+
+inst_151:
+// rs1_val == 0x7FFFFFFF and rs2_val == 0xBBE8F88D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x7fffffff;  op2val:0xbbe8f88d
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x7fffffff, 0xbbe8f88d, x1, 476, x2)
+
+inst_152:
+// rs1_val == 0xFFFFFFFF and rs2_val == 0xE3D6E4B9 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xffffffff;  op2val:0xe3d6e4b9
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xffffffff, 0xe3d6e4b9, x1, 480, x2)
+
+inst_153:
+// rs2_val == 0x970216FD and rs1_val == 0x0494B6D2 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x494b6d2;  op2val:0x970216fd
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x494b6d2, 0x970216fd, x1, 484, x2)
+
+inst_154:
+// rs2_val == 0x5CB58B8F and rs1_val == 0xF2650B71 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xf2650b71;  op2val:0x5cb58b8f
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xf2650b71, 0x5cb58b8f, x1, 488, x2)
+
+inst_155:
+// rs2_val == 0x27EFDA6C and rs1_val == 0x21AF214A 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x21af214a;  op2val:0x27efda6c
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x21af214a, 0x27efda6c, x1, 492, x2)
+
+inst_156:
+// rs2_val == 0x1D1EF7C0 and rs1_val == 0x482EA760 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x482ea760;  op2val:0x1d1ef7c0
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x482ea760, 0x1d1ef7c0, x1, 496, x2)
+
+inst_157:
+// rs2_val == 0x0FC2A909 and rs1_val == 0x0F7A0443 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xf7a0443;  op2val:0xfc2a909
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xf7a0443, 0xfc2a909, x1, 500, x2)
+
+inst_158:
+// rs2_val == 0x04E9E4A6 and rs1_val == 0x69534048 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x69534048;  op2val:0x4e9e4a6
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x69534048, 0x4e9e4a6, x1, 504, x2)
+
+inst_159:
+// rs2_val == 0x025FDCD7 and rs1_val == 0x043E3EF5 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x43e3ef5;  op2val:0x25fdcd7
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x43e3ef5, 0x25fdcd7, x1, 508, x2)
+
+inst_160:
+// rs2_val == 0x01782EBC and rs1_val == 0x12FAD802 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x12fad802;  op2val:0x1782ebc
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x12fad802, 0x1782ebc, x1, 512, x2)
+
+inst_161:
+// rs2_val == 0x00A39575 and rs1_val == 0x119B4FE5 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x119b4fe5;  op2val:0xa39575
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x119b4fe5, 0xa39575, x1, 516, x2)
+
+inst_162:
+// rs2_val == 0x0049886F and rs1_val == 0x7DB224CB 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x7db224cb;  op2val:0x49886f
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x7db224cb, 0x49886f, x1, 520, x2)
+
+inst_163:
+// rs2_val == 0x0025693C and rs1_val == 0xB45F51C3 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xb45f51c3;  op2val:0x25693c
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xb45f51c3, 0x25693c, x1, 524, x2)
+
+inst_164:
+// rs2_val == 0x0018031A and rs1_val == 0x41536363 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x41536363;  op2val:0x18031a
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x41536363, 0x18031a, x1, 528, x2)
+
+inst_165:
+// rs2_val == 0x000A8267 and rs1_val == 0x1A953CCA 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x1a953cca;  op2val:0xa8267
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x1a953cca, 0xa8267, x1, 532, x2)
+
+inst_166:
+// rs2_val == 0x00073010 and rs1_val == 0x14186EBF 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x14186ebf;  op2val:0x73010
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x14186ebf, 0x73010, x1, 536, x2)
+
+inst_167:
+// rs2_val == 0x00038734 and rs1_val == 0xF33C1A7F 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xf33c1a7f;  op2val:0x38734
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xf33c1a7f, 0x38734, x1, 540, x2)
+
+inst_168:
+// rs2_val == 0x0001EAB1 and rs1_val == 0x8DCE6F52 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x8dce6f52;  op2val:0x1eab1
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x8dce6f52, 0x1eab1, x1, 544, x2)
+
+inst_169:
+// rs2_val == 0x0000B8EC and rs1_val == 0x3096C6C8 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x3096c6c8;  op2val:0xb8ec
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x3096c6c8, 0xb8ec, x1, 548, x2)
+
+inst_170:
+// rs2_val == 0x00007530 and rs1_val == 0x9C461CB5 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x9c461cb5;  op2val:0x7530
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x9c461cb5, 0x7530, x1, 552, x2)
+
+inst_171:
+// rs2_val == 0x00003ED5 and rs1_val == 0x27756991 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x27756991;  op2val:0x3ed5
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x27756991, 0x3ed5, x1, 556, x2)
+
+inst_172:
+// rs2_val == 0x00001055 and rs1_val == 0x62D74145 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x62d74145;  op2val:0x1055
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x62d74145, 0x1055, x1, 560, x2)
+
+inst_173:
+// rs2_val == 0x00000E9E and rs1_val == 0x931719FD 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x931719fd;  op2val:0xe9e
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x931719fd, 0xe9e, x1, 564, x2)
+
+inst_174:
+// rs2_val == 0x0000059B and rs1_val == 0x965768E0 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x965768e0;  op2val:0x59b
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x965768e0, 0x59b, x1, 568, x2)
+
+inst_175:
+// rs2_val == 0x00000208 and rs1_val == 0x74057241 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x74057241;  op2val:0x208
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x74057241, 0x208, x1, 572, x2)
+
+inst_176:
+// rs2_val == 0x000001E8 and rs1_val == 0x5E617F8E 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x5e617f8e;  op2val:0x1e8
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x5e617f8e, 0x1e8, x1, 576, x2)
+
+inst_177:
+// rs2_val == 0x000000D2 and rs1_val == 0x3E361858 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x3e361858;  op2val:0xd2
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x3e361858, 0xd2, x1, 580, x2)
+
+inst_178:
+// rs2_val == 0x00000071 and rs1_val == 0x13041452 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x13041452;  op2val:0x71
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x13041452, 0x71, x1, 584, x2)
+
+inst_179:
+// rs2_val == 0x00000034 and rs1_val == 0x4BDBF090 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x4bdbf090;  op2val:0x34
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x4bdbf090, 0x34, x1, 588, x2)
+
+inst_180:
+// rs2_val == 0x00000019 and rs1_val == 0x9C3ECB54 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x9c3ecb54;  op2val:0x19
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x9c3ecb54, 0x19, x1, 592, x2)
+
+inst_181:
+// rs2_val == 0x0000000B and rs1_val == 0x421E7A60 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x421e7a60;  op2val:0xb
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x421e7a60, 0xb, x1, 596, x2)
+
+inst_182:
+// rs2_val == 0x00000005 and rs1_val == 0x2577C1EC 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x2577c1ec;  op2val:0x5
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x2577c1ec, 0x5, x1, 600, x2)
+
+inst_183:
+// rs2_val == 0x00000002 and rs1_val == 0x19AF685D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x19af685d;  op2val:0x2
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x19af685d, 0x2, x1, 604, x2)
+
+inst_184:
+// rs2_val == 0x00000001 and rs1_val == 0x2FF36007 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x2ff36007;  op2val:0x1
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x2ff36007, 0x1, x1, 608, x2)
+
+inst_185:
+// rs2_val == 0x00000000 and rs1_val == 0xE286852C 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xe286852c;  op2val:0x0
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xe286852c, 0x0, x1, 612, x2)
+
+inst_186:
+// rs1_val == 0xC511488A and rs2_val == 0x97BDD982 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xc511488a;  op2val:0x97bdd982
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xc511488a, 0x97bdd982, x1, 616, x2)
+
+inst_187:
+// rs1_val == 0x65151C41 and rs2_val == 0x367E5D6D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x65151c41;  op2val:0x367e5d6d
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x65151c41, 0x367e5d6d, x1, 620, x2)
+
+inst_188:
+// rs1_val == 0x24CA83B3 and rs2_val == 0x623D8EB7 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x24ca83b3;  op2val:0x623d8eb7
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x24ca83b3, 0x623d8eb7, x1, 624, x2)
+
+inst_189:
+// rs1_val == 0x1C3B66FB and rs2_val == 0x21870F0B 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x1c3b66fb;  op2val:0x21870f0b
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x1c3b66fb, 0x21870f0b, x1, 628, x2)
+
+inst_190:
+// rs1_val == 0x0A8A6FD0 and rs2_val == 0x82450164 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xa8a6fd0;  op2val:0x82450164
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xa8a6fd0, 0x82450164, x1, 632, x2)
+
+inst_191:
+// rs1_val == 0x069CA08C and rs2_val == 0x8F2DF760 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x69ca08c;  op2val:0x8f2df760
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x69ca08c, 0x8f2df760, x1, 636, x2)
+
+inst_192:
+// rs1_val == 0x03552C95 and rs2_val == 0x7CA07386 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x3552c95;  op2val:0x7ca07386
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x3552c95, 0x7ca07386, x1, 640, x2)
+
+inst_193:
+// rs1_val == 0x0174EA19 and rs2_val == 0x19DE2BC1 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x174ea19;  op2val:0x19de2bc1
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x174ea19, 0x19de2bc1, x1, 644, x2)
+
+inst_194:
+// rs1_val == 0x00A454F2 and rs2_val == 0xEC3FBF4D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xa454f2;  op2val:0xec3fbf4d
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xa454f2, 0xec3fbf4d, x1, 648, x2)
+
+inst_195:
+// rs1_val == 0x007E9BEE and rs2_val == 0x164F1513 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x7e9bee;  op2val:0x164f1513
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x7e9bee, 0x164f1513, x1, 652, x2)
+
+inst_196:
+// rs1_val == 0x002C7CD0 and rs2_val == 0xACC6D8F2 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x2c7cd0;  op2val:0xacc6d8f2
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x2c7cd0, 0xacc6d8f2, x1, 656, x2)
+
+inst_197:
+// rs1_val == 0x00177310 and rs2_val == 0xA123F501 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x177310;  op2val:0xa123f501
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x177310, 0xa123f501, x1, 660, x2)
+
+inst_198:
+// rs1_val == 0x00091609 and rs2_val == 0xB57A6A1D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x91609;  op2val:0xb57a6a1d
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x91609, 0xb57a6a1d, x1, 664, x2)
+
+inst_199:
+// rs1_val == 0x00040BE0 and rs2_val == 0xE90794DF 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x40be0;  op2val:0xe90794df
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x40be0, 0xe90794df, x1, 668, x2)
+
+inst_200:
+// rs1_val == 0x00028D1B and rs2_val == 0xAF5570EE 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x28d1b;  op2val:0xaf5570ee
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x28d1b, 0xaf5570ee, x1, 672, x2)
+
+inst_201:
+// rs1_val == 0x0001FBE5 and rs2_val == 0xD8B9B45C 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x1fbe5;  op2val:0xd8b9b45c
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x1fbe5, 0xd8b9b45c, x1, 676, x2)
+
+inst_202:
+// rs1_val == 0x0000AAC1 and rs2_val == 0x1BA1192E 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xaac1;  op2val:0x1ba1192e
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xaac1, 0x1ba1192e, x1, 680, x2)
+
+inst_203:
+// rs1_val == 0x000062C3 and rs2_val == 0x49FE85B0 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x62c3;  op2val:0x49fe85b0
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x62c3, 0x49fe85b0, x1, 684, x2)
+
+inst_204:
+// rs1_val == 0x000022FD and rs2_val == 0x4105CCA7 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x22fd;  op2val:0x4105cca7
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x22fd, 0x4105cca7, x1, 688, x2)
+
+inst_205:
+// rs1_val == 0x000016B3 and rs2_val == 0xD7185DDA 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x16b3;  op2val:0xd7185dda
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x16b3, 0xd7185dda, x1, 692, x2)
+
+inst_206:
+// rs1_val == 0x00000A38 and rs2_val == 0xA7A11490 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xa38;  op2val:0xa7a11490
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xa38, 0xa7a11490, x1, 696, x2)
+
+inst_207:
+// rs1_val == 0x000006A7 and rs2_val == 0xA9964AEF 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x6a7;  op2val:0xa9964aef
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x6a7, 0xa9964aef, x1, 700, x2)
+
+inst_208:
+// rs1_val == 0x000003B9 and rs2_val == 0x4B4D8474 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x3b9;  op2val:0x4b4d8474
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x3b9, 0x4b4d8474, x1, 704, x2)
+
+inst_209:
+// rs1_val == 0x00000190 and rs2_val == 0x76C468AE 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x190;  op2val:0x76c468ae
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x190, 0x76c468ae, x1, 708, x2)
+
+inst_210:
+// rs1_val == 0x000000D4 and rs2_val == 0x09208A65 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xd4;  op2val:0x9208a65
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xd4, 0x9208a65, x1, 712, x2)
+
+inst_211:
+// rs1_val == 0x00000067 and rs2_val == 0x8743FEB6 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x67;  op2val:0x8743feb6
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x67, 0x8743feb6, x1, 716, x2)
+
+inst_212:
+// rs1_val == 0x00000039 and rs2_val == 0xA66B0D38 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x39;  op2val:0xa66b0d38
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x39, 0xa66b0d38, x1, 720, x2)
+
+inst_213:
+// rs1_val == 0x0000001C and rs2_val == 0xFB710734 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x1c;  op2val:0xfb710734
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x1c, 0xfb710734, x1, 724, x2)
+
+inst_214:
+// rs1_val == 0x0000000E and rs2_val == 0xA26B7F62 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xe;  op2val:0xa26b7f62
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xe, 0xa26b7f62, x1, 728, x2)
+
+inst_215:
+// rs1_val == 0x00000007 and rs2_val == 0x4DABB481 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x7;  op2val:0x4dabb481
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x7, 0x4dabb481, x1, 732, x2)
+
+inst_216:
+// rs1_val == 0x00000003 and rs2_val == 0x2FA91425 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x2fa91425
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x3, 0x2fa91425, x1, 736, x2)
+
+inst_217:
+// rs1_val == 0x00000001 and rs2_val == 0x965EDA32 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x965eda32
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x1, 0x965eda32, x1, 740, x2)
+
+inst_218:
+// rs1_val == 0x00000000 and rs2_val == 0xC7FDE805 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xc7fde805
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x0, 0xc7fde805, x1, 744, x2)
+
+inst_219:
+// rs2_val == 0x6D3F408C and rs1_val == 0xFFEC35FE 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xffec35fe;  op2val:0x6d3f408c
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xffec35fe, 0x6d3f408c, x1, 748, x2)
+
+inst_220:
+// rs2_val == 0x946A3674 and rs1_val == 0x976AD220 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x976ad220;  op2val:0x946a3674
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x976ad220, 0x946a3674, x1, 752, x2)
+
+inst_221:
+// rs2_val == 0xDC6113A4 and rs1_val == 0x5990FE96 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x5990fe96;  op2val:0xdc6113a4
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x5990fe96, 0xdc6113a4, x1, 756, x2)
+
+inst_222:
+// rs2_val == 0xE42A809C and rs1_val == 0xC96EFDC4 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xc96efdc4;  op2val:0xe42a809c
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xc96efdc4, 0xe42a809c, x1, 760, x2)
+
+inst_223:
+// rs2_val == 0xF1A25760 and rs1_val == 0xAB8534C1 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xab8534c1;  op2val:0xf1a25760
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xab8534c1, 0xf1a25760, x1, 764, x2)
+
+inst_224:
+// rs2_val == 0xFB37BEC9 and rs1_val == 0xD1142724 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xd1142724;  op2val:0xfb37bec9
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xd1142724, 0xfb37bec9, x1, 768, x2)
+
+inst_225:
+// rs2_val == 0xFCE51A66 and rs1_val == 0xF65E7737 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xf65e7737;  op2val:0xfce51a66
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xf65e7737, 0xfce51a66, x1, 772, x2)
+
+inst_226:
+// rs2_val == 0xFEDEBB9C and rs1_val == 0x16CBC21C 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x16cbc21c;  op2val:0xfedebb9c
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x16cbc21c, 0xfedebb9c, x1, 776, x2)
+
+inst_227:
+// rs2_val == 0xFF69340A and rs1_val == 0xDBDD4DD9 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xdbdd4dd9;  op2val:0xff69340a
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xdbdd4dd9, 0xff69340a, x1, 780, x2)
+
+inst_228:
+// rs2_val == 0xFF9CF3F4 and rs1_val == 0x4BD90A77 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x4bd90a77;  op2val:0xff9cf3f4
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x4bd90a77, 0xff9cf3f4, x1, 784, x2)
+
+inst_229:
+// rs2_val == 0xFFC00793 and rs1_val == 0xCEBE24D9 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xcebe24d9;  op2val:0xffc00793
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xcebe24d9, 0xffc00793, x1, 788, x2)
+
+inst_230:
+// rs2_val == 0xFFEE1FC4 and rs1_val == 0xA0E0BD86 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xa0e0bd86;  op2val:0xffee1fc4
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xa0e0bd86, 0xffee1fc4, x1, 792, x2)
+
+inst_231:
+// rs2_val == 0xFFF06038 and rs1_val == 0x3CC279B3 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x3cc279b3;  op2val:0xfff06038
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x3cc279b3, 0xfff06038, x1, 796, x2)
+
+inst_232:
+// rs2_val == 0xFFF93D53 and rs1_val == 0x754F9B96 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x754f9b96;  op2val:0xfff93d53
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x754f9b96, 0xfff93d53, x1, 800, x2)
+
+inst_233:
+// rs2_val == 0xFFFC47E8 and rs1_val == 0x72745307 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x72745307;  op2val:0xfffc47e8
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x72745307, 0xfffc47e8, x1, 804, x2)
+
+inst_234:
+// rs2_val == 0xFFFE7302 and rs1_val == 0xDCAE6D62 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xdcae6d62;  op2val:0xfffe7302
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xdcae6d62, 0xfffe7302, x1, 808, x2)
+
+inst_235:
+// rs2_val == 0xFFFF1CE8 and rs1_val == 0x7C2C966D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x7c2c966d;  op2val:0xffff1ce8
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x7c2c966d, 0xffff1ce8, x1, 812, x2)
+
+inst_236:
+// rs2_val == 0xFFFFB5C6 and rs1_val == 0x9BB4752D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x9bb4752d;  op2val:0xffffb5c6
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x9bb4752d, 0xffffb5c6, x1, 816, x2)
+
+inst_237:
+// rs2_val == 0xFFFFDFA4 and rs1_val == 0x17BE082F 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x17be082f;  op2val:0xffffdfa4
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x17be082f, 0xffffdfa4, x1, 820, x2)
+
+inst_238:
+// rs2_val == 0xFFFFEF0B and rs1_val == 0x109FF475 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x109ff475;  op2val:0xffffef0b
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x109ff475, 0xffffef0b, x1, 824, x2)
+
+inst_239:
+// rs2_val == 0xFFFFF43F and rs1_val == 0x00B97EA6 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xb97ea6;  op2val:0xfffff43f
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xb97ea6, 0xfffff43f, x1, 828, x2)
+
+inst_240:
+// rs2_val == 0xFFFFFB4A and rs1_val == 0xF956EC0B 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xf956ec0b;  op2val:0xfffffb4a
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xf956ec0b, 0xfffffb4a, x1, 832, x2)
+
+inst_241:
+// rs2_val == 0xFFFFFDA4 and rs1_val == 0x70FC1AFC 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x70fc1afc;  op2val:0xfffffda4
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x70fc1afc, 0xfffffda4, x1, 836, x2)
+
+inst_242:
+// rs2_val == 0xFFFFFECB and rs1_val == 0x6348306E 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x6348306e;  op2val:0xfffffecb
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x6348306e, 0xfffffecb, x1, 840, x2)
+
+inst_243:
+// rs2_val == 0xFFFFFF54 and rs1_val == 0x66B072B9 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x66b072b9;  op2val:0xffffff54
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x66b072b9, 0xffffff54, x1, 844, x2)
+
+inst_244:
+// rs2_val == 0xFFFFFFA9 and rs1_val == 0x7FF822ED 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x7ff822ed;  op2val:0xffffffa9
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x7ff822ed, 0xffffffa9, x1, 848, x2)
+
+inst_245:
+// rs2_val == 0xFFFFFFC3 and rs1_val == 0xE918BE9F 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xe918be9f;  op2val:0xffffffc3
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xe918be9f, 0xffffffc3, x1, 852, x2)
+
+inst_246:
+// rs2_val == 0xFFFFFFE7 and rs1_val == 0xE4BAE7F6 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xe4bae7f6;  op2val:0xffffffe7
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xe4bae7f6, 0xffffffe7, x1, 856, x2)
+
+inst_247:
+// rs2_val == 0xFFFFFFF1 and rs1_val == 0xDE9A896F 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xde9a896f;  op2val:0xfffffff1
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xde9a896f, 0xfffffff1, x1, 860, x2)
+
+inst_248:
+// rs2_val == 0xFFFFFFF8 and rs1_val == 0x2881E531 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x2881e531;  op2val:0xfffffff8
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x2881e531, 0xfffffff8, x1, 864, x2)
+
+inst_249:
+// rs2_val == 0xFFFFFFFC and rs1_val == 0x1475F78D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x1475f78d;  op2val:0xfffffffc
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x1475f78d, 0xfffffffc, x1, 868, x2)
+
+inst_250:
+// rs2_val == 0xFFFFFFFE and rs1_val == 0xE59CF78F 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xe59cf78f;  op2val:0xfffffffe
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xe59cf78f, 0xfffffffe, x1, 872, x2)
+
+inst_251:
+// rs2_val == 0xFFFFFFFF and rs1_val == 0xB66B3284 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xb66b3284;  op2val:0xffffffff
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xb66b3284, 0xffffffff, x1, 876, x2)
+
+inst_252:
+// rs1_val == 0x6F4930C9 and rs2_val == 0x39422745 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x6f4930c9;  op2val:0x39422745
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x6f4930c9, 0x39422745, x1, 880, x2)
+
+inst_253:
+// rs1_val == 0x85D97467 and rs2_val == 0x58FA6E1C 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x85d97467;  op2val:0x58fa6e1c
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x85d97467, 0x58fa6e1c, x1, 884, x2)
+
+inst_254:
+// rs1_val == 0xC70AFC93 and rs2_val == 0x2D143295 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xc70afc93;  op2val:0x2d143295
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xc70afc93, 0x2d143295, x1, 888, x2)
+
+inst_255:
+// rs1_val == 0xE911655F and rs2_val == 0xD230B46C 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xe911655f;  op2val:0xd230b46c
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xe911655f, 0xd230b46c, x1, 892, x2)
+
+inst_256:
+// rs1_val == 0xF4AB0A39 and rs2_val == 0x4D753AC1 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xf4ab0a39;  op2val:0x4d753ac1
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xf4ab0a39, 0x4d753ac1, x1, 896, x2)
+
+inst_257:
+// rs1_val == 0xF8BD4821 and rs2_val == 0x1E9667C2 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xf8bd4821;  op2val:0x1e9667c2
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xf8bd4821, 0x1e9667c2, x1, 900, x2)
+
+inst_258:
+// rs1_val == 0xFCD7E667 and rs2_val == 0xAE4839A1 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfcd7e667;  op2val:0xae4839a1
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfcd7e667, 0xae4839a1, x1, 904, x2)
+
+inst_259:
+// rs1_val == 0xFE71CFDF and rs2_val == 0x6A013380 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfe71cfdf;  op2val:0x6a013380
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfe71cfdf, 0x6a013380, x1, 908, x2)
+
+inst_260:
+// rs1_val == 0xFF1C11AE and rs2_val == 0x59432A19 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xff1c11ae;  op2val:0x59432a19
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xff1c11ae, 0x59432a19, x1, 912, x2)
+
+inst_261:
+// rs1_val == 0xFF89799A and rs2_val == 0xCEB506F6 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xff89799a;  op2val:0xceb506f6
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xff89799a, 0xceb506f6, x1, 916, x2)
+
+inst_262:
+// rs1_val == 0xFFC80B13 and rs2_val == 0xC5EC6148 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xffc80b13;  op2val:0xc5ec6148
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xffc80b13, 0xc5ec6148, x1, 920, x2)
+
+inst_263:
+// rs1_val == 0xFFE94647 and rs2_val == 0x99EF1857 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xffe94647;  op2val:0x99ef1857
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xffe94647, 0x99ef1857, x1, 924, x2)
+
+inst_264:
+// rs1_val == 0xFFF263CF and rs2_val == 0x14B91C79 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfff263cf;  op2val:0x14b91c79
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfff263cf, 0x14b91c79, x1, 928, x2)
+
+inst_265:
+// rs1_val == 0xFFF919A1 and rs2_val == 0xA86B8A6E 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfff919a1;  op2val:0xa86b8a6e
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfff919a1, 0xa86b8a6e, x1, 932, x2)
+
+inst_266:
+// rs1_val == 0xFFFDE89D and rs2_val == 0x08208D09 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfffde89d;  op2val:0x8208d09
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfffde89d, 0x8208d09, x1, 936, x2)
+
+inst_267:
+// rs1_val == 0xFFFEC9D0 and rs2_val == 0x69B1DCBF 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfffec9d0;  op2val:0x69b1dcbf
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfffec9d0, 0x69b1dcbf, x1, 940, x2)
+
+inst_268:
+// rs1_val == 0xFFFF5576 and rs2_val == 0x807DA245 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xffff5576;  op2val:0x807da245
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xffff5576, 0x807da245, x1, 944, x2)
+
+inst_269:
+// rs1_val == 0xFFFFB6DF and rs2_val == 0x95A4D257 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xffffb6df;  op2val:0x95a4d257
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xffffb6df, 0x95a4d257, x1, 948, x2)
+
+inst_270:
+// rs1_val == 0xFFFFC561 and rs2_val == 0x735C076B 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xffffc561;  op2val:0x735c076b
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xffffc561, 0x735c076b, x1, 952, x2)
+
+inst_271:
+// rs1_val == 0xFFFFEAB5 and rs2_val == 0xE5F0307E 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xffffeab5;  op2val:0xe5f0307e
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xffffeab5, 0xe5f0307e, x1, 956, x2)
+
+inst_272:
+// rs1_val == 0xFFFFF602 and rs2_val == 0xE8DAC663 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfffff602;  op2val:0xe8dac663
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfffff602, 0xe8dac663, x1, 960, x2)
+
+inst_273:
+// rs1_val == 0xFFFFF8B1 and rs2_val == 0x0109C207 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfffff8b1;  op2val:0x109c207
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfffff8b1, 0x109c207, x1, 964, x2)
+
+inst_274:
+// rs1_val == 0xFFFFFCA0 and rs2_val == 0x600FECC1 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfffffca0;  op2val:0x600fecc1
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfffffca0, 0x600fecc1, x1, 968, x2)
+
+inst_275:
+// rs1_val == 0xFFFFFECC and rs2_val == 0xFB7F6F5D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfffffecc;  op2val:0xfb7f6f5d
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfffffecc, 0xfb7f6f5d, x1, 972, x2)
+
+inst_276:
+// rs1_val == 0xFFFFFF6E and rs2_val == 0x5CD2875E 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xffffff6e;  op2val:0x5cd2875e
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xffffff6e, 0x5cd2875e, x1, 976, x2)
+
+inst_277:
+// rs1_val == 0xFFFFFF84 and rs2_val == 0xACCA7F0D 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xffffff84;  op2val:0xacca7f0d
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xffffff84, 0xacca7f0d, x1, 980, x2)
+
+inst_278:
+// rs1_val == 0xFFFFFFDD and rs2_val == 0x5AE6A228 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xffffffdd;  op2val:0x5ae6a228
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xffffffdd, 0x5ae6a228, x1, 984, x2)
+
+inst_279:
+// rs1_val == 0xFFFFFFE7 and rs2_val == 0xFF1E5BEF 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xffffffe7;  op2val:0xff1e5bef
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xffffffe7, 0xff1e5bef, x1, 988, x2)
+
+inst_280:
+// rs1_val == 0xFFFFFFF4 and rs2_val == 0x137A9777 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfffffff4;  op2val:0x137a9777
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfffffff4, 0x137a9777, x1, 992, x2)
+
+inst_281:
+// rs1_val == 0xFFFFFFFA and rs2_val == 0x854A9657 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffa;  op2val:0x854a9657
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfffffffa, 0x854a9657, x1, 996, x2)
+
+inst_282:
+// rs1_val == 0xFFFFFFFD and rs2_val == 0xCF84B683 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffd;  op2val:0xcf84b683
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfffffffd, 0xcf84b683, x1, 1000, x2)
+
+inst_283:
+// rs1_val == 0xFFFFFFFE and rs2_val == 0x93FDCAB8 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffe;  op2val:0x93fdcab8
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xfffffffe, 0x93fdcab8, x1, 1004, x2)
+
+inst_284:
+// rs1_val == 0x91766f62 and rs2_val == 0x5570084b 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x91766f62;  op2val:0x5570084b
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x91766f62, 0x5570084b, x1, 1008, x2)
+
+inst_285:
+// rs1_val == 0xc0fe15dd and rs2_val == 0x9f053821 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xc0fe15dd;  op2val:0x9f053821
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xc0fe15dd, 0x9f053821, x1, 1012, x2)
+
+inst_286:
+// rs1_val == 0xf7f1305a and rs2_val == 0x9bedfe39 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0xf7f1305a;  op2val:0x9bedfe39
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0xf7f1305a, 0x9bedfe39, x1, 1016, x2)
+
+inst_287:
+// rs1_val == 0x55d98c6e and rs2_val == 0x2daf9ac7 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x55d98c6e;  op2val:0x2daf9ac7
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x55d98c6e, 0x2daf9ac7, x1, 1020, x2)
+
+inst_288:
+// rs2_val == 0xB8000000 and rs1_val == 0x9C734D77 
+// opcode: xperm4 ; op1:x10; op2:x11; dest:x12; op1val:0x9c734d77;  op2val:0xb8000000
+TEST_RR_OP(xperm4, x12, x10, x11, 0x00000000, 0x9c734d77, 0xb8000000, x1, 1024, x2)
+#endif
+
+
+RVTEST_CODE_END
+RVMODEL_HALT
+
+RVTEST_DATA_BEGIN
+.align 4
+rvtest_data:
+.word 0xbabecafe
+RVTEST_DATA_END
+
+RVMODEL_DATA_BEGIN
+
+
+signature_x10_0:
+    .fill 0*(XLEN/32),4,0xdeadbeef
+
+
+signature_x10_1:
+    .fill 16*(XLEN/32),4,0xdeadbeef
+
+
+signature_x8_0:
+    .fill 16*(XLEN/32),4,0xdeadbeef
+
+
+signature_x1_0:
+    .fill 257*(XLEN/32),4,0xdeadbeef
+
+#ifdef rvtest_mtrap_routine
+
+mtrap_sigptr:
+    .fill 64*(XLEN/32),4,0xdeadbeef
+
+#endif
+
+#ifdef rvtest_gpr_save
+
+gpr_save:
+    .fill 32*(XLEN/32),4,0xdeadbeef
+
+#endif
+
+RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/K/src/xperm8-01.S b/riscv-test-suite/rv32i_m/K/src/xperm8-01.S
new file mode 100644
index 0000000..3df51e1
--- /dev/null
+++ b/riscv-test-suite/rv32i_m/K/src/xperm8-01.S
@@ -0,0 +1,1516 @@
+// -----------
+// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
+// version   : 0.4.5
+// timestamp : Thu May 27 16:46:51 2021 GMT
+// usage     : riscv_ctg \
+//                  --cgf /scratch/git-repo/github/riscv-ctg/sample_cgfs/dataset.cgf \
+//                  --cgf /scratch/git-repo/github/riscv-ctg/sample_cgfs/rv32i_k.cgf \
+//                  --base-isa rv32i \
+//                  --randomize
+// -----------
+//
+// -----------
+// Copyright (c) 2021. Indian Institute of Technology Madras. All rights reserved.
+// SPDX-License-Identifier: BSD-3-Clause
+// -----------
+//
+// This assembly file tests the xperm8 instruction of the RISC-V  extension for the xperm8 covergroup.
+// 
+#include "model_test.h"
+#include "arch_test.h"
+RVTEST_ISA("RV32I")
+
+.section .text.init
+.globl rvtest_entry_point
+rvtest_entry_point:
+RVMODEL_BOOT
+RVTEST_CODE_BEGIN
+
+#ifdef TEST_CASE_1
+
+RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*K.*);def TEST_CASE_1=True;",xperm8)
+
+RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKs.*);def TEST_CASE_1=True;",xperm8)
+
+RVTEST_CASE(2,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKn.*);def TEST_CASE_1=True;",xperm8)
+
+RVTEST_CASE(3,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKb.*);def TEST_CASE_1=True;",xperm8)
+
+RVTEST_SIGBASE( x8,signature_x8_1)
+
+inst_0:
+// rs1 == rd != rs2, rs1==x18, rs2==x19, rd==x18, rs1_val == 0xFFFFFFFF and rs2_val == 0x08577EB1 
+// opcode: xperm8 ; op1:x18; op2:x19; dest:x18; op1val:0xffffffff;  op2val:0x8577eb1
+TEST_RR_OP(xperm8, x18, x18, x19, 0x00000000, 0xffffffff, 0x8577eb1, x8, 0, x1)
+
+inst_1:
+// rs1 == rs2 == rd, rs1==x24, rs2==x24, rd==x24, rs1_val == 0x91766f62 and rs2_val == 0x5570084b 
+// opcode: xperm8 ; op1:x24; op2:x24; dest:x24; op1val:0x91766f62;  op2val:0x91766f62
+TEST_RR_OP(xperm8, x24, x24, x24, 0x00000000, 0x91766f62, 0x91766f62, x8, 4, x1)
+
+inst_2:
+// rs1 == rs2 != rd, rs1==x0, rs2==x0, rd==x29, rs1_val == 0xc0fe15dd and rs2_val == 0x9f053821 
+// opcode: xperm8 ; op1:x0; op2:x0; dest:x29; op1val:0x0;  op2val:0x0
+TEST_RR_OP(xperm8, x29, x0, x0, 0x00000000, 0x0, 0x0, x8, 8, x1)
+
+inst_3:
+// rs2 == rd != rs1, rs1==x14, rs2==x23, rd==x23, rs1_val == 0xdc80d916 and rs2_val == 0x2a2a146d 
+// opcode: xperm8 ; op1:x14; op2:x23; dest:x23; op1val:0xdc80d916;  op2val:0x2a2a146d
+TEST_RR_OP(xperm8, x23, x14, x23, 0x00000000, 0xdc80d916, 0x2a2a146d, x8, 12, x1)
+
+inst_4:
+// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x13, rs2==x22, rd==x3, rs1_val == 0x952acffe and rs2_val == 0x25ae27ee 
+// opcode: xperm8 ; op1:x13; op2:x22; dest:x3; op1val:0x952acffe;  op2val:0x25ae27ee
+TEST_RR_OP(xperm8, x3, x13, x22, 0x00000000, 0x952acffe, 0x25ae27ee, x8, 16, x1)
+
+inst_5:
+// rs1==x26, rs2==x2, rd==x30, rs1_val == 0x40a5ff52 and rs2_val == 0xb6f9706f 
+// opcode: xperm8 ; op1:x26; op2:x2; dest:x30; op1val:0x40a5ff52;  op2val:0xb6f9706f
+TEST_RR_OP(xperm8, x30, x26, x2, 0x00000000, 0x40a5ff52, 0xb6f9706f, x8, 20, x1)
+
+inst_6:
+// rs1==x23, rs2==x18, rd==x7, rs1_val == 0xe3f4fca3 and rs2_val == 0xa6c9253a 
+// opcode: xperm8 ; op1:x23; op2:x18; dest:x7; op1val:0xe3f4fca3;  op2val:0xa6c9253a
+TEST_RR_OP(xperm8, x7, x23, x18, 0x00000000, 0xe3f4fca3, 0xa6c9253a, x8, 24, x1)
+
+inst_7:
+// rs1==x19, rs2==x6, rd==x12, rs1_val == 0xc2f1c53e and rs2_val == 0xd05668ae 
+// opcode: xperm8 ; op1:x19; op2:x6; dest:x12; op1val:0xc2f1c53e;  op2val:0xd05668ae
+TEST_RR_OP(xperm8, x12, x19, x6, 0x00000000, 0xc2f1c53e, 0xd05668ae, x8, 28, x1)
+
+inst_8:
+// rs1==x25, rs2==x3, rd==x14, rs1_val == 0x9722c9a6 and rs2_val == 0x7bcad7c4 
+// opcode: xperm8 ; op1:x25; op2:x3; dest:x14; op1val:0x9722c9a6;  op2val:0x7bcad7c4
+TEST_RR_OP(xperm8, x14, x25, x3, 0x00000000, 0x9722c9a6, 0x7bcad7c4, x8, 32, x1)
+
+inst_9:
+// rs1==x22, rs2==x5, rd==x19, rs1_val == 0xf7f1305a and rs2_val == 0x9bedfe39 
+// opcode: xperm8 ; op1:x22; op2:x5; dest:x19; op1val:0xf7f1305a;  op2val:0x9bedfe39
+TEST_RR_OP(xperm8, x19, x22, x5, 0x00000000, 0xf7f1305a, 0x9bedfe39, x8, 36, x1)
+
+inst_10:
+// rs1==x20, rs2==x12, rd==x15, rs1_val == 0xd75739f8 and rs2_val == 0xe6fff3d9 
+// opcode: xperm8 ; op1:x20; op2:x12; dest:x15; op1val:0xd75739f8;  op2val:0xe6fff3d9
+TEST_RR_OP(xperm8, x15, x20, x12, 0x00000000, 0xd75739f8, 0xe6fff3d9, x8, 40, x1)
+
+inst_11:
+// rs1==x9, rs2==x10, rd==x27, rs1_val == 0x90efb625 and rs2_val == 0x3150e5fa 
+// opcode: xperm8 ; op1:x9; op2:x10; dest:x27; op1val:0x90efb625;  op2val:0x3150e5fa
+TEST_RR_OP(xperm8, x27, x9, x10, 0x00000000, 0x90efb625, 0x3150e5fa, x8, 44, x1)
+
+inst_12:
+// rs1==x6, rs2==x26, rd==x22, rs1_val == 0x1fc493ca and rs2_val == 0x65408c73 
+// opcode: xperm8 ; op1:x6; op2:x26; dest:x22; op1val:0x1fc493ca;  op2val:0x65408c73
+TEST_RR_OP(xperm8, x22, x6, x26, 0x00000000, 0x1fc493ca, 0x65408c73, x8, 48, x1)
+
+inst_13:
+// rs1==x27, rs2==x21, rd==x17, rs1_val == 0x8e2eac2a and rs2_val == 0xd169a3f8 
+// opcode: xperm8 ; op1:x27; op2:x21; dest:x17; op1val:0x8e2eac2a;  op2val:0xd169a3f8
+TEST_RR_OP(xperm8, x17, x27, x21, 0x00000000, 0x8e2eac2a, 0xd169a3f8, x8, 52, x1)
+
+inst_14:
+// rs1==x11, rs2==x14, rd==x13, rs1_val == 0x35f9377f and rs2_val == 0xf4c30307 
+// opcode: xperm8 ; op1:x11; op2:x14; dest:x13; op1val:0x35f9377f;  op2val:0xf4c30307
+TEST_RR_OP(xperm8, x13, x11, x14, 0x00000000, 0x35f9377f, 0xf4c30307, x8, 56, x1)
+
+inst_15:
+// rs1==x30, rs2==x16, rd==x2, rs1_val == 0x58d548aa and rs2_val == 0xa0569d76 
+// opcode: xperm8 ; op1:x30; op2:x16; dest:x2; op1val:0x58d548aa;  op2val:0xa0569d76
+TEST_RR_OP(xperm8, x2, x30, x16, 0x00000000, 0x58d548aa, 0xa0569d76, x8, 60, x1)
+
+inst_16:
+// rs1==x2, rs2==x4, rd==x16, rs1_val == 0x55d98c6e and rs2_val == 0x2daf9ac7 
+// opcode: xperm8 ; op1:x2; op2:x4; dest:x16; op1val:0x55d98c6e;  op2val:0x2daf9ac7
+TEST_RR_OP(xperm8, x16, x2, x4, 0x00000000, 0x55d98c6e, 0x2daf9ac7, x8, 64, x1)
+
+inst_17:
+// rs1==x3, rs2==x29, rd==x4, rs1_val == 0x74b8de87 and rs2_val == 0xf273b44c 
+// opcode: xperm8 ; op1:x3; op2:x29; dest:x4; op1val:0x74b8de87;  op2val:0xf273b44c
+TEST_RR_OP(xperm8, x4, x3, x29, 0x00000000, 0x74b8de87, 0xf273b44c, x8, 68, x14)
+
+inst_18:
+// rs1==x4, rs2==x25, rd==x20, rs1_val == 0xccce240c and rs2_val == 0x886c3a30 
+// opcode: xperm8 ; op1:x4; op2:x25; dest:x20; op1val:0xccce240c;  op2val:0x886c3a30
+TEST_RR_OP(xperm8, x20, x4, x25, 0x00000000, 0xccce240c, 0x886c3a30, x8, 72, x14)
+
+inst_19:
+// rs1==x29, rs2==x13, rd==x0, rs1_val == 0xb49c83dc and rs2_val == 0xbb61a9cd 
+// opcode: xperm8 ; op1:x29; op2:x13; dest:x0; op1val:0xb49c83dc;  op2val:0xbb61a9cd
+TEST_RR_OP(xperm8, x0, x29, x13, 0x00000000, 0xb49c83dc, 0xbb61a9cd, x8, 76, x14)
+
+inst_20:
+// rs1==x17, rs2==x1, rd==x25, rs1_val == 0x254a9493 and rs2_val == 0xc5521660 
+// opcode: xperm8 ; op1:x17; op2:x1; dest:x25; op1val:0x254a9493;  op2val:0xc5521660
+TEST_RR_OP(xperm8, x25, x17, x1, 0x00000000, 0x254a9493, 0xc5521660, x8, 80, x14)
+RVTEST_SIGBASE( x2,signature_x2_0)
+
+inst_21:
+// rs1==x12, rs2==x8, rd==x31, rs2_val == 0x00000000 and rs1_val == 0x4FFE831A 
+// opcode: xperm8 ; op1:x12; op2:x8; dest:x31; op1val:0x4ffe831a;  op2val:0x0
+TEST_RR_OP(xperm8, x31, x12, x8, 0x00000000, 0x4ffe831a, 0x0, x2, 0, x14)
+
+inst_22:
+// rs1==x5, rs2==x7, rd==x21, rs2_val == 0x80000000 and rs1_val == 0xAFC08ACE 
+// opcode: xperm8 ; op1:x5; op2:x7; dest:x21; op1val:0xafc08ace;  op2val:0x80000000
+TEST_RR_OP(xperm8, x21, x5, x7, 0x00000000, 0xafc08ace, 0x80000000, x2, 4, x14)
+
+inst_23:
+// rs1==x31, rs2==x15, rd==x11, rs2_val == 0x40000000 and rs1_val == 0xAF6E9055 
+// opcode: xperm8 ; op1:x31; op2:x15; dest:x11; op1val:0xaf6e9055;  op2val:0x40000000
+TEST_RR_OP(xperm8, x11, x31, x15, 0x00000000, 0xaf6e9055, 0x40000000, x2, 8, x14)
+
+inst_24:
+// rs1==x8, rs2==x20, rd==x28, rs2_val == 0xE0000000 and rs1_val == 0x5B130474 
+// opcode: xperm8 ; op1:x8; op2:x20; dest:x28; op1val:0x5b130474;  op2val:0xe0000000
+TEST_RR_OP(xperm8, x28, x8, x20, 0x00000000, 0x5b130474, 0xe0000000, x2, 12, x14)
+
+inst_25:
+// rs1==x7, rs2==x28, rd==x10, rs2_val == 0x90000000 and rs1_val == 0x3EEA126E 
+// opcode: xperm8 ; op1:x7; op2:x28; dest:x10; op1val:0x3eea126e;  op2val:0x90000000
+TEST_RR_OP(xperm8, x10, x7, x28, 0x00000000, 0x3eea126e, 0x90000000, x2, 16, x14)
+
+inst_26:
+// rs1==x16, rs2==x17, rd==x6, rs2_val == 0xB8000000 and rs1_val == 0x9C734D77 
+// opcode: xperm8 ; op1:x16; op2:x17; dest:x6; op1val:0x9c734d77;  op2val:0xb8000000
+TEST_RR_OP(xperm8, x6, x16, x17, 0x00000000, 0x9c734d77, 0xb8000000, x2, 20, x14)
+
+inst_27:
+// rs1==x21, rs2==x9, rd==x8, rs2_val == 0xB4000000 and rs1_val == 0x5A694BCA 
+// opcode: xperm8 ; op1:x21; op2:x9; dest:x8; op1val:0x5a694bca;  op2val:0xb4000000
+TEST_RR_OP(xperm8, x8, x21, x9, 0x00000000, 0x5a694bca, 0xb4000000, x2, 24, x14)
+
+inst_28:
+// rs1==x15, rs2==x27, rd==x9, rs2_val == 0x3E000000 and rs1_val == 0xED52E4CA 
+// opcode: xperm8 ; op1:x15; op2:x27; dest:x9; op1val:0xed52e4ca;  op2val:0x3e000000
+TEST_RR_OP(xperm8, x9, x15, x27, 0x00000000, 0xed52e4ca, 0x3e000000, x2, 28, x14)
+
+inst_29:
+// rs1==x10, rs2==x31, rd==x5, rs2_val == 0xFB000000 and rs1_val == 0xB5CB2A93 
+// opcode: xperm8 ; op1:x10; op2:x31; dest:x5; op1val:0xb5cb2a93;  op2val:0xfb000000
+TEST_RR_OP(xperm8, x5, x10, x31, 0x00000000, 0xb5cb2a93, 0xfb000000, x2, 32, x14)
+
+inst_30:
+// rs1==x28, rs2==x30, rd==x26, rs2_val == 0x68800000 and rs1_val == 0x29324E16 
+// opcode: xperm8 ; op1:x28; op2:x30; dest:x26; op1val:0x29324e16;  op2val:0x68800000
+TEST_RR_OP(xperm8, x26, x28, x30, 0x00000000, 0x29324e16, 0x68800000, x2, 36, x14)
+
+inst_31:
+// rs1==x1, rs2_val == 0xB7400000 and rs1_val == 0xBC5FB419 
+// opcode: xperm8 ; op1:x1; op2:x7; dest:x28; op1val:0xbc5fb419;  op2val:0xb7400000
+TEST_RR_OP(xperm8, x28, x1, x7, 0x00000000, 0xbc5fb419, 0xb7400000, x2, 40, x14)
+
+inst_32:
+// rs2==x11, rs2_val == 0x5CE00000 and rs1_val == 0x8E92E1B8 
+// opcode: xperm8 ; op1:x25; op2:x11; dest:x16; op1val:0x8e92e1b8;  op2val:0x5ce00000
+TEST_RR_OP(xperm8, x16, x25, x11, 0x00000000, 0x8e92e1b8, 0x5ce00000, x2, 44, x14)
+
+inst_33:
+// rd==x1, rs2_val == 0x49F00000 and rs1_val == 0x96A3B48B 
+// opcode: xperm8 ; op1:x31; op2:x15; dest:x1; op1val:0x96a3b48b;  op2val:0x49f00000
+TEST_RR_OP(xperm8, x1, x31, x15, 0x00000000, 0x96a3b48b, 0x49f00000, x2, 48, x14)
+
+inst_34:
+// rs2_val == 0x53D80000 and rs1_val == 0x0A095049 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xa095049;  op2val:0x53d80000
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xa095049, 0x53d80000, x2, 52, x14)
+
+inst_35:
+// rs2_val == 0x2EC40000 and rs1_val == 0x6F6E71B7 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x6f6e71b7;  op2val:0x2ec40000
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x6f6e71b7, 0x2ec40000, x2, 56, x14)
+
+inst_36:
+// rs2_val == 0x8E860000 and rs1_val == 0x236CC43D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x236cc43d;  op2val:0x8e860000
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x236cc43d, 0x8e860000, x2, 60, x14)
+
+inst_37:
+// rs2_val == 0x6FBF0000 and rs1_val == 0xE2ED8971 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xe2ed8971;  op2val:0x6fbf0000
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xe2ed8971, 0x6fbf0000, x2, 64, x14)
+
+inst_38:
+// rs2_val == 0x354E8000 and rs1_val == 0x06FA7B3E 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x6fa7b3e;  op2val:0x354e8000
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x6fa7b3e, 0x354e8000, x2, 68, x14)
+
+inst_39:
+// rs2_val == 0xFB07C000 and rs1_val == 0x4143DA51 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x4143da51;  op2val:0xfb07c000
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x4143da51, 0xfb07c000, x2, 72, x14)
+
+inst_40:
+// rs2_val == 0xDFFA2000 and rs1_val == 0xCAC78511 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xcac78511;  op2val:0xdffa2000
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xcac78511, 0xdffa2000, x2, 76, x14)
+
+inst_41:
+// rs2_val == 0x45D1F000 and rs1_val == 0xDF880B11 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xdf880b11;  op2val:0x45d1f000
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xdf880b11, 0x45d1f000, x2, 80, x14)
+
+inst_42:
+// rs2_val == 0x9069A800 and rs1_val == 0xBD230058 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xbd230058;  op2val:0x9069a800
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xbd230058, 0x9069a800, x2, 84, x14)
+
+inst_43:
+// rs2_val == 0xF5B1B400 and rs1_val == 0xF2597377 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xf2597377;  op2val:0xf5b1b400
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xf2597377, 0xf5b1b400, x2, 88, x14)
+
+inst_44:
+// rs2_val == 0x06B6DA00 and rs1_val == 0x5A8E7F31 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x5a8e7f31;  op2val:0x6b6da00
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x5a8e7f31, 0x6b6da00, x2, 92, x14)
+
+inst_45:
+// rs2_val == 0xBFB0F100 and rs1_val == 0x7A3621F5 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x7a3621f5;  op2val:0xbfb0f100
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x7a3621f5, 0xbfb0f100, x2, 96, x14)
+
+inst_46:
+// rs2_val == 0xD838C880 and rs1_val == 0x1E3C492C 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x1e3c492c;  op2val:0xd838c880
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x1e3c492c, 0xd838c880, x2, 100, x14)
+
+inst_47:
+// rs2_val == 0x5C46AEC0 and rs1_val == 0xD4FAF4B1 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xd4faf4b1;  op2val:0x5c46aec0
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xd4faf4b1, 0x5c46aec0, x2, 104, x14)
+
+inst_48:
+// rs2_val == 0xCF7AC620 and rs1_val == 0x27A16894 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x27a16894;  op2val:0xcf7ac620
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x27a16894, 0xcf7ac620, x2, 108, x14)
+
+inst_49:
+// rs2_val == 0x05C2F650 and rs1_val == 0x0A3EF19E 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xa3ef19e;  op2val:0x5c2f650
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xa3ef19e, 0x5c2f650, x2, 112, x14)
+
+inst_50:
+// rs2_val == 0xEEC50588 and rs1_val == 0xCB8193EF 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xcb8193ef;  op2val:0xeec50588
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xcb8193ef, 0xeec50588, x2, 116, x14)
+
+inst_51:
+// rs2_val == 0xCA7160CC and rs1_val == 0x577F8847 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x577f8847;  op2val:0xca7160cc
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x577f8847, 0xca7160cc, x2, 120, x14)
+
+inst_52:
+// rs2_val == 0x60E30DA2 and rs1_val == 0x9B5EAF0A 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x9b5eaf0a;  op2val:0x60e30da2
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x9b5eaf0a, 0x60e30da2, x2, 124, x14)
+
+inst_53:
+// rs2_val == 0x76F86039 and rs1_val == 0x5D3BBCE0 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x5d3bbce0;  op2val:0x76f86039
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x5d3bbce0, 0x76f86039, x2, 128, x14)
+
+inst_54:
+// rs1_val == 0x00000000 and rs2_val == 0xFD1032E8 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xfd1032e8
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x0, 0xfd1032e8, x2, 132, x14)
+
+inst_55:
+// rs1_val == 0x80000000 and rs2_val == 0x7B246C17 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x80000000;  op2val:0x7b246c17
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x80000000, 0x7b246c17, x2, 136, x14)
+
+inst_56:
+// rs1_val == 0x40000000 and rs2_val == 0x56F3EEF1 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x40000000;  op2val:0x56f3eef1
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x40000000, 0x56f3eef1, x2, 140, x14)
+
+inst_57:
+// rs1_val == 0xA0000000 and rs2_val == 0x75923260 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xa0000000;  op2val:0x75923260
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xa0000000, 0x75923260, x2, 144, x14)
+
+inst_58:
+// rs1_val == 0x10000000 and rs2_val == 0xB9D3087C 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x10000000;  op2val:0xb9d3087c
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x10000000, 0xb9d3087c, x2, 148, x14)
+
+inst_59:
+// rs1_val == 0xA8000000 and rs2_val == 0x46CBD355 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xa8000000;  op2val:0x46cbd355
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xa8000000, 0x46cbd355, x2, 152, x14)
+
+inst_60:
+// rs1_val == 0xE4000000 and rs2_val == 0x4616E73D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xe4000000;  op2val:0x4616e73d
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xe4000000, 0x4616e73d, x2, 156, x14)
+
+inst_61:
+// rs1_val == 0x8E000000 and rs2_val == 0x8CCAEC71 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x8e000000;  op2val:0x8ccaec71
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x8e000000, 0x8ccaec71, x2, 160, x14)
+
+inst_62:
+// rs1_val == 0x13000000 and rs2_val == 0x9B774054 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x13000000;  op2val:0x9b774054
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x13000000, 0x9b774054, x2, 164, x14)
+
+inst_63:
+// rs1_val == 0x8B800000 and rs2_val == 0x6D5FCD18 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x8b800000;  op2val:0x6d5fcd18
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x8b800000, 0x6d5fcd18, x2, 168, x14)
+
+inst_64:
+// rs1_val == 0x7EC00000 and rs2_val == 0x0696F561 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x7ec00000;  op2val:0x696f561
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x7ec00000, 0x696f561, x2, 172, x14)
+
+inst_65:
+// rs1_val == 0x3DA00000 and rs2_val == 0x6E1E98E2 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x3da00000;  op2val:0x6e1e98e2
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x3da00000, 0x6e1e98e2, x2, 176, x14)
+
+inst_66:
+// rs1_val == 0x20100000 and rs2_val == 0x2DEDB6A7 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x20100000;  op2val:0x2dedb6a7
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x20100000, 0x2dedb6a7, x2, 180, x14)
+
+inst_67:
+// rs1_val == 0x98380000 and rs2_val == 0x3C272728 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x98380000;  op2val:0x3c272728
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x98380000, 0x3c272728, x2, 184, x14)
+
+inst_68:
+// rs1_val == 0x80F40000 and rs2_val == 0x4F55C73D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x80f40000;  op2val:0x4f55c73d
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x80f40000, 0x4f55c73d, x2, 188, x14)
+
+inst_69:
+// rs1_val == 0x43560000 and rs2_val == 0xB0AB577A 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x43560000;  op2val:0xb0ab577a
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x43560000, 0xb0ab577a, x2, 192, x14)
+
+inst_70:
+// rs1_val == 0x62A90000 and rs2_val == 0x42F5D75E 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x62a90000;  op2val:0x42f5d75e
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x62a90000, 0x42f5d75e, x2, 196, x14)
+
+inst_71:
+// rs1_val == 0x60348000 and rs2_val == 0xB9F09825 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x60348000;  op2val:0xb9f09825
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x60348000, 0xb9f09825, x2, 200, x14)
+
+inst_72:
+// rs1_val == 0x5EF6C000 and rs2_val == 0x9BFAD94F 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x5ef6c000;  op2val:0x9bfad94f
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x5ef6c000, 0x9bfad94f, x2, 204, x14)
+
+inst_73:
+// rs1_val == 0x79DF6000 and rs2_val == 0x98918DD8 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x79df6000;  op2val:0x98918dd8
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x79df6000, 0x98918dd8, x2, 208, x14)
+
+inst_74:
+// rs1_val == 0x864C1000 and rs2_val == 0x9B811F47 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x864c1000;  op2val:0x9b811f47
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x864c1000, 0x9b811f47, x2, 212, x14)
+
+inst_75:
+// rs1_val == 0x735CB800 and rs2_val == 0xD0D18FB0 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x735cb800;  op2val:0xd0d18fb0
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x735cb800, 0xd0d18fb0, x2, 216, x14)
+
+inst_76:
+// rs1_val == 0x29554400 and rs2_val == 0x71992790 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x29554400;  op2val:0x71992790
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x29554400, 0x71992790, x2, 220, x14)
+
+inst_77:
+// rs1_val == 0xA9A56A00 and rs2_val == 0x8248F803 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xa9a56a00;  op2val:0x8248f803
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xa9a56a00, 0x8248f803, x2, 224, x14)
+
+inst_78:
+// rs1_val == 0xC3405D00 and rs2_val == 0xEB3D7873 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xc3405d00;  op2val:0xeb3d7873
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xc3405d00, 0xeb3d7873, x2, 228, x14)
+
+inst_79:
+// rs1_val == 0x394D8080 and rs2_val == 0xD7A7BF5E 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x394d8080;  op2val:0xd7a7bf5e
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x394d8080, 0xd7a7bf5e, x2, 232, x14)
+
+inst_80:
+// rs1_val == 0xC6677840 and rs2_val == 0xD1BA5C0F 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xc6677840;  op2val:0xd1ba5c0f
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xc6677840, 0xd1ba5c0f, x2, 236, x14)
+
+inst_81:
+// rs1_val == 0x70598E60 and rs2_val == 0xD19E3224 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x70598e60;  op2val:0xd19e3224
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x70598e60, 0xd19e3224, x2, 240, x14)
+
+inst_82:
+// rs1_val == 0x98A59F90 and rs2_val == 0x35D30D74 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x98a59f90;  op2val:0x35d30d74
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x98a59f90, 0x35d30d74, x2, 244, x14)
+
+inst_83:
+// rs1_val == 0xD306DEB8 and rs2_val == 0x70A76E49 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xd306deb8;  op2val:0x70a76e49
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xd306deb8, 0x70a76e49, x2, 248, x14)
+
+inst_84:
+// rs1_val == 0x18A01374 and rs2_val == 0x9FCDB9E1 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x18a01374;  op2val:0x9fcdb9e1
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x18a01374, 0x9fcdb9e1, x2, 252, x14)
+
+inst_85:
+// rs1_val == 0xC3667402 and rs2_val == 0x5FEFE911 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xc3667402;  op2val:0x5fefe911
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xc3667402, 0x5fefe911, x2, 256, x14)
+
+inst_86:
+// rs1_val == 0x797D76DF and rs2_val == 0x598B88DB 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x797d76df;  op2val:0x598b88db
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x797d76df, 0x598b88db, x2, 260, x14)
+
+inst_87:
+// rs2_val == 0x0C04F662 and rs1_val == 0xB7E7669E 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xb7e7669e;  op2val:0xc04f662
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xb7e7669e, 0xc04f662, x2, 264, x14)
+
+inst_88:
+// rs2_val == 0xCD41CAD1 and rs1_val == 0xD24F0724 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xd24f0724;  op2val:0xcd41cad1
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xd24f0724, 0xcd41cad1, x2, 268, x14)
+
+inst_89:
+// rs2_val == 0x1203965B and rs1_val == 0x585022A3 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x585022a3;  op2val:0x1203965b
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x585022a3, 0x1203965b, x2, 272, x14)
+
+inst_90:
+// rs2_val == 0x7A9AC0A7 and rs1_val == 0xEE8F948A 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xee8f948a;  op2val:0x7a9ac0a7
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xee8f948a, 0x7a9ac0a7, x2, 276, x14)
+
+inst_91:
+// rs2_val == 0x2AA8E42F and rs1_val == 0x2655FA99 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x2655fa99;  op2val:0x2aa8e42f
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x2655fa99, 0x2aa8e42f, x2, 280, x14)
+
+inst_92:
+// rs2_val == 0x211D785F and rs1_val == 0x0C96A183 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xc96a183;  op2val:0x211d785f
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xc96a183, 0x211d785f, x2, 284, x14)
+
+inst_93:
+// rs2_val == 0x59DDE33F and rs1_val == 0x88F931F4 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x88f931f4;  op2val:0x59dde33f
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x88f931f4, 0x59dde33f, x2, 288, x14)
+
+inst_94:
+// rs2_val == 0x711E627F and rs1_val == 0x6F2BF862 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x6f2bf862;  op2val:0x711e627f
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x6f2bf862, 0x711e627f, x2, 292, x14)
+
+inst_95:
+// rs2_val == 0x19835AFF and rs1_val == 0x5C6C32A5 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x5c6c32a5;  op2val:0x19835aff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x5c6c32a5, 0x19835aff, x2, 296, x14)
+
+inst_96:
+// rs2_val == 0x088B3DFF and rs1_val == 0x58FC0342 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x58fc0342;  op2val:0x88b3dff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x58fc0342, 0x88b3dff, x2, 300, x14)
+
+inst_97:
+// rs2_val == 0x9A6DA3FF and rs1_val == 0x636A75E3 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x636a75e3;  op2val:0x9a6da3ff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x636a75e3, 0x9a6da3ff, x2, 304, x14)
+
+inst_98:
+// rs2_val == 0x37E0D7FF and rs1_val == 0x4ED62428 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x4ed62428;  op2val:0x37e0d7ff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x4ed62428, 0x37e0d7ff, x2, 308, x14)
+
+inst_99:
+// rs2_val == 0x5E59CFFF and rs1_val == 0xD2D12745 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xd2d12745;  op2val:0x5e59cfff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xd2d12745, 0x5e59cfff, x2, 312, x14)
+
+inst_100:
+// rs2_val == 0xDD129FFF and rs1_val == 0x0D770F3C 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xd770f3c;  op2val:0xdd129fff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xd770f3c, 0xdd129fff, x2, 316, x14)
+
+inst_101:
+// rs2_val == 0x872EBFFF and rs1_val == 0x2311ACFB 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x2311acfb;  op2val:0x872ebfff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x2311acfb, 0x872ebfff, x2, 320, x14)
+
+inst_102:
+// rs2_val == 0x55367FFF and rs1_val == 0x0FB13BBC 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfb13bbc;  op2val:0x55367fff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfb13bbc, 0x55367fff, x2, 324, x14)
+
+inst_103:
+// rs2_val == 0xFDD2FFFF and rs1_val == 0x8DFC2307 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x8dfc2307;  op2val:0xfdd2ffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x8dfc2307, 0xfdd2ffff, x2, 328, x14)
+
+inst_104:
+// rs2_val == 0x30BDFFFF and rs1_val == 0x7312BE6D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x7312be6d;  op2val:0x30bdffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x7312be6d, 0x30bdffff, x2, 332, x14)
+
+inst_105:
+// rs2_val == 0xA743FFFF and rs1_val == 0xC61B1FBF 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xc61b1fbf;  op2val:0xa743ffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xc61b1fbf, 0xa743ffff, x2, 336, x14)
+
+inst_106:
+// rs2_val == 0x9987FFFF and rs1_val == 0xEBDA5A4F 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xebda5a4f;  op2val:0x9987ffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xebda5a4f, 0x9987ffff, x2, 340, x14)
+
+inst_107:
+// rs2_val == 0x118FFFFF and rs1_val == 0xC215E193 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xc215e193;  op2val:0x118fffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xc215e193, 0x118fffff, x2, 344, x14)
+
+inst_108:
+// rs2_val == 0x65DFFFFF and rs1_val == 0x75EE935F 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x75ee935f;  op2val:0x65dfffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x75ee935f, 0x65dfffff, x2, 348, x14)
+
+inst_109:
+// rs2_val == 0x6CBFFFFF and rs1_val == 0x09C16162 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x9c16162;  op2val:0x6cbfffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x9c16162, 0x6cbfffff, x2, 352, x14)
+
+inst_110:
+// rs2_val == 0x347FFFFF and rs1_val == 0xA4053175 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xa4053175;  op2val:0x347fffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xa4053175, 0x347fffff, x2, 356, x14)
+
+inst_111:
+// rs2_val == 0xC4FFFFFF and rs1_val == 0x499006C8 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x499006c8;  op2val:0xc4ffffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x499006c8, 0xc4ffffff, x2, 360, x14)
+
+inst_112:
+// rs2_val == 0x41FFFFFF and rs1_val == 0x3C5B3EEE 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x3c5b3eee;  op2val:0x41ffffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x3c5b3eee, 0x41ffffff, x2, 364, x14)
+
+inst_113:
+// rs2_val == 0x6BFFFFFF and rs1_val == 0xD95FD86A 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xd95fd86a;  op2val:0x6bffffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xd95fd86a, 0x6bffffff, x2, 368, x14)
+
+inst_114:
+// rs2_val == 0x87FFFFFF and rs1_val == 0x25784F4F 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x25784f4f;  op2val:0x87ffffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x25784f4f, 0x87ffffff, x2, 372, x14)
+
+inst_115:
+// rs2_val == 0xCFFFFFFF and rs1_val == 0x082018FA 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x82018fa;  op2val:0xcfffffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x82018fa, 0xcfffffff, x2, 376, x14)
+
+inst_116:
+// rs2_val == 0x9FFFFFFF and rs1_val == 0x350CC530 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x350cc530;  op2val:0x9fffffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x350cc530, 0x9fffffff, x2, 380, x14)
+
+inst_117:
+// rs2_val == 0x3FFFFFFF and rs1_val == 0x7966A24E 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x7966a24e;  op2val:0x3fffffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x7966a24e, 0x3fffffff, x2, 384, x14)
+
+inst_118:
+// rs2_val == 0x7FFFFFFF and rs1_val == 0x51D6D6DA 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x51d6d6da;  op2val:0x7fffffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x51d6d6da, 0x7fffffff, x2, 388, x14)
+
+inst_119:
+// rs2_val == 0xFFFFFFFF and rs1_val == 0xD5A2038F 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xd5a2038f;  op2val:0xffffffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xd5a2038f, 0xffffffff, x2, 392, x14)
+
+inst_120:
+// rs1_val == 0xFF7746E6 and rs2_val == 0x4F829B65 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xff7746e6;  op2val:0x4f829b65
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xff7746e6, 0x4f829b65, x2, 396, x14)
+
+inst_121:
+// rs1_val == 0xF89A7241 and rs2_val == 0x00C2F091 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xf89a7241;  op2val:0xc2f091
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xf89a7241, 0xc2f091, x2, 400, x14)
+
+inst_122:
+// rs1_val == 0x11B36A93 and rs2_val == 0xB1F5D853 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x11b36a93;  op2val:0xb1f5d853
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x11b36a93, 0xb1f5d853, x2, 404, x14)
+
+inst_123:
+// rs1_val == 0xC9932457 and rs2_val == 0x39BE2172 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xc9932457;  op2val:0x39be2172
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xc9932457, 0x39be2172, x2, 408, x14)
+
+inst_124:
+// rs1_val == 0x4B9A6C8F and rs2_val == 0x316039EE 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x4b9a6c8f;  op2val:0x316039ee
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x4b9a6c8f, 0x316039ee, x2, 412, x14)
+
+inst_125:
+// rs1_val == 0x9541241F and rs2_val == 0x5761A866 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x9541241f;  op2val:0x5761a866
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x9541241f, 0x5761a866, x2, 416, x14)
+
+inst_126:
+// rs1_val == 0x94B431BF and rs2_val == 0x09E4D1F4 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x94b431bf;  op2val:0x9e4d1f4
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x94b431bf, 0x9e4d1f4, x2, 420, x14)
+
+inst_127:
+// rs1_val == 0xDC8FE97F and rs2_val == 0x9E03793F 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xdc8fe97f;  op2val:0x9e03793f
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xdc8fe97f, 0x9e03793f, x2, 424, x14)
+
+inst_128:
+// rs1_val == 0xB903CEFF and rs2_val == 0x7F1071EC 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xb903ceff;  op2val:0x7f1071ec
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xb903ceff, 0x7f1071ec, x2, 428, x14)
+
+inst_129:
+// rs1_val == 0xB494A5FF and rs2_val == 0x9A7EF9E4 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xb494a5ff;  op2val:0x9a7ef9e4
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xb494a5ff, 0x9a7ef9e4, x2, 432, x14)
+
+inst_130:
+// rs1_val == 0xE2DD83FF and rs2_val == 0x59C05BB9 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xe2dd83ff;  op2val:0x59c05bb9
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xe2dd83ff, 0x59c05bb9, x2, 436, x14)
+
+inst_131:
+// rs1_val == 0xBBAFD7FF and rs2_val == 0xDE451397 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xbbafd7ff;  op2val:0xde451397
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xbbafd7ff, 0xde451397, x2, 440, x14)
+
+inst_132:
+// rs1_val == 0xCE5C4FFF and rs2_val == 0x40F27005 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xce5c4fff;  op2val:0x40f27005
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xce5c4fff, 0x40f27005, x2, 444, x14)
+
+inst_133:
+// rs1_val == 0x39935FFF and rs2_val == 0x24496FE3 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x39935fff;  op2val:0x24496fe3
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x39935fff, 0x24496fe3, x2, 448, x14)
+
+inst_134:
+// rs1_val == 0xEED7BFFF and rs2_val == 0xDE14BFF2 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xeed7bfff;  op2val:0xde14bff2
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xeed7bfff, 0xde14bff2, x2, 452, x14)
+
+inst_135:
+// rs1_val == 0x008E7FFF and rs2_val == 0xB808A677 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x8e7fff;  op2val:0xb808a677
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x8e7fff, 0xb808a677, x2, 456, x14)
+
+inst_136:
+// rs1_val == 0x12C2FFFF and rs2_val == 0x76B1FD3D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x12c2ffff;  op2val:0x76b1fd3d
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x12c2ffff, 0x76b1fd3d, x2, 460, x14)
+
+inst_137:
+// rs1_val == 0xE3A5FFFF and rs2_val == 0x5DCF019D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xe3a5ffff;  op2val:0x5dcf019d
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xe3a5ffff, 0x5dcf019d, x2, 464, x14)
+
+inst_138:
+// rs1_val == 0x9B03FFFF and rs2_val == 0x47B7097B 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x9b03ffff;  op2val:0x47b7097b
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x9b03ffff, 0x47b7097b, x2, 468, x14)
+
+inst_139:
+// rs1_val == 0x5F07FFFF and rs2_val == 0x759F1B43 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x5f07ffff;  op2val:0x759f1b43
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x5f07ffff, 0x759f1b43, x2, 472, x14)
+
+inst_140:
+// rs1_val == 0x33CFFFFF and rs2_val == 0x5B331999 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x33cfffff;  op2val:0x5b331999
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x33cfffff, 0x5b331999, x2, 476, x14)
+
+inst_141:
+// rs1_val == 0x709FFFFF and rs2_val == 0x2D37DE81 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x709fffff;  op2val:0x2d37de81
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x709fffff, 0x2d37de81, x2, 480, x14)
+
+inst_142:
+// rs1_val == 0xD1BFFFFF and rs2_val == 0xFCB627AF 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xd1bfffff;  op2val:0xfcb627af
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xd1bfffff, 0xfcb627af, x2, 484, x14)
+
+inst_143:
+// rs1_val == 0xAB7FFFFF and rs2_val == 0x1E0B4EE5 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xab7fffff;  op2val:0x1e0b4ee5
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xab7fffff, 0x1e0b4ee5, x2, 488, x14)
+
+inst_144:
+// rs1_val == 0x7CFFFFFF and rs2_val == 0xFB3E7196 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x7cffffff;  op2val:0xfb3e7196
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x7cffffff, 0xfb3e7196, x2, 492, x14)
+
+inst_145:
+// rs1_val == 0x59FFFFFF and rs2_val == 0xD9959A62 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x59ffffff;  op2val:0xd9959a62
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x59ffffff, 0xd9959a62, x2, 496, x14)
+
+inst_146:
+// rs1_val == 0xDBFFFFFF and rs2_val == 0xE08409F0 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xdbffffff;  op2val:0xe08409f0
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xdbffffff, 0xe08409f0, x2, 500, x14)
+
+inst_147:
+// rs1_val == 0xF7FFFFFF and rs2_val == 0x258ECECB 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xf7ffffff;  op2val:0x258ececb
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xf7ffffff, 0x258ececb, x2, 504, x14)
+
+inst_148:
+// rs1_val == 0x6FFFFFFF and rs2_val == 0xFF7D5EC0 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x6fffffff;  op2val:0xff7d5ec0
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x6fffffff, 0xff7d5ec0, x2, 508, x14)
+
+inst_149:
+// rs1_val == 0x9FFFFFFF and rs2_val == 0x4B6EA010 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x9fffffff;  op2val:0x4b6ea010
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x9fffffff, 0x4b6ea010, x2, 512, x14)
+
+inst_150:
+// rs1_val == 0x3FFFFFFF and rs2_val == 0xD885BBAC 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x3fffffff;  op2val:0xd885bbac
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x3fffffff, 0xd885bbac, x2, 516, x14)
+
+inst_151:
+// rs1_val == 0x7FFFFFFF and rs2_val == 0xBBE8F88D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x7fffffff;  op2val:0xbbe8f88d
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x7fffffff, 0xbbe8f88d, x2, 520, x14)
+
+inst_152:
+// rs1_val == 0xFFFFFFFF and rs2_val == 0xE3D6E4B9 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xffffffff;  op2val:0xe3d6e4b9
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xffffffff, 0xe3d6e4b9, x2, 524, x14)
+
+inst_153:
+// rs2_val == 0x970216FD and rs1_val == 0x0494B6D2 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x494b6d2;  op2val:0x970216fd
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x494b6d2, 0x970216fd, x2, 528, x14)
+
+inst_154:
+// rs2_val == 0x5CB58B8F and rs1_val == 0xF2650B71 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xf2650b71;  op2val:0x5cb58b8f
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xf2650b71, 0x5cb58b8f, x2, 532, x14)
+
+inst_155:
+// rs2_val == 0x27EFDA6C and rs1_val == 0x21AF214A 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x21af214a;  op2val:0x27efda6c
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x21af214a, 0x27efda6c, x2, 536, x14)
+
+inst_156:
+// rs2_val == 0x1D1EF7C0 and rs1_val == 0x482EA760 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x482ea760;  op2val:0x1d1ef7c0
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x482ea760, 0x1d1ef7c0, x2, 540, x14)
+
+inst_157:
+// rs2_val == 0x0FC2A909 and rs1_val == 0x0F7A0443 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xf7a0443;  op2val:0xfc2a909
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xf7a0443, 0xfc2a909, x2, 544, x14)
+
+inst_158:
+// rs2_val == 0x04E9E4A6 and rs1_val == 0x69534048 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x69534048;  op2val:0x4e9e4a6
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x69534048, 0x4e9e4a6, x2, 548, x14)
+
+inst_159:
+// rs2_val == 0x025FDCD7 and rs1_val == 0x043E3EF5 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x43e3ef5;  op2val:0x25fdcd7
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x43e3ef5, 0x25fdcd7, x2, 552, x14)
+
+inst_160:
+// rs2_val == 0x01782EBC and rs1_val == 0x12FAD802 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x12fad802;  op2val:0x1782ebc
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x12fad802, 0x1782ebc, x2, 556, x14)
+
+inst_161:
+// rs2_val == 0x00A39575 and rs1_val == 0x119B4FE5 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x119b4fe5;  op2val:0xa39575
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x119b4fe5, 0xa39575, x2, 560, x14)
+
+inst_162:
+// rs2_val == 0x0049886F and rs1_val == 0x7DB224CB 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x7db224cb;  op2val:0x49886f
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x7db224cb, 0x49886f, x2, 564, x14)
+
+inst_163:
+// rs2_val == 0x0025693C and rs1_val == 0xB45F51C3 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xb45f51c3;  op2val:0x25693c
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xb45f51c3, 0x25693c, x2, 568, x14)
+
+inst_164:
+// rs2_val == 0x0018031A and rs1_val == 0x41536363 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x41536363;  op2val:0x18031a
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x41536363, 0x18031a, x2, 572, x14)
+
+inst_165:
+// rs2_val == 0x000A8267 and rs1_val == 0x1A953CCA 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x1a953cca;  op2val:0xa8267
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x1a953cca, 0xa8267, x2, 576, x14)
+
+inst_166:
+// rs2_val == 0x00073010 and rs1_val == 0x14186EBF 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x14186ebf;  op2val:0x73010
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x14186ebf, 0x73010, x2, 580, x14)
+
+inst_167:
+// rs2_val == 0x00038734 and rs1_val == 0xF33C1A7F 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xf33c1a7f;  op2val:0x38734
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xf33c1a7f, 0x38734, x2, 584, x14)
+
+inst_168:
+// rs2_val == 0x0001EAB1 and rs1_val == 0x8DCE6F52 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x8dce6f52;  op2val:0x1eab1
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x8dce6f52, 0x1eab1, x2, 588, x14)
+
+inst_169:
+// rs2_val == 0x0000B8EC and rs1_val == 0x3096C6C8 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x3096c6c8;  op2val:0xb8ec
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x3096c6c8, 0xb8ec, x2, 592, x14)
+
+inst_170:
+// rs2_val == 0x00007530 and rs1_val == 0x9C461CB5 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x9c461cb5;  op2val:0x7530
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x9c461cb5, 0x7530, x2, 596, x14)
+
+inst_171:
+// rs2_val == 0x00003ED5 and rs1_val == 0x27756991 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x27756991;  op2val:0x3ed5
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x27756991, 0x3ed5, x2, 600, x14)
+
+inst_172:
+// rs2_val == 0x00001055 and rs1_val == 0x62D74145 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x62d74145;  op2val:0x1055
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x62d74145, 0x1055, x2, 604, x14)
+
+inst_173:
+// rs2_val == 0x00000E9E and rs1_val == 0x931719FD 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x931719fd;  op2val:0xe9e
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x931719fd, 0xe9e, x2, 608, x14)
+
+inst_174:
+// rs2_val == 0x0000059B and rs1_val == 0x965768E0 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x965768e0;  op2val:0x59b
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x965768e0, 0x59b, x2, 612, x14)
+
+inst_175:
+// rs2_val == 0x00000208 and rs1_val == 0x74057241 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x74057241;  op2val:0x208
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x74057241, 0x208, x2, 616, x14)
+
+inst_176:
+// rs2_val == 0x000001E8 and rs1_val == 0x5E617F8E 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x5e617f8e;  op2val:0x1e8
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x5e617f8e, 0x1e8, x2, 620, x14)
+
+inst_177:
+// rs2_val == 0x000000D2 and rs1_val == 0x3E361858 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x3e361858;  op2val:0xd2
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x3e361858, 0xd2, x2, 624, x14)
+
+inst_178:
+// rs2_val == 0x00000071 and rs1_val == 0x13041452 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x13041452;  op2val:0x71
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x13041452, 0x71, x2, 628, x14)
+
+inst_179:
+// rs2_val == 0x00000034 and rs1_val == 0x4BDBF090 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x4bdbf090;  op2val:0x34
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x4bdbf090, 0x34, x2, 632, x14)
+
+inst_180:
+// rs2_val == 0x00000019 and rs1_val == 0x9C3ECB54 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x9c3ecb54;  op2val:0x19
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x9c3ecb54, 0x19, x2, 636, x14)
+
+inst_181:
+// rs2_val == 0x0000000B and rs1_val == 0x421E7A60 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x421e7a60;  op2val:0xb
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x421e7a60, 0xb, x2, 640, x14)
+
+inst_182:
+// rs2_val == 0x00000005 and rs1_val == 0x2577C1EC 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x2577c1ec;  op2val:0x5
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x2577c1ec, 0x5, x2, 644, x14)
+
+inst_183:
+// rs2_val == 0x00000002 and rs1_val == 0x19AF685D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x19af685d;  op2val:0x2
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x19af685d, 0x2, x2, 648, x14)
+
+inst_184:
+// rs2_val == 0x00000001 and rs1_val == 0x2FF36007 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x2ff36007;  op2val:0x1
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x2ff36007, 0x1, x2, 652, x14)
+
+inst_185:
+// rs2_val == 0x00000000 and rs1_val == 0xE286852C 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xe286852c;  op2val:0x0
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xe286852c, 0x0, x2, 656, x14)
+
+inst_186:
+// rs1_val == 0xC511488A and rs2_val == 0x97BDD982 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xc511488a;  op2val:0x97bdd982
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xc511488a, 0x97bdd982, x2, 660, x14)
+
+inst_187:
+// rs1_val == 0x65151C41 and rs2_val == 0x367E5D6D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x65151c41;  op2val:0x367e5d6d
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x65151c41, 0x367e5d6d, x2, 664, x14)
+
+inst_188:
+// rs1_val == 0x24CA83B3 and rs2_val == 0x623D8EB7 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x24ca83b3;  op2val:0x623d8eb7
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x24ca83b3, 0x623d8eb7, x2, 668, x14)
+
+inst_189:
+// rs1_val == 0x1C3B66FB and rs2_val == 0x21870F0B 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x1c3b66fb;  op2val:0x21870f0b
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x1c3b66fb, 0x21870f0b, x2, 672, x14)
+
+inst_190:
+// rs1_val == 0x0A8A6FD0 and rs2_val == 0x82450164 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xa8a6fd0;  op2val:0x82450164
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xa8a6fd0, 0x82450164, x2, 676, x14)
+
+inst_191:
+// rs1_val == 0x069CA08C and rs2_val == 0x8F2DF760 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x69ca08c;  op2val:0x8f2df760
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x69ca08c, 0x8f2df760, x2, 680, x14)
+
+inst_192:
+// rs1_val == 0x03552C95 and rs2_val == 0x7CA07386 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x3552c95;  op2val:0x7ca07386
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x3552c95, 0x7ca07386, x2, 684, x14)
+
+inst_193:
+// rs1_val == 0x0174EA19 and rs2_val == 0x19DE2BC1 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x174ea19;  op2val:0x19de2bc1
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x174ea19, 0x19de2bc1, x2, 688, x14)
+
+inst_194:
+// rs1_val == 0x00A454F2 and rs2_val == 0xEC3FBF4D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xa454f2;  op2val:0xec3fbf4d
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xa454f2, 0xec3fbf4d, x2, 692, x14)
+
+inst_195:
+// rs1_val == 0x007E9BEE and rs2_val == 0x164F1513 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x7e9bee;  op2val:0x164f1513
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x7e9bee, 0x164f1513, x2, 696, x14)
+
+inst_196:
+// rs1_val == 0x002C7CD0 and rs2_val == 0xACC6D8F2 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x2c7cd0;  op2val:0xacc6d8f2
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x2c7cd0, 0xacc6d8f2, x2, 700, x14)
+
+inst_197:
+// rs1_val == 0x00177310 and rs2_val == 0xA123F501 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x177310;  op2val:0xa123f501
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x177310, 0xa123f501, x2, 704, x14)
+
+inst_198:
+// rs1_val == 0x00091609 and rs2_val == 0xB57A6A1D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x91609;  op2val:0xb57a6a1d
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x91609, 0xb57a6a1d, x2, 708, x14)
+
+inst_199:
+// rs1_val == 0x00040BE0 and rs2_val == 0xE90794DF 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x40be0;  op2val:0xe90794df
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x40be0, 0xe90794df, x2, 712, x14)
+
+inst_200:
+// rs1_val == 0x00028D1B and rs2_val == 0xAF5570EE 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x28d1b;  op2val:0xaf5570ee
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x28d1b, 0xaf5570ee, x2, 716, x14)
+
+inst_201:
+// rs1_val == 0x0001FBE5 and rs2_val == 0xD8B9B45C 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x1fbe5;  op2val:0xd8b9b45c
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x1fbe5, 0xd8b9b45c, x2, 720, x14)
+
+inst_202:
+// rs1_val == 0x0000AAC1 and rs2_val == 0x1BA1192E 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xaac1;  op2val:0x1ba1192e
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xaac1, 0x1ba1192e, x2, 724, x14)
+
+inst_203:
+// rs1_val == 0x000062C3 and rs2_val == 0x49FE85B0 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x62c3;  op2val:0x49fe85b0
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x62c3, 0x49fe85b0, x2, 728, x14)
+
+inst_204:
+// rs1_val == 0x000022FD and rs2_val == 0x4105CCA7 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x22fd;  op2val:0x4105cca7
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x22fd, 0x4105cca7, x2, 732, x14)
+
+inst_205:
+// rs1_val == 0x000016B3 and rs2_val == 0xD7185DDA 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x16b3;  op2val:0xd7185dda
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x16b3, 0xd7185dda, x2, 736, x14)
+
+inst_206:
+// rs1_val == 0x00000A38 and rs2_val == 0xA7A11490 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xa38;  op2val:0xa7a11490
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xa38, 0xa7a11490, x2, 740, x14)
+
+inst_207:
+// rs1_val == 0x000006A7 and rs2_val == 0xA9964AEF 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x6a7;  op2val:0xa9964aef
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x6a7, 0xa9964aef, x2, 744, x14)
+
+inst_208:
+// rs1_val == 0x000003B9 and rs2_val == 0x4B4D8474 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x3b9;  op2val:0x4b4d8474
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x3b9, 0x4b4d8474, x2, 748, x14)
+
+inst_209:
+// rs1_val == 0x00000190 and rs2_val == 0x76C468AE 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x190;  op2val:0x76c468ae
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x190, 0x76c468ae, x2, 752, x14)
+
+inst_210:
+// rs1_val == 0x000000D4 and rs2_val == 0x09208A65 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xd4;  op2val:0x9208a65
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xd4, 0x9208a65, x2, 756, x14)
+
+inst_211:
+// rs1_val == 0x00000067 and rs2_val == 0x8743FEB6 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x67;  op2val:0x8743feb6
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x67, 0x8743feb6, x2, 760, x14)
+
+inst_212:
+// rs1_val == 0x00000039 and rs2_val == 0xA66B0D38 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x39;  op2val:0xa66b0d38
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x39, 0xa66b0d38, x2, 764, x14)
+
+inst_213:
+// rs1_val == 0x0000001C and rs2_val == 0xFB710734 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x1c;  op2val:0xfb710734
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x1c, 0xfb710734, x2, 768, x14)
+
+inst_214:
+// rs1_val == 0x0000000E and rs2_val == 0xA26B7F62 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xe;  op2val:0xa26b7f62
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xe, 0xa26b7f62, x2, 772, x14)
+
+inst_215:
+// rs1_val == 0x00000007 and rs2_val == 0x4DABB481 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x7;  op2val:0x4dabb481
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x7, 0x4dabb481, x2, 776, x14)
+
+inst_216:
+// rs1_val == 0x00000003 and rs2_val == 0x2FA91425 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x2fa91425
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x3, 0x2fa91425, x2, 780, x14)
+
+inst_217:
+// rs1_val == 0x00000001 and rs2_val == 0x965EDA32 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x965eda32
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x1, 0x965eda32, x2, 784, x14)
+
+inst_218:
+// rs1_val == 0x00000000 and rs2_val == 0xC7FDE805 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xc7fde805
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x0, 0xc7fde805, x2, 788, x14)
+
+inst_219:
+// rs2_val == 0x6D3F408C and rs1_val == 0xFFEC35FE 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xffec35fe;  op2val:0x6d3f408c
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xffec35fe, 0x6d3f408c, x2, 792, x14)
+
+inst_220:
+// rs2_val == 0x946A3674 and rs1_val == 0x976AD220 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x976ad220;  op2val:0x946a3674
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x976ad220, 0x946a3674, x2, 796, x14)
+
+inst_221:
+// rs2_val == 0xDC6113A4 and rs1_val == 0x5990FE96 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x5990fe96;  op2val:0xdc6113a4
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x5990fe96, 0xdc6113a4, x2, 800, x14)
+
+inst_222:
+// rs2_val == 0xE42A809C and rs1_val == 0xC96EFDC4 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xc96efdc4;  op2val:0xe42a809c
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xc96efdc4, 0xe42a809c, x2, 804, x14)
+
+inst_223:
+// rs2_val == 0xF1A25760 and rs1_val == 0xAB8534C1 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xab8534c1;  op2val:0xf1a25760
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xab8534c1, 0xf1a25760, x2, 808, x14)
+
+inst_224:
+// rs2_val == 0xFB37BEC9 and rs1_val == 0xD1142724 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xd1142724;  op2val:0xfb37bec9
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xd1142724, 0xfb37bec9, x2, 812, x14)
+
+inst_225:
+// rs2_val == 0xFCE51A66 and rs1_val == 0xF65E7737 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xf65e7737;  op2val:0xfce51a66
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xf65e7737, 0xfce51a66, x2, 816, x14)
+
+inst_226:
+// rs2_val == 0xFEDEBB9C and rs1_val == 0x16CBC21C 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x16cbc21c;  op2val:0xfedebb9c
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x16cbc21c, 0xfedebb9c, x2, 820, x14)
+
+inst_227:
+// rs2_val == 0xFF69340A and rs1_val == 0xDBDD4DD9 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xdbdd4dd9;  op2val:0xff69340a
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xdbdd4dd9, 0xff69340a, x2, 824, x14)
+
+inst_228:
+// rs2_val == 0xFF9CF3F4 and rs1_val == 0x4BD90A77 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x4bd90a77;  op2val:0xff9cf3f4
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x4bd90a77, 0xff9cf3f4, x2, 828, x14)
+
+inst_229:
+// rs2_val == 0xFFC00793 and rs1_val == 0xCEBE24D9 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xcebe24d9;  op2val:0xffc00793
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xcebe24d9, 0xffc00793, x2, 832, x14)
+
+inst_230:
+// rs2_val == 0xFFEE1FC4 and rs1_val == 0xA0E0BD86 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xa0e0bd86;  op2val:0xffee1fc4
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xa0e0bd86, 0xffee1fc4, x2, 836, x14)
+
+inst_231:
+// rs2_val == 0xFFF06038 and rs1_val == 0x3CC279B3 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x3cc279b3;  op2val:0xfff06038
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x3cc279b3, 0xfff06038, x2, 840, x14)
+
+inst_232:
+// rs2_val == 0xFFF93D53 and rs1_val == 0x754F9B96 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x754f9b96;  op2val:0xfff93d53
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x754f9b96, 0xfff93d53, x2, 844, x14)
+
+inst_233:
+// rs2_val == 0xFFFC47E8 and rs1_val == 0x72745307 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x72745307;  op2val:0xfffc47e8
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x72745307, 0xfffc47e8, x2, 848, x14)
+
+inst_234:
+// rs2_val == 0xFFFE7302 and rs1_val == 0xDCAE6D62 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xdcae6d62;  op2val:0xfffe7302
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xdcae6d62, 0xfffe7302, x2, 852, x14)
+
+inst_235:
+// rs2_val == 0xFFFF1CE8 and rs1_val == 0x7C2C966D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x7c2c966d;  op2val:0xffff1ce8
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x7c2c966d, 0xffff1ce8, x2, 856, x14)
+
+inst_236:
+// rs2_val == 0xFFFFB5C6 and rs1_val == 0x9BB4752D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x9bb4752d;  op2val:0xffffb5c6
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x9bb4752d, 0xffffb5c6, x2, 860, x14)
+
+inst_237:
+// rs2_val == 0xFFFFDFA4 and rs1_val == 0x17BE082F 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x17be082f;  op2val:0xffffdfa4
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x17be082f, 0xffffdfa4, x2, 864, x14)
+
+inst_238:
+// rs2_val == 0xFFFFEF0B and rs1_val == 0x109FF475 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x109ff475;  op2val:0xffffef0b
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x109ff475, 0xffffef0b, x2, 868, x14)
+
+inst_239:
+// rs2_val == 0xFFFFF43F and rs1_val == 0x00B97EA6 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xb97ea6;  op2val:0xfffff43f
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xb97ea6, 0xfffff43f, x2, 872, x14)
+
+inst_240:
+// rs2_val == 0xFFFFFB4A and rs1_val == 0xF956EC0B 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xf956ec0b;  op2val:0xfffffb4a
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xf956ec0b, 0xfffffb4a, x2, 876, x14)
+
+inst_241:
+// rs2_val == 0xFFFFFDA4 and rs1_val == 0x70FC1AFC 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x70fc1afc;  op2val:0xfffffda4
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x70fc1afc, 0xfffffda4, x2, 880, x14)
+
+inst_242:
+// rs2_val == 0xFFFFFECB and rs1_val == 0x6348306E 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x6348306e;  op2val:0xfffffecb
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x6348306e, 0xfffffecb, x2, 884, x14)
+
+inst_243:
+// rs2_val == 0xFFFFFF54 and rs1_val == 0x66B072B9 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x66b072b9;  op2val:0xffffff54
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x66b072b9, 0xffffff54, x2, 888, x14)
+
+inst_244:
+// rs2_val == 0xFFFFFFA9 and rs1_val == 0x7FF822ED 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x7ff822ed;  op2val:0xffffffa9
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x7ff822ed, 0xffffffa9, x2, 892, x14)
+
+inst_245:
+// rs2_val == 0xFFFFFFC3 and rs1_val == 0xE918BE9F 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xe918be9f;  op2val:0xffffffc3
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xe918be9f, 0xffffffc3, x2, 896, x14)
+
+inst_246:
+// rs2_val == 0xFFFFFFE7 and rs1_val == 0xE4BAE7F6 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xe4bae7f6;  op2val:0xffffffe7
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xe4bae7f6, 0xffffffe7, x2, 900, x14)
+
+inst_247:
+// rs2_val == 0xFFFFFFF1 and rs1_val == 0xDE9A896F 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xde9a896f;  op2val:0xfffffff1
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xde9a896f, 0xfffffff1, x2, 904, x14)
+
+inst_248:
+// rs2_val == 0xFFFFFFF8 and rs1_val == 0x2881E531 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x2881e531;  op2val:0xfffffff8
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x2881e531, 0xfffffff8, x2, 908, x14)
+
+inst_249:
+// rs2_val == 0xFFFFFFFC and rs1_val == 0x1475F78D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x1475f78d;  op2val:0xfffffffc
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x1475f78d, 0xfffffffc, x2, 912, x14)
+
+inst_250:
+// rs2_val == 0xFFFFFFFE and rs1_val == 0xE59CF78F 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xe59cf78f;  op2val:0xfffffffe
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xe59cf78f, 0xfffffffe, x2, 916, x14)
+
+inst_251:
+// rs2_val == 0xFFFFFFFF and rs1_val == 0xB66B3284 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xb66b3284;  op2val:0xffffffff
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xb66b3284, 0xffffffff, x2, 920, x14)
+
+inst_252:
+// rs1_val == 0x6F4930C9 and rs2_val == 0x39422745 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x6f4930c9;  op2val:0x39422745
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x6f4930c9, 0x39422745, x2, 924, x14)
+
+inst_253:
+// rs1_val == 0x85D97467 and rs2_val == 0x58FA6E1C 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x85d97467;  op2val:0x58fa6e1c
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x85d97467, 0x58fa6e1c, x2, 928, x14)
+
+inst_254:
+// rs1_val == 0xC70AFC93 and rs2_val == 0x2D143295 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xc70afc93;  op2val:0x2d143295
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xc70afc93, 0x2d143295, x2, 932, x14)
+
+inst_255:
+// rs1_val == 0xE911655F and rs2_val == 0xD230B46C 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xe911655f;  op2val:0xd230b46c
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xe911655f, 0xd230b46c, x2, 936, x14)
+
+inst_256:
+// rs1_val == 0xF4AB0A39 and rs2_val == 0x4D753AC1 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xf4ab0a39;  op2val:0x4d753ac1
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xf4ab0a39, 0x4d753ac1, x2, 940, x14)
+
+inst_257:
+// rs1_val == 0xF8BD4821 and rs2_val == 0x1E9667C2 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xf8bd4821;  op2val:0x1e9667c2
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xf8bd4821, 0x1e9667c2, x2, 944, x14)
+
+inst_258:
+// rs1_val == 0xFCD7E667 and rs2_val == 0xAE4839A1 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfcd7e667;  op2val:0xae4839a1
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfcd7e667, 0xae4839a1, x2, 948, x14)
+
+inst_259:
+// rs1_val == 0xFE71CFDF and rs2_val == 0x6A013380 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfe71cfdf;  op2val:0x6a013380
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfe71cfdf, 0x6a013380, x2, 952, x14)
+
+inst_260:
+// rs1_val == 0xFF1C11AE and rs2_val == 0x59432A19 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xff1c11ae;  op2val:0x59432a19
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xff1c11ae, 0x59432a19, x2, 956, x14)
+
+inst_261:
+// rs1_val == 0xFF89799A and rs2_val == 0xCEB506F6 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xff89799a;  op2val:0xceb506f6
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xff89799a, 0xceb506f6, x2, 960, x14)
+
+inst_262:
+// rs1_val == 0xFFC80B13 and rs2_val == 0xC5EC6148 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xffc80b13;  op2val:0xc5ec6148
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xffc80b13, 0xc5ec6148, x2, 964, x14)
+
+inst_263:
+// rs1_val == 0xFFE94647 and rs2_val == 0x99EF1857 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xffe94647;  op2val:0x99ef1857
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xffe94647, 0x99ef1857, x2, 968, x14)
+
+inst_264:
+// rs1_val == 0xFFF263CF and rs2_val == 0x14B91C79 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfff263cf;  op2val:0x14b91c79
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfff263cf, 0x14b91c79, x2, 972, x14)
+
+inst_265:
+// rs1_val == 0xFFF919A1 and rs2_val == 0xA86B8A6E 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfff919a1;  op2val:0xa86b8a6e
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfff919a1, 0xa86b8a6e, x2, 976, x14)
+
+inst_266:
+// rs1_val == 0xFFFDE89D and rs2_val == 0x08208D09 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfffde89d;  op2val:0x8208d09
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfffde89d, 0x8208d09, x2, 980, x14)
+
+inst_267:
+// rs1_val == 0xFFFEC9D0 and rs2_val == 0x69B1DCBF 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfffec9d0;  op2val:0x69b1dcbf
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfffec9d0, 0x69b1dcbf, x2, 984, x14)
+
+inst_268:
+// rs1_val == 0xFFFF5576 and rs2_val == 0x807DA245 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xffff5576;  op2val:0x807da245
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xffff5576, 0x807da245, x2, 988, x14)
+
+inst_269:
+// rs1_val == 0xFFFFB6DF and rs2_val == 0x95A4D257 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xffffb6df;  op2val:0x95a4d257
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xffffb6df, 0x95a4d257, x2, 992, x14)
+
+inst_270:
+// rs1_val == 0xFFFFC561 and rs2_val == 0x735C076B 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xffffc561;  op2val:0x735c076b
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xffffc561, 0x735c076b, x2, 996, x14)
+
+inst_271:
+// rs1_val == 0xFFFFEAB5 and rs2_val == 0xE5F0307E 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xffffeab5;  op2val:0xe5f0307e
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xffffeab5, 0xe5f0307e, x2, 1000, x14)
+
+inst_272:
+// rs1_val == 0xFFFFF602 and rs2_val == 0xE8DAC663 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfffff602;  op2val:0xe8dac663
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfffff602, 0xe8dac663, x2, 1004, x14)
+
+inst_273:
+// rs1_val == 0xFFFFF8B1 and rs2_val == 0x0109C207 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfffff8b1;  op2val:0x109c207
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfffff8b1, 0x109c207, x2, 1008, x14)
+
+inst_274:
+// rs1_val == 0xFFFFFCA0 and rs2_val == 0x600FECC1 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfffffca0;  op2val:0x600fecc1
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfffffca0, 0x600fecc1, x2, 1012, x14)
+
+inst_275:
+// rs1_val == 0xFFFFFECC and rs2_val == 0xFB7F6F5D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfffffecc;  op2val:0xfb7f6f5d
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfffffecc, 0xfb7f6f5d, x2, 1016, x14)
+
+inst_276:
+// rs1_val == 0xFFFFFF6E and rs2_val == 0x5CD2875E 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xffffff6e;  op2val:0x5cd2875e
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xffffff6e, 0x5cd2875e, x2, 1020, x14)
+
+inst_277:
+// rs1_val == 0xFFFFFF84 and rs2_val == 0xACCA7F0D 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xffffff84;  op2val:0xacca7f0d
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xffffff84, 0xacca7f0d, x2, 1024, x14)
+
+inst_278:
+// rs1_val == 0xFFFFFFDD and rs2_val == 0x5AE6A228 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xffffffdd;  op2val:0x5ae6a228
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xffffffdd, 0x5ae6a228, x2, 1028, x14)
+
+inst_279:
+// rs1_val == 0xFFFFFFE7 and rs2_val == 0xFF1E5BEF 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xffffffe7;  op2val:0xff1e5bef
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xffffffe7, 0xff1e5bef, x2, 1032, x14)
+
+inst_280:
+// rs1_val == 0xFFFFFFF4 and rs2_val == 0x137A9777 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfffffff4;  op2val:0x137a9777
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfffffff4, 0x137a9777, x2, 1036, x14)
+
+inst_281:
+// rs1_val == 0xFFFFFFFA and rs2_val == 0x854A9657 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffa;  op2val:0x854a9657
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfffffffa, 0x854a9657, x2, 1040, x14)
+
+inst_282:
+// rs1_val == 0xFFFFFFFD and rs2_val == 0xCF84B683 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffd;  op2val:0xcf84b683
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfffffffd, 0xcf84b683, x2, 1044, x14)
+
+inst_283:
+// rs1_val == 0xFFFFFFFE and rs2_val == 0x93FDCAB8 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffe;  op2val:0x93fdcab8
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xfffffffe, 0x93fdcab8, x2, 1048, x14)
+
+inst_284:
+// rs1_val == 0x91766f62 and rs2_val == 0x5570084b 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0x91766f62;  op2val:0x5570084b
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0x91766f62, 0x5570084b, x2, 1052, x14)
+
+inst_285:
+// rs1_val == 0xc0fe15dd and rs2_val == 0x9f053821 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xc0fe15dd;  op2val:0x9f053821
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xc0fe15dd, 0x9f053821, x2, 1056, x14)
+
+inst_286:
+// rs1_val == 0xb49c83dc and rs2_val == 0xbb61a9cd 
+// opcode: xperm8 ; op1:x10; op2:x11; dest:x12; op1val:0xb49c83dc;  op2val:0xbb61a9cd
+TEST_RR_OP(xperm8, x12, x10, x11, 0x00000000, 0xb49c83dc, 0xbb61a9cd, x2, 1060, x14)
+#endif
+
+
+RVTEST_CODE_END
+RVMODEL_HALT
+
+RVTEST_DATA_BEGIN
+.align 4
+rvtest_data:
+.word 0xbabecafe
+RVTEST_DATA_END
+
+RVMODEL_DATA_BEGIN
+
+
+signature_x8_0:
+    .fill 0*(XLEN/32),4,0xdeadbeef
+
+
+signature_x8_1:
+    .fill 21*(XLEN/32),4,0xdeadbeef
+
+
+signature_x2_0:
+    .fill 266*(XLEN/32),4,0xdeadbeef
+
+#ifdef rvtest_mtrap_routine
+
+mtrap_sigptr:
+    .fill 64*(XLEN/32),4,0xdeadbeef
+
+#endif
+
+#ifdef rvtest_gpr_save
+
+gpr_save:
+    .fill 32*(XLEN/32),4,0xdeadbeef
+
+#endif
+
+RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/zip-01.S b/riscv-test-suite/rv32i_m/K/src/zip-01.S
similarity index 100%
rename from riscv-test-suite/rv32i_m/K_unratified/src/zip-01.S
rename to riscv-test-suite/rv32i_m/K/src/zip-01.S
diff --git a/riscv-test-suite/rv32i_m/K_unratified/references/packu-01.reference_output b/riscv-test-suite/rv32i_m/K_unratified/references/packu-01.reference_output
deleted file mode 100644
index a194e6e..0000000
--- a/riscv-test-suite/rv32i_m/K_unratified/references/packu-01.reference_output
+++ /dev/null
@@ -1,272 +0,0 @@
-0857ffff
-00004ffe
-afc0afc0
-4000af6e
-5b135b13
-00000000
-b8009c73
-b4005a69
-3e00ed52
-fb00b5cb
-68802932
-b7400000
-5ce08e92
-49f096a3
-53d80a09
-2ec46f6e
-8e86236c
-6fbfe2ed
-354e06fa
-00004143
-dffacac7
-45d1df88
-9069bd23
-f5b1f259
-06b65a8e
-bfb07a36
-d8381e3c
-5c46d4fa
-cf7a27a1
-05c20a3e
-eec5cb81
-ca71577f
-60e39b5e
-76f85d3b
-fd100000
-7b248000
-56f34000
-7592a000
-b9d31000
-46cba800
-4616e400
-8cca8e00
-9b771300
-6d5f8b80
-06967ec0
-6e1e3da0
-2ded2010
-3c279838
-4f5580f4
-b0ab4356
-42f562a9
-b9f06034
-9bfa5ef6
-989179df
-9b81864c
-d0d1735c
-71992955
-8248a9a5
-eb3dc340
-d7a7394d
-d1bac667
-d19e7059
-35d398a5
-70a7d306
-9fcd18a0
-5fefc366
-598b797d
-0c04b7e7
-cd41d24f
-12035850
-7a9aee8f
-2aa82655
-211d0c96
-59dd88f9
-711e6f2b
-19835c6c
-088b58fc
-9a6d636a
-37e04ed6
-5e59d2d1
-dd120d77
-872e2311
-55360fb1
-fdd28dfc
-30bd7312
-a743c61b
-9987ebda
-118fc215
-65df75ee
-6cbf09c1
-347fa405
-c4ff4990
-41ff3c5b
-6bffd95f
-87ff2578
-cfff0820
-9fff350c
-3fff7966
-7fff51d6
-ffffd5a2
-4f82ff77
-00c2f89a
-b1f511b3
-39bec993
-31604b9a
-57619541
-09e494b4
-9e03dc8f
-7f10b903
-9a7eb494
-59c0e2dd
-de45bbaf
-40f2ce5c
-24493993
-de14eed7
-b808008e
-76b112c2
-5dcfe3a5
-47b79b03
-759f5f07
-5b3333cf
-2d37709f
-fcb6d1bf
-1e0bab7f
-fb3e7cff
-d99559ff
-e084dbff
-258ef7ff
-ff7d6fff
-4b6e9fff
-d8853fff
-bbe87fff
-e3d6ffff
-97020494
-5cb5f265
-27ef21af
-1d1e482e
-0fc20f7a
-04e96953
-025f043e
-017812fa
-00a3119b
-00497db2
-0025b45f
-00184153
-000a1a95
-00071418
-0003f33c
-00018dce
-00003096
-00009c46
-00002775
-000062d7
-00009317
-00009657
-00007405
-00005e61
-00003e36
-00001304
-00004bdb
-00009c3e
-0000421e
-00002577
-000019af
-00002ff3
-0000e286
-97bdc511
-367e6515
-623d24ca
-21871c3b
-82450a8a
-8f2d069c
-7ca00355
-19de0174
-ec3f00a4
-164f007e
-acc6002c
-a1230017
-b57a0009
-e9070004
-af550002
-d8b90001
-1ba10000
-49fe0000
-41050000
-d7180000
-a7a10000
-a9960000
-4b4d0000
-76c40000
-09200000
-87430000
-a66b0000
-fb710000
-a26b0000
-4dab0000
-2fa90000
-965e0000
-c7fd0000
-6d3fffec
-946a976a
-dc615990
-e42ac96e
-f1a2ab85
-fb37d114
-fce5f65e
-fede16cb
-ff69dbdd
-ff9c4bd9
-ffc0cebe
-ffeea0e0
-fff03cc2
-fff9754f
-fffc7274
-fffedcae
-ffff7c2c
-ffff9bb4
-ffff17be
-ffff109f
-ffff00b9
-fffff956
-ffff70fc
-ffff6348
-ffff66b0
-ffff7ff8
-ffffe918
-ffffe4ba
-ffffde9a
-ffff2881
-ffff1475
-ffffe59c
-ffffb66b
-39426f49
-58fa85d9
-2d14c70a
-d230e911
-4d75f4ab
-1e96f8bd
-ae48fcd7
-6a01fe71
-5943ff1c
-ceb5ff89
-c5ecffc8
-99efffe9
-14b9fff2
-a86bfff9
-0820fffd
-69b1fffe
-807dffff
-95a4ffff
-735cffff
-e5f0ffff
-e8daffff
-0109ffff
-600fffff
-fb7fffff
-5cd2ffff
-accaffff
-5ae6ffff
-ff1effff
-137affff
-854affff
-cf84ffff
-93fdffff
-8000afc0
-e0005b13
-90003eea
-b740bc5f
-fb074143
-00000000
-00000000
-00000000
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/packu-01.S b/riscv-test-suite/rv32i_m/K_unratified/src/packu-01.S
deleted file mode 100644
index c64c0f1..0000000
--- a/riscv-test-suite/rv32i_m/K_unratified/src/packu-01.S
+++ /dev/null
@@ -1,1426 +0,0 @@
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.5
-// timestamp : Thu May 20 05:54:26 2021 GMT
-// usage     : riscv_ctg \
-//                  --cgf /scratch/git-repo/github/riscv-ctg/sample_cgfs/dataset.cgf \
-//                  --cgf /scratch/git-repo/github/riscv-ctg/sample_cgfs/rv32i_k.cgf \
-//                  --base-isa rv32i \
-//                  --randomize
-// -----------
-//
-// -----------
-// Copyright (c) 2021. Indian Institute of Technology Madras. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the packu instruction of the RISC-V  extension for the packu covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*K.*);def TEST_CASE_1=True;",packu)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKs.*);def TEST_CASE_1=True;",packu)
-
-RVTEST_CASE(2,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKn.*);def TEST_CASE_1=True;",packu)
-
-RVTEST_CASE(3,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKb.*);def TEST_CASE_1=True;",packu)
-
-RVTEST_SIGBASE( x17,signature_x17_1)
-
-inst_0:
-// rs2 == rd != rs1, rs1==x9, rs2==x14, rd==x14, rs1_val == 0xFFFFFFFF and rs2_val == 0x08577EB1 
-// opcode: packu ; op1:x9; op2:x14; dest:x14; op1val:0xffffffff;  op2val:0x8577eb1
-TEST_RR_OP(packu, x14, x9, x14, 0x00000000, 0xffffffff, 0x8577eb1, x17, 0, x7)
-
-inst_1:
-// rs1 == rd != rs2, rs1==x20, rs2==x23, rd==x20, rs2_val == 0x00000000 and rs1_val == 0x4FFE831A 
-// opcode: packu ; op1:x20; op2:x23; dest:x20; op1val:0x4ffe831a;  op2val:0x0
-TEST_RR_OP(packu, x20, x20, x23, 0x00000000, 0x4ffe831a, 0x0, x17, 4, x7)
-
-inst_2:
-// rs1 == rs2 != rd, rs1==x8, rs2==x8, rd==x28, rs2_val == 0x80000000 and rs1_val == 0xAFC08ACE 
-// opcode: packu ; op1:x8; op2:x8; dest:x28; op1val:0xafc08ace;  op2val:0xafc08ace
-TEST_RR_OP(packu, x28, x8, x8, 0x00000000, 0xafc08ace, 0xafc08ace, x17, 8, x7)
-
-inst_3:
-// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x10, rs2==x11, rd==x22, rs2_val == 0x40000000 and rs1_val == 0xAF6E9055 
-// opcode: packu ; op1:x10; op2:x11; dest:x22; op1val:0xaf6e9055;  op2val:0x40000000
-TEST_RR_OP(packu, x22, x10, x11, 0x00000000, 0xaf6e9055, 0x40000000, x17, 12, x7)
-
-inst_4:
-// rs1 == rs2 == rd, rs1==x1, rs2==x1, rd==x1, rs2_val == 0xE0000000 and rs1_val == 0x5B130474 
-// opcode: packu ; op1:x1; op2:x1; dest:x1; op1val:0x5b130474;  op2val:0x5b130474
-TEST_RR_OP(packu, x1, x1, x1, 0x00000000, 0x5b130474, 0x5b130474, x17, 16, x7)
-
-inst_5:
-// rs1==x5, rs2==x16, rd==x0, rs2_val == 0x90000000 and rs1_val == 0x3EEA126E 
-// opcode: packu ; op1:x5; op2:x16; dest:x0; op1val:0x3eea126e;  op2val:0x90000000
-TEST_RR_OP(packu, x0, x5, x16, 0x00000000, 0x3eea126e, 0x90000000, x17, 20, x7)
-
-inst_6:
-// rs1==x21, rs2==x18, rd==x6, rs2_val == 0xB8000000 and rs1_val == 0x9C734D77 
-// opcode: packu ; op1:x21; op2:x18; dest:x6; op1val:0x9c734d77;  op2val:0xb8000000
-TEST_RR_OP(packu, x6, x21, x18, 0x00000000, 0x9c734d77, 0xb8000000, x17, 24, x7)
-
-inst_7:
-// rs1==x19, rs2==x12, rd==x23, rs2_val == 0xB4000000 and rs1_val == 0x5A694BCA 
-// opcode: packu ; op1:x19; op2:x12; dest:x23; op1val:0x5a694bca;  op2val:0xb4000000
-TEST_RR_OP(packu, x23, x19, x12, 0x00000000, 0x5a694bca, 0xb4000000, x17, 28, x7)
-
-inst_8:
-// rs1==x31, rs2==x13, rd==x11, rs2_val == 0x3E000000 and rs1_val == 0xED52E4CA 
-// opcode: packu ; op1:x31; op2:x13; dest:x11; op1val:0xed52e4ca;  op2val:0x3e000000
-TEST_RR_OP(packu, x11, x31, x13, 0x00000000, 0xed52e4ca, 0x3e000000, x17, 32, x7)
-
-inst_9:
-// rs1==x12, rs2==x25, rd==x4, rs2_val == 0xFB000000 and rs1_val == 0xB5CB2A93 
-// opcode: packu ; op1:x12; op2:x25; dest:x4; op1val:0xb5cb2a93;  op2val:0xfb000000
-TEST_RR_OP(packu, x4, x12, x25, 0x00000000, 0xb5cb2a93, 0xfb000000, x17, 36, x7)
-
-inst_10:
-// rs1==x15, rs2==x6, rd==x16, rs2_val == 0x68800000 and rs1_val == 0x29324E16 
-// opcode: packu ; op1:x15; op2:x6; dest:x16; op1val:0x29324e16;  op2val:0x68800000
-TEST_RR_OP(packu, x16, x15, x6, 0x00000000, 0x29324e16, 0x68800000, x17, 40, x7)
-
-inst_11:
-// rs1==x0, rs2==x15, rd==x12, rs2_val == 0xB7400000 and rs1_val == 0xBC5FB419 
-// opcode: packu ; op1:x0; op2:x15; dest:x12; op1val:0x0;  op2val:0xb7400000
-TEST_RR_OP(packu, x12, x0, x15, 0x00000000, 0x0, 0xb7400000, x17, 44, x7)
-
-inst_12:
-// rs1==x16, rs2==x3, rd==x13, rs2_val == 0x5CE00000 and rs1_val == 0x8E92E1B8 
-// opcode: packu ; op1:x16; op2:x3; dest:x13; op1val:0x8e92e1b8;  op2val:0x5ce00000
-TEST_RR_OP(packu, x13, x16, x3, 0x00000000, 0x8e92e1b8, 0x5ce00000, x17, 48, x7)
-
-inst_13:
-// rs1==x18, rs2==x2, rd==x29, rs2_val == 0x49F00000 and rs1_val == 0x96A3B48B 
-// opcode: packu ; op1:x18; op2:x2; dest:x29; op1val:0x96a3b48b;  op2val:0x49f00000
-TEST_RR_OP(packu, x29, x18, x2, 0x00000000, 0x96a3b48b, 0x49f00000, x17, 52, x7)
-
-inst_14:
-// rs1==x4, rs2==x30, rd==x18, rs2_val == 0x53D80000 and rs1_val == 0x0A095049 
-// opcode: packu ; op1:x4; op2:x30; dest:x18; op1val:0xa095049;  op2val:0x53d80000
-TEST_RR_OP(packu, x18, x4, x30, 0x00000000, 0xa095049, 0x53d80000, x17, 56, x7)
-
-inst_15:
-// rs1==x30, rs2==x22, rd==x2, rs2_val == 0x2EC40000 and rs1_val == 0x6F6E71B7 
-// opcode: packu ; op1:x30; op2:x22; dest:x2; op1val:0x6f6e71b7;  op2val:0x2ec40000
-TEST_RR_OP(packu, x2, x30, x22, 0x00000000, 0x6f6e71b7, 0x2ec40000, x17, 60, x7)
-
-inst_16:
-// rs1==x23, rs2==x26, rd==x31, rs2_val == 0x8E860000 and rs1_val == 0x236CC43D 
-// opcode: packu ; op1:x23; op2:x26; dest:x31; op1val:0x236cc43d;  op2val:0x8e860000
-TEST_RR_OP(packu, x31, x23, x26, 0x00000000, 0x236cc43d, 0x8e860000, x17, 64, x7)
-
-inst_17:
-// rs1==x11, rs2==x4, rd==x15, rs2_val == 0x6FBF0000 and rs1_val == 0xE2ED8971 
-// opcode: packu ; op1:x11; op2:x4; dest:x15; op1val:0xe2ed8971;  op2val:0x6fbf0000
-TEST_RR_OP(packu, x15, x11, x4, 0x00000000, 0xe2ed8971, 0x6fbf0000, x17, 68, x16)
-
-inst_18:
-// rs1==x29, rs2==x7, rd==x24, rs2_val == 0x354E8000 and rs1_val == 0x06FA7B3E 
-// opcode: packu ; op1:x29; op2:x7; dest:x24; op1val:0x6fa7b3e;  op2val:0x354e8000
-TEST_RR_OP(packu, x24, x29, x7, 0x00000000, 0x6fa7b3e, 0x354e8000, x17, 72, x16)
-RVTEST_SIGBASE( x1,signature_x1_0)
-
-inst_19:
-// rs1==x17, rs2==x0, rd==x7, rs2_val == 0xFB07C000 and rs1_val == 0x4143DA51 
-// opcode: packu ; op1:x17; op2:x0; dest:x7; op1val:0x4143da51;  op2val:0x0
-TEST_RR_OP(packu, x7, x17, x0, 0x00000000, 0x4143da51, 0x0, x1, 0, x16)
-
-inst_20:
-// rs1==x7, rs2==x17, rd==x10, rs2_val == 0xDFFA2000 and rs1_val == 0xCAC78511 
-// opcode: packu ; op1:x7; op2:x17; dest:x10; op1val:0xcac78511;  op2val:0xdffa2000
-TEST_RR_OP(packu, x10, x7, x17, 0x00000000, 0xcac78511, 0xdffa2000, x1, 4, x16)
-
-inst_21:
-// rs1==x27, rs2==x24, rd==x5, rs2_val == 0x45D1F000 and rs1_val == 0xDF880B11 
-// opcode: packu ; op1:x27; op2:x24; dest:x5; op1val:0xdf880b11;  op2val:0x45d1f000
-TEST_RR_OP(packu, x5, x27, x24, 0x00000000, 0xdf880b11, 0x45d1f000, x1, 8, x16)
-
-inst_22:
-// rs1==x26, rs2==x28, rd==x3, rs2_val == 0x9069A800 and rs1_val == 0xBD230058 
-// opcode: packu ; op1:x26; op2:x28; dest:x3; op1val:0xbd230058;  op2val:0x9069a800
-TEST_RR_OP(packu, x3, x26, x28, 0x00000000, 0xbd230058, 0x9069a800, x1, 12, x16)
-
-inst_23:
-// rs1==x6, rs2==x9, rd==x27, rs2_val == 0xF5B1B400 and rs1_val == 0xF2597377 
-// opcode: packu ; op1:x6; op2:x9; dest:x27; op1val:0xf2597377;  op2val:0xf5b1b400
-TEST_RR_OP(packu, x27, x6, x9, 0x00000000, 0xf2597377, 0xf5b1b400, x1, 16, x16)
-
-inst_24:
-// rs1==x22, rs2==x31, rd==x8, rs2_val == 0x06B6DA00 and rs1_val == 0x5A8E7F31 
-// opcode: packu ; op1:x22; op2:x31; dest:x8; op1val:0x5a8e7f31;  op2val:0x6b6da00
-TEST_RR_OP(packu, x8, x22, x31, 0x00000000, 0x5a8e7f31, 0x6b6da00, x1, 20, x16)
-
-inst_25:
-// rs1==x25, rs2==x19, rd==x9, rs2_val == 0xBFB0F100 and rs1_val == 0x7A3621F5 
-// opcode: packu ; op1:x25; op2:x19; dest:x9; op1val:0x7a3621f5;  op2val:0xbfb0f100
-TEST_RR_OP(packu, x9, x25, x19, 0x00000000, 0x7a3621f5, 0xbfb0f100, x1, 24, x16)
-
-inst_26:
-// rs1==x28, rs2==x27, rd==x17, rs2_val == 0xD838C880 and rs1_val == 0x1E3C492C 
-// opcode: packu ; op1:x28; op2:x27; dest:x17; op1val:0x1e3c492c;  op2val:0xd838c880
-TEST_RR_OP(packu, x17, x28, x27, 0x00000000, 0x1e3c492c, 0xd838c880, x1, 28, x16)
-
-inst_27:
-// rs1==x2, rs2==x29, rd==x19, rs2_val == 0x5C46AEC0 and rs1_val == 0xD4FAF4B1 
-// opcode: packu ; op1:x2; op2:x29; dest:x19; op1val:0xd4faf4b1;  op2val:0x5c46aec0
-TEST_RR_OP(packu, x19, x2, x29, 0x00000000, 0xd4faf4b1, 0x5c46aec0, x1, 32, x16)
-
-inst_28:
-// rs1==x13, rs2==x5, rd==x30, rs2_val == 0xCF7AC620 and rs1_val == 0x27A16894 
-// opcode: packu ; op1:x13; op2:x5; dest:x30; op1val:0x27a16894;  op2val:0xcf7ac620
-TEST_RR_OP(packu, x30, x13, x5, 0x00000000, 0x27a16894, 0xcf7ac620, x1, 36, x16)
-
-inst_29:
-// rs1==x14, rs2==x10, rd==x26, rs2_val == 0x05C2F650 and rs1_val == 0x0A3EF19E 
-// opcode: packu ; op1:x14; op2:x10; dest:x26; op1val:0xa3ef19e;  op2val:0x5c2f650
-TEST_RR_OP(packu, x26, x14, x10, 0x00000000, 0xa3ef19e, 0x5c2f650, x1, 40, x16)
-
-inst_30:
-// rs1==x24, rs2==x21, rd==x25, rs2_val == 0xEEC50588 and rs1_val == 0xCB8193EF 
-// opcode: packu ; op1:x24; op2:x21; dest:x25; op1val:0xcb8193ef;  op2val:0xeec50588
-TEST_RR_OP(packu, x25, x24, x21, 0x00000000, 0xcb8193ef, 0xeec50588, x1, 44, x16)
-
-inst_31:
-// rs1==x3, rs2==x20, rd==x21, rs2_val == 0xCA7160CC and rs1_val == 0x577F8847 
-// opcode: packu ; op1:x3; op2:x20; dest:x21; op1val:0x577f8847;  op2val:0xca7160cc
-TEST_RR_OP(packu, x21, x3, x20, 0x00000000, 0x577f8847, 0xca7160cc, x1, 48, x16)
-
-inst_32:
-// rs2_val == 0x60E30DA2 and rs1_val == 0x9B5EAF0A 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x9b5eaf0a;  op2val:0x60e30da2
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x9b5eaf0a, 0x60e30da2, x1, 52, x16)
-
-inst_33:
-// rs2_val == 0x76F86039 and rs1_val == 0x5D3BBCE0 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x5d3bbce0;  op2val:0x76f86039
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x5d3bbce0, 0x76f86039, x1, 56, x2)
-
-inst_34:
-// rs1_val == 0x00000000 and rs2_val == 0xFD1032E8 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xfd1032e8
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x0, 0xfd1032e8, x1, 60, x2)
-
-inst_35:
-// rs1_val == 0x80000000 and rs2_val == 0x7B246C17 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x80000000;  op2val:0x7b246c17
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x80000000, 0x7b246c17, x1, 64, x2)
-
-inst_36:
-// rs1_val == 0x40000000 and rs2_val == 0x56F3EEF1 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x40000000;  op2val:0x56f3eef1
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x40000000, 0x56f3eef1, x1, 68, x2)
-
-inst_37:
-// rs1_val == 0xA0000000 and rs2_val == 0x75923260 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xa0000000;  op2val:0x75923260
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xa0000000, 0x75923260, x1, 72, x2)
-
-inst_38:
-// rs1_val == 0x10000000 and rs2_val == 0xB9D3087C 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x10000000;  op2val:0xb9d3087c
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x10000000, 0xb9d3087c, x1, 76, x2)
-
-inst_39:
-// rs1_val == 0xA8000000 and rs2_val == 0x46CBD355 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xa8000000;  op2val:0x46cbd355
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xa8000000, 0x46cbd355, x1, 80, x2)
-
-inst_40:
-// rs1_val == 0xE4000000 and rs2_val == 0x4616E73D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xe4000000;  op2val:0x4616e73d
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xe4000000, 0x4616e73d, x1, 84, x2)
-
-inst_41:
-// rs1_val == 0x8E000000 and rs2_val == 0x8CCAEC71 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x8e000000;  op2val:0x8ccaec71
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x8e000000, 0x8ccaec71, x1, 88, x2)
-
-inst_42:
-// rs1_val == 0x13000000 and rs2_val == 0x9B774054 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x13000000;  op2val:0x9b774054
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x13000000, 0x9b774054, x1, 92, x2)
-
-inst_43:
-// rs1_val == 0x8B800000 and rs2_val == 0x6D5FCD18 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x8b800000;  op2val:0x6d5fcd18
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x8b800000, 0x6d5fcd18, x1, 96, x2)
-
-inst_44:
-// rs1_val == 0x7EC00000 and rs2_val == 0x0696F561 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x7ec00000;  op2val:0x696f561
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x7ec00000, 0x696f561, x1, 100, x2)
-
-inst_45:
-// rs1_val == 0x3DA00000 and rs2_val == 0x6E1E98E2 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x3da00000;  op2val:0x6e1e98e2
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x3da00000, 0x6e1e98e2, x1, 104, x2)
-
-inst_46:
-// rs1_val == 0x20100000 and rs2_val == 0x2DEDB6A7 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x20100000;  op2val:0x2dedb6a7
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x20100000, 0x2dedb6a7, x1, 108, x2)
-
-inst_47:
-// rs1_val == 0x98380000 and rs2_val == 0x3C272728 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x98380000;  op2val:0x3c272728
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x98380000, 0x3c272728, x1, 112, x2)
-
-inst_48:
-// rs1_val == 0x80F40000 and rs2_val == 0x4F55C73D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x80f40000;  op2val:0x4f55c73d
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x80f40000, 0x4f55c73d, x1, 116, x2)
-
-inst_49:
-// rs1_val == 0x43560000 and rs2_val == 0xB0AB577A 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x43560000;  op2val:0xb0ab577a
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x43560000, 0xb0ab577a, x1, 120, x2)
-
-inst_50:
-// rs1_val == 0x62A90000 and rs2_val == 0x42F5D75E 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x62a90000;  op2val:0x42f5d75e
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x62a90000, 0x42f5d75e, x1, 124, x2)
-
-inst_51:
-// rs1_val == 0x60348000 and rs2_val == 0xB9F09825 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x60348000;  op2val:0xb9f09825
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x60348000, 0xb9f09825, x1, 128, x2)
-
-inst_52:
-// rs1_val == 0x5EF6C000 and rs2_val == 0x9BFAD94F 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x5ef6c000;  op2val:0x9bfad94f
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x5ef6c000, 0x9bfad94f, x1, 132, x2)
-
-inst_53:
-// rs1_val == 0x79DF6000 and rs2_val == 0x98918DD8 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x79df6000;  op2val:0x98918dd8
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x79df6000, 0x98918dd8, x1, 136, x2)
-
-inst_54:
-// rs1_val == 0x864C1000 and rs2_val == 0x9B811F47 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x864c1000;  op2val:0x9b811f47
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x864c1000, 0x9b811f47, x1, 140, x2)
-
-inst_55:
-// rs1_val == 0x735CB800 and rs2_val == 0xD0D18FB0 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x735cb800;  op2val:0xd0d18fb0
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x735cb800, 0xd0d18fb0, x1, 144, x2)
-
-inst_56:
-// rs1_val == 0x29554400 and rs2_val == 0x71992790 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x29554400;  op2val:0x71992790
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x29554400, 0x71992790, x1, 148, x2)
-
-inst_57:
-// rs1_val == 0xA9A56A00 and rs2_val == 0x8248F803 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xa9a56a00;  op2val:0x8248f803
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xa9a56a00, 0x8248f803, x1, 152, x2)
-
-inst_58:
-// rs1_val == 0xC3405D00 and rs2_val == 0xEB3D7873 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xc3405d00;  op2val:0xeb3d7873
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xc3405d00, 0xeb3d7873, x1, 156, x2)
-
-inst_59:
-// rs1_val == 0x394D8080 and rs2_val == 0xD7A7BF5E 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x394d8080;  op2val:0xd7a7bf5e
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x394d8080, 0xd7a7bf5e, x1, 160, x2)
-
-inst_60:
-// rs1_val == 0xC6677840 and rs2_val == 0xD1BA5C0F 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xc6677840;  op2val:0xd1ba5c0f
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xc6677840, 0xd1ba5c0f, x1, 164, x2)
-
-inst_61:
-// rs1_val == 0x70598E60 and rs2_val == 0xD19E3224 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x70598e60;  op2val:0xd19e3224
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x70598e60, 0xd19e3224, x1, 168, x2)
-
-inst_62:
-// rs1_val == 0x98A59F90 and rs2_val == 0x35D30D74 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x98a59f90;  op2val:0x35d30d74
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x98a59f90, 0x35d30d74, x1, 172, x2)
-
-inst_63:
-// rs1_val == 0xD306DEB8 and rs2_val == 0x70A76E49 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xd306deb8;  op2val:0x70a76e49
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xd306deb8, 0x70a76e49, x1, 176, x2)
-
-inst_64:
-// rs1_val == 0x18A01374 and rs2_val == 0x9FCDB9E1 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x18a01374;  op2val:0x9fcdb9e1
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x18a01374, 0x9fcdb9e1, x1, 180, x2)
-
-inst_65:
-// rs1_val == 0xC3667402 and rs2_val == 0x5FEFE911 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xc3667402;  op2val:0x5fefe911
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xc3667402, 0x5fefe911, x1, 184, x2)
-
-inst_66:
-// rs1_val == 0x797D76DF and rs2_val == 0x598B88DB 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x797d76df;  op2val:0x598b88db
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x797d76df, 0x598b88db, x1, 188, x2)
-
-inst_67:
-// rs2_val == 0x0C04F662 and rs1_val == 0xB7E7669E 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xb7e7669e;  op2val:0xc04f662
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xb7e7669e, 0xc04f662, x1, 192, x2)
-
-inst_68:
-// rs2_val == 0xCD41CAD1 and rs1_val == 0xD24F0724 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xd24f0724;  op2val:0xcd41cad1
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xd24f0724, 0xcd41cad1, x1, 196, x2)
-
-inst_69:
-// rs2_val == 0x1203965B and rs1_val == 0x585022A3 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x585022a3;  op2val:0x1203965b
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x585022a3, 0x1203965b, x1, 200, x2)
-
-inst_70:
-// rs2_val == 0x7A9AC0A7 and rs1_val == 0xEE8F948A 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xee8f948a;  op2val:0x7a9ac0a7
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xee8f948a, 0x7a9ac0a7, x1, 204, x2)
-
-inst_71:
-// rs2_val == 0x2AA8E42F and rs1_val == 0x2655FA99 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x2655fa99;  op2val:0x2aa8e42f
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x2655fa99, 0x2aa8e42f, x1, 208, x2)
-
-inst_72:
-// rs2_val == 0x211D785F and rs1_val == 0x0C96A183 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xc96a183;  op2val:0x211d785f
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xc96a183, 0x211d785f, x1, 212, x2)
-
-inst_73:
-// rs2_val == 0x59DDE33F and rs1_val == 0x88F931F4 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x88f931f4;  op2val:0x59dde33f
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x88f931f4, 0x59dde33f, x1, 216, x2)
-
-inst_74:
-// rs2_val == 0x711E627F and rs1_val == 0x6F2BF862 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x6f2bf862;  op2val:0x711e627f
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x6f2bf862, 0x711e627f, x1, 220, x2)
-
-inst_75:
-// rs2_val == 0x19835AFF and rs1_val == 0x5C6C32A5 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x5c6c32a5;  op2val:0x19835aff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x5c6c32a5, 0x19835aff, x1, 224, x2)
-
-inst_76:
-// rs2_val == 0x088B3DFF and rs1_val == 0x58FC0342 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x58fc0342;  op2val:0x88b3dff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x58fc0342, 0x88b3dff, x1, 228, x2)
-
-inst_77:
-// rs2_val == 0x9A6DA3FF and rs1_val == 0x636A75E3 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x636a75e3;  op2val:0x9a6da3ff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x636a75e3, 0x9a6da3ff, x1, 232, x2)
-
-inst_78:
-// rs2_val == 0x37E0D7FF and rs1_val == 0x4ED62428 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x4ed62428;  op2val:0x37e0d7ff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x4ed62428, 0x37e0d7ff, x1, 236, x2)
-
-inst_79:
-// rs2_val == 0x5E59CFFF and rs1_val == 0xD2D12745 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xd2d12745;  op2val:0x5e59cfff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xd2d12745, 0x5e59cfff, x1, 240, x2)
-
-inst_80:
-// rs2_val == 0xDD129FFF and rs1_val == 0x0D770F3C 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xd770f3c;  op2val:0xdd129fff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xd770f3c, 0xdd129fff, x1, 244, x2)
-
-inst_81:
-// rs2_val == 0x872EBFFF and rs1_val == 0x2311ACFB 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x2311acfb;  op2val:0x872ebfff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x2311acfb, 0x872ebfff, x1, 248, x2)
-
-inst_82:
-// rs2_val == 0x55367FFF and rs1_val == 0x0FB13BBC 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfb13bbc;  op2val:0x55367fff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfb13bbc, 0x55367fff, x1, 252, x2)
-
-inst_83:
-// rs2_val == 0xFDD2FFFF and rs1_val == 0x8DFC2307 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x8dfc2307;  op2val:0xfdd2ffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x8dfc2307, 0xfdd2ffff, x1, 256, x2)
-
-inst_84:
-// rs2_val == 0x30BDFFFF and rs1_val == 0x7312BE6D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x7312be6d;  op2val:0x30bdffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x7312be6d, 0x30bdffff, x1, 260, x2)
-
-inst_85:
-// rs2_val == 0xA743FFFF and rs1_val == 0xC61B1FBF 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xc61b1fbf;  op2val:0xa743ffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xc61b1fbf, 0xa743ffff, x1, 264, x2)
-
-inst_86:
-// rs2_val == 0x9987FFFF and rs1_val == 0xEBDA5A4F 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xebda5a4f;  op2val:0x9987ffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xebda5a4f, 0x9987ffff, x1, 268, x2)
-
-inst_87:
-// rs2_val == 0x118FFFFF and rs1_val == 0xC215E193 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xc215e193;  op2val:0x118fffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xc215e193, 0x118fffff, x1, 272, x2)
-
-inst_88:
-// rs2_val == 0x65DFFFFF and rs1_val == 0x75EE935F 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x75ee935f;  op2val:0x65dfffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x75ee935f, 0x65dfffff, x1, 276, x2)
-
-inst_89:
-// rs2_val == 0x6CBFFFFF and rs1_val == 0x09C16162 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x9c16162;  op2val:0x6cbfffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x9c16162, 0x6cbfffff, x1, 280, x2)
-
-inst_90:
-// rs2_val == 0x347FFFFF and rs1_val == 0xA4053175 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xa4053175;  op2val:0x347fffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xa4053175, 0x347fffff, x1, 284, x2)
-
-inst_91:
-// rs2_val == 0xC4FFFFFF and rs1_val == 0x499006C8 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x499006c8;  op2val:0xc4ffffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x499006c8, 0xc4ffffff, x1, 288, x2)
-
-inst_92:
-// rs2_val == 0x41FFFFFF and rs1_val == 0x3C5B3EEE 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x3c5b3eee;  op2val:0x41ffffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x3c5b3eee, 0x41ffffff, x1, 292, x2)
-
-inst_93:
-// rs2_val == 0x6BFFFFFF and rs1_val == 0xD95FD86A 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xd95fd86a;  op2val:0x6bffffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xd95fd86a, 0x6bffffff, x1, 296, x2)
-
-inst_94:
-// rs2_val == 0x87FFFFFF and rs1_val == 0x25784F4F 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x25784f4f;  op2val:0x87ffffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x25784f4f, 0x87ffffff, x1, 300, x2)
-
-inst_95:
-// rs2_val == 0xCFFFFFFF and rs1_val == 0x082018FA 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x82018fa;  op2val:0xcfffffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x82018fa, 0xcfffffff, x1, 304, x2)
-
-inst_96:
-// rs2_val == 0x9FFFFFFF and rs1_val == 0x350CC530 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x350cc530;  op2val:0x9fffffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x350cc530, 0x9fffffff, x1, 308, x2)
-
-inst_97:
-// rs2_val == 0x3FFFFFFF and rs1_val == 0x7966A24E 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x7966a24e;  op2val:0x3fffffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x7966a24e, 0x3fffffff, x1, 312, x2)
-
-inst_98:
-// rs2_val == 0x7FFFFFFF and rs1_val == 0x51D6D6DA 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x51d6d6da;  op2val:0x7fffffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x51d6d6da, 0x7fffffff, x1, 316, x2)
-
-inst_99:
-// rs2_val == 0xFFFFFFFF and rs1_val == 0xD5A2038F 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xd5a2038f;  op2val:0xffffffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xd5a2038f, 0xffffffff, x1, 320, x2)
-
-inst_100:
-// rs1_val == 0xFF7746E6 and rs2_val == 0x4F829B65 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xff7746e6;  op2val:0x4f829b65
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xff7746e6, 0x4f829b65, x1, 324, x2)
-
-inst_101:
-// rs1_val == 0xF89A7241 and rs2_val == 0x00C2F091 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xf89a7241;  op2val:0xc2f091
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xf89a7241, 0xc2f091, x1, 328, x2)
-
-inst_102:
-// rs1_val == 0x11B36A93 and rs2_val == 0xB1F5D853 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x11b36a93;  op2val:0xb1f5d853
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x11b36a93, 0xb1f5d853, x1, 332, x2)
-
-inst_103:
-// rs1_val == 0xC9932457 and rs2_val == 0x39BE2172 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xc9932457;  op2val:0x39be2172
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xc9932457, 0x39be2172, x1, 336, x2)
-
-inst_104:
-// rs1_val == 0x4B9A6C8F and rs2_val == 0x316039EE 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x4b9a6c8f;  op2val:0x316039ee
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x4b9a6c8f, 0x316039ee, x1, 340, x2)
-
-inst_105:
-// rs1_val == 0x9541241F and rs2_val == 0x5761A866 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x9541241f;  op2val:0x5761a866
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x9541241f, 0x5761a866, x1, 344, x2)
-
-inst_106:
-// rs1_val == 0x94B431BF and rs2_val == 0x09E4D1F4 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x94b431bf;  op2val:0x9e4d1f4
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x94b431bf, 0x9e4d1f4, x1, 348, x2)
-
-inst_107:
-// rs1_val == 0xDC8FE97F and rs2_val == 0x9E03793F 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xdc8fe97f;  op2val:0x9e03793f
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xdc8fe97f, 0x9e03793f, x1, 352, x2)
-
-inst_108:
-// rs1_val == 0xB903CEFF and rs2_val == 0x7F1071EC 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xb903ceff;  op2val:0x7f1071ec
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xb903ceff, 0x7f1071ec, x1, 356, x2)
-
-inst_109:
-// rs1_val == 0xB494A5FF and rs2_val == 0x9A7EF9E4 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xb494a5ff;  op2val:0x9a7ef9e4
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xb494a5ff, 0x9a7ef9e4, x1, 360, x2)
-
-inst_110:
-// rs1_val == 0xE2DD83FF and rs2_val == 0x59C05BB9 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xe2dd83ff;  op2val:0x59c05bb9
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xe2dd83ff, 0x59c05bb9, x1, 364, x2)
-
-inst_111:
-// rs1_val == 0xBBAFD7FF and rs2_val == 0xDE451397 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xbbafd7ff;  op2val:0xde451397
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xbbafd7ff, 0xde451397, x1, 368, x2)
-
-inst_112:
-// rs1_val == 0xCE5C4FFF and rs2_val == 0x40F27005 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xce5c4fff;  op2val:0x40f27005
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xce5c4fff, 0x40f27005, x1, 372, x2)
-
-inst_113:
-// rs1_val == 0x39935FFF and rs2_val == 0x24496FE3 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x39935fff;  op2val:0x24496fe3
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x39935fff, 0x24496fe3, x1, 376, x2)
-
-inst_114:
-// rs1_val == 0xEED7BFFF and rs2_val == 0xDE14BFF2 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xeed7bfff;  op2val:0xde14bff2
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xeed7bfff, 0xde14bff2, x1, 380, x2)
-
-inst_115:
-// rs1_val == 0x008E7FFF and rs2_val == 0xB808A677 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x8e7fff;  op2val:0xb808a677
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x8e7fff, 0xb808a677, x1, 384, x2)
-
-inst_116:
-// rs1_val == 0x12C2FFFF and rs2_val == 0x76B1FD3D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x12c2ffff;  op2val:0x76b1fd3d
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x12c2ffff, 0x76b1fd3d, x1, 388, x2)
-
-inst_117:
-// rs1_val == 0xE3A5FFFF and rs2_val == 0x5DCF019D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xe3a5ffff;  op2val:0x5dcf019d
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xe3a5ffff, 0x5dcf019d, x1, 392, x2)
-
-inst_118:
-// rs1_val == 0x9B03FFFF and rs2_val == 0x47B7097B 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x9b03ffff;  op2val:0x47b7097b
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x9b03ffff, 0x47b7097b, x1, 396, x2)
-
-inst_119:
-// rs1_val == 0x5F07FFFF and rs2_val == 0x759F1B43 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x5f07ffff;  op2val:0x759f1b43
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x5f07ffff, 0x759f1b43, x1, 400, x2)
-
-inst_120:
-// rs1_val == 0x33CFFFFF and rs2_val == 0x5B331999 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x33cfffff;  op2val:0x5b331999
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x33cfffff, 0x5b331999, x1, 404, x2)
-
-inst_121:
-// rs1_val == 0x709FFFFF and rs2_val == 0x2D37DE81 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x709fffff;  op2val:0x2d37de81
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x709fffff, 0x2d37de81, x1, 408, x2)
-
-inst_122:
-// rs1_val == 0xD1BFFFFF and rs2_val == 0xFCB627AF 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xd1bfffff;  op2val:0xfcb627af
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xd1bfffff, 0xfcb627af, x1, 412, x2)
-
-inst_123:
-// rs1_val == 0xAB7FFFFF and rs2_val == 0x1E0B4EE5 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xab7fffff;  op2val:0x1e0b4ee5
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xab7fffff, 0x1e0b4ee5, x1, 416, x2)
-
-inst_124:
-// rs1_val == 0x7CFFFFFF and rs2_val == 0xFB3E7196 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x7cffffff;  op2val:0xfb3e7196
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x7cffffff, 0xfb3e7196, x1, 420, x2)
-
-inst_125:
-// rs1_val == 0x59FFFFFF and rs2_val == 0xD9959A62 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x59ffffff;  op2val:0xd9959a62
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x59ffffff, 0xd9959a62, x1, 424, x2)
-
-inst_126:
-// rs1_val == 0xDBFFFFFF and rs2_val == 0xE08409F0 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xdbffffff;  op2val:0xe08409f0
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xdbffffff, 0xe08409f0, x1, 428, x2)
-
-inst_127:
-// rs1_val == 0xF7FFFFFF and rs2_val == 0x258ECECB 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xf7ffffff;  op2val:0x258ececb
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xf7ffffff, 0x258ececb, x1, 432, x2)
-
-inst_128:
-// rs1_val == 0x6FFFFFFF and rs2_val == 0xFF7D5EC0 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x6fffffff;  op2val:0xff7d5ec0
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x6fffffff, 0xff7d5ec0, x1, 436, x2)
-
-inst_129:
-// rs1_val == 0x9FFFFFFF and rs2_val == 0x4B6EA010 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x9fffffff;  op2val:0x4b6ea010
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x9fffffff, 0x4b6ea010, x1, 440, x2)
-
-inst_130:
-// rs1_val == 0x3FFFFFFF and rs2_val == 0xD885BBAC 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x3fffffff;  op2val:0xd885bbac
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x3fffffff, 0xd885bbac, x1, 444, x2)
-
-inst_131:
-// rs1_val == 0x7FFFFFFF and rs2_val == 0xBBE8F88D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x7fffffff;  op2val:0xbbe8f88d
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x7fffffff, 0xbbe8f88d, x1, 448, x2)
-
-inst_132:
-// rs1_val == 0xFFFFFFFF and rs2_val == 0xE3D6E4B9 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xffffffff;  op2val:0xe3d6e4b9
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xffffffff, 0xe3d6e4b9, x1, 452, x2)
-
-inst_133:
-// rs2_val == 0x970216FD and rs1_val == 0x0494B6D2 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x494b6d2;  op2val:0x970216fd
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x494b6d2, 0x970216fd, x1, 456, x2)
-
-inst_134:
-// rs2_val == 0x5CB58B8F and rs1_val == 0xF2650B71 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xf2650b71;  op2val:0x5cb58b8f
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xf2650b71, 0x5cb58b8f, x1, 460, x2)
-
-inst_135:
-// rs2_val == 0x27EFDA6C and rs1_val == 0x21AF214A 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x21af214a;  op2val:0x27efda6c
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x21af214a, 0x27efda6c, x1, 464, x2)
-
-inst_136:
-// rs2_val == 0x1D1EF7C0 and rs1_val == 0x482EA760 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x482ea760;  op2val:0x1d1ef7c0
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x482ea760, 0x1d1ef7c0, x1, 468, x2)
-
-inst_137:
-// rs2_val == 0x0FC2A909 and rs1_val == 0x0F7A0443 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xf7a0443;  op2val:0xfc2a909
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xf7a0443, 0xfc2a909, x1, 472, x2)
-
-inst_138:
-// rs2_val == 0x04E9E4A6 and rs1_val == 0x69534048 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x69534048;  op2val:0x4e9e4a6
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x69534048, 0x4e9e4a6, x1, 476, x2)
-
-inst_139:
-// rs2_val == 0x025FDCD7 and rs1_val == 0x043E3EF5 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x43e3ef5;  op2val:0x25fdcd7
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x43e3ef5, 0x25fdcd7, x1, 480, x2)
-
-inst_140:
-// rs2_val == 0x01782EBC and rs1_val == 0x12FAD802 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x12fad802;  op2val:0x1782ebc
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x12fad802, 0x1782ebc, x1, 484, x2)
-
-inst_141:
-// rs2_val == 0x00A39575 and rs1_val == 0x119B4FE5 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x119b4fe5;  op2val:0xa39575
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x119b4fe5, 0xa39575, x1, 488, x2)
-
-inst_142:
-// rs2_val == 0x0049886F and rs1_val == 0x7DB224CB 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x7db224cb;  op2val:0x49886f
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x7db224cb, 0x49886f, x1, 492, x2)
-
-inst_143:
-// rs2_val == 0x0025693C and rs1_val == 0xB45F51C3 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xb45f51c3;  op2val:0x25693c
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xb45f51c3, 0x25693c, x1, 496, x2)
-
-inst_144:
-// rs2_val == 0x0018031A and rs1_val == 0x41536363 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x41536363;  op2val:0x18031a
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x41536363, 0x18031a, x1, 500, x2)
-
-inst_145:
-// rs2_val == 0x000A8267 and rs1_val == 0x1A953CCA 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x1a953cca;  op2val:0xa8267
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x1a953cca, 0xa8267, x1, 504, x2)
-
-inst_146:
-// rs2_val == 0x00073010 and rs1_val == 0x14186EBF 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x14186ebf;  op2val:0x73010
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x14186ebf, 0x73010, x1, 508, x2)
-
-inst_147:
-// rs2_val == 0x00038734 and rs1_val == 0xF33C1A7F 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xf33c1a7f;  op2val:0x38734
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xf33c1a7f, 0x38734, x1, 512, x2)
-
-inst_148:
-// rs2_val == 0x0001EAB1 and rs1_val == 0x8DCE6F52 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x8dce6f52;  op2val:0x1eab1
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x8dce6f52, 0x1eab1, x1, 516, x2)
-
-inst_149:
-// rs2_val == 0x0000B8EC and rs1_val == 0x3096C6C8 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x3096c6c8;  op2val:0xb8ec
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x3096c6c8, 0xb8ec, x1, 520, x2)
-
-inst_150:
-// rs2_val == 0x00007530 and rs1_val == 0x9C461CB5 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x9c461cb5;  op2val:0x7530
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x9c461cb5, 0x7530, x1, 524, x2)
-
-inst_151:
-// rs2_val == 0x00003ED5 and rs1_val == 0x27756991 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x27756991;  op2val:0x3ed5
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x27756991, 0x3ed5, x1, 528, x2)
-
-inst_152:
-// rs2_val == 0x00001055 and rs1_val == 0x62D74145 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x62d74145;  op2val:0x1055
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x62d74145, 0x1055, x1, 532, x2)
-
-inst_153:
-// rs2_val == 0x00000E9E and rs1_val == 0x931719FD 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x931719fd;  op2val:0xe9e
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x931719fd, 0xe9e, x1, 536, x2)
-
-inst_154:
-// rs2_val == 0x0000059B and rs1_val == 0x965768E0 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x965768e0;  op2val:0x59b
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x965768e0, 0x59b, x1, 540, x2)
-
-inst_155:
-// rs2_val == 0x00000208 and rs1_val == 0x74057241 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x74057241;  op2val:0x208
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x74057241, 0x208, x1, 544, x2)
-
-inst_156:
-// rs2_val == 0x000001E8 and rs1_val == 0x5E617F8E 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x5e617f8e;  op2val:0x1e8
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x5e617f8e, 0x1e8, x1, 548, x2)
-
-inst_157:
-// rs2_val == 0x000000D2 and rs1_val == 0x3E361858 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x3e361858;  op2val:0xd2
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x3e361858, 0xd2, x1, 552, x2)
-
-inst_158:
-// rs2_val == 0x00000071 and rs1_val == 0x13041452 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x13041452;  op2val:0x71
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x13041452, 0x71, x1, 556, x2)
-
-inst_159:
-// rs2_val == 0x00000034 and rs1_val == 0x4BDBF090 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x4bdbf090;  op2val:0x34
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x4bdbf090, 0x34, x1, 560, x2)
-
-inst_160:
-// rs2_val == 0x00000019 and rs1_val == 0x9C3ECB54 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x9c3ecb54;  op2val:0x19
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x9c3ecb54, 0x19, x1, 564, x2)
-
-inst_161:
-// rs2_val == 0x0000000B and rs1_val == 0x421E7A60 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x421e7a60;  op2val:0xb
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x421e7a60, 0xb, x1, 568, x2)
-
-inst_162:
-// rs2_val == 0x00000005 and rs1_val == 0x2577C1EC 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x2577c1ec;  op2val:0x5
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x2577c1ec, 0x5, x1, 572, x2)
-
-inst_163:
-// rs2_val == 0x00000002 and rs1_val == 0x19AF685D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x19af685d;  op2val:0x2
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x19af685d, 0x2, x1, 576, x2)
-
-inst_164:
-// rs2_val == 0x00000001 and rs1_val == 0x2FF36007 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x2ff36007;  op2val:0x1
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x2ff36007, 0x1, x1, 580, x2)
-
-inst_165:
-// rs2_val == 0x00000000 and rs1_val == 0xE286852C 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xe286852c;  op2val:0x0
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xe286852c, 0x0, x1, 584, x2)
-
-inst_166:
-// rs1_val == 0xC511488A and rs2_val == 0x97BDD982 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xc511488a;  op2val:0x97bdd982
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xc511488a, 0x97bdd982, x1, 588, x2)
-
-inst_167:
-// rs1_val == 0x65151C41 and rs2_val == 0x367E5D6D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x65151c41;  op2val:0x367e5d6d
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x65151c41, 0x367e5d6d, x1, 592, x2)
-
-inst_168:
-// rs1_val == 0x24CA83B3 and rs2_val == 0x623D8EB7 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x24ca83b3;  op2val:0x623d8eb7
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x24ca83b3, 0x623d8eb7, x1, 596, x2)
-
-inst_169:
-// rs1_val == 0x1C3B66FB and rs2_val == 0x21870F0B 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x1c3b66fb;  op2val:0x21870f0b
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x1c3b66fb, 0x21870f0b, x1, 600, x2)
-
-inst_170:
-// rs1_val == 0x0A8A6FD0 and rs2_val == 0x82450164 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xa8a6fd0;  op2val:0x82450164
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xa8a6fd0, 0x82450164, x1, 604, x2)
-
-inst_171:
-// rs1_val == 0x069CA08C and rs2_val == 0x8F2DF760 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x69ca08c;  op2val:0x8f2df760
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x69ca08c, 0x8f2df760, x1, 608, x2)
-
-inst_172:
-// rs1_val == 0x03552C95 and rs2_val == 0x7CA07386 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x3552c95;  op2val:0x7ca07386
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x3552c95, 0x7ca07386, x1, 612, x2)
-
-inst_173:
-// rs1_val == 0x0174EA19 and rs2_val == 0x19DE2BC1 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x174ea19;  op2val:0x19de2bc1
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x174ea19, 0x19de2bc1, x1, 616, x2)
-
-inst_174:
-// rs1_val == 0x00A454F2 and rs2_val == 0xEC3FBF4D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xa454f2;  op2val:0xec3fbf4d
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xa454f2, 0xec3fbf4d, x1, 620, x2)
-
-inst_175:
-// rs1_val == 0x007E9BEE and rs2_val == 0x164F1513 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x7e9bee;  op2val:0x164f1513
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x7e9bee, 0x164f1513, x1, 624, x2)
-
-inst_176:
-// rs1_val == 0x002C7CD0 and rs2_val == 0xACC6D8F2 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x2c7cd0;  op2val:0xacc6d8f2
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x2c7cd0, 0xacc6d8f2, x1, 628, x2)
-
-inst_177:
-// rs1_val == 0x00177310 and rs2_val == 0xA123F501 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x177310;  op2val:0xa123f501
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x177310, 0xa123f501, x1, 632, x2)
-
-inst_178:
-// rs1_val == 0x00091609 and rs2_val == 0xB57A6A1D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x91609;  op2val:0xb57a6a1d
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x91609, 0xb57a6a1d, x1, 636, x2)
-
-inst_179:
-// rs1_val == 0x00040BE0 and rs2_val == 0xE90794DF 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x40be0;  op2val:0xe90794df
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x40be0, 0xe90794df, x1, 640, x2)
-
-inst_180:
-// rs1_val == 0x00028D1B and rs2_val == 0xAF5570EE 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x28d1b;  op2val:0xaf5570ee
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x28d1b, 0xaf5570ee, x1, 644, x2)
-
-inst_181:
-// rs1_val == 0x0001FBE5 and rs2_val == 0xD8B9B45C 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x1fbe5;  op2val:0xd8b9b45c
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x1fbe5, 0xd8b9b45c, x1, 648, x2)
-
-inst_182:
-// rs1_val == 0x0000AAC1 and rs2_val == 0x1BA1192E 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xaac1;  op2val:0x1ba1192e
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xaac1, 0x1ba1192e, x1, 652, x2)
-
-inst_183:
-// rs1_val == 0x000062C3 and rs2_val == 0x49FE85B0 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x62c3;  op2val:0x49fe85b0
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x62c3, 0x49fe85b0, x1, 656, x2)
-
-inst_184:
-// rs1_val == 0x000022FD and rs2_val == 0x4105CCA7 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x22fd;  op2val:0x4105cca7
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x22fd, 0x4105cca7, x1, 660, x2)
-
-inst_185:
-// rs1_val == 0x000016B3 and rs2_val == 0xD7185DDA 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x16b3;  op2val:0xd7185dda
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x16b3, 0xd7185dda, x1, 664, x2)
-
-inst_186:
-// rs1_val == 0x00000A38 and rs2_val == 0xA7A11490 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xa38;  op2val:0xa7a11490
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xa38, 0xa7a11490, x1, 668, x2)
-
-inst_187:
-// rs1_val == 0x000006A7 and rs2_val == 0xA9964AEF 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x6a7;  op2val:0xa9964aef
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x6a7, 0xa9964aef, x1, 672, x2)
-
-inst_188:
-// rs1_val == 0x000003B9 and rs2_val == 0x4B4D8474 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x3b9;  op2val:0x4b4d8474
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x3b9, 0x4b4d8474, x1, 676, x2)
-
-inst_189:
-// rs1_val == 0x00000190 and rs2_val == 0x76C468AE 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x190;  op2val:0x76c468ae
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x190, 0x76c468ae, x1, 680, x2)
-
-inst_190:
-// rs1_val == 0x000000D4 and rs2_val == 0x09208A65 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xd4;  op2val:0x9208a65
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xd4, 0x9208a65, x1, 684, x2)
-
-inst_191:
-// rs1_val == 0x00000067 and rs2_val == 0x8743FEB6 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x67;  op2val:0x8743feb6
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x67, 0x8743feb6, x1, 688, x2)
-
-inst_192:
-// rs1_val == 0x00000039 and rs2_val == 0xA66B0D38 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x39;  op2val:0xa66b0d38
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x39, 0xa66b0d38, x1, 692, x2)
-
-inst_193:
-// rs1_val == 0x0000001C and rs2_val == 0xFB710734 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x1c;  op2val:0xfb710734
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x1c, 0xfb710734, x1, 696, x2)
-
-inst_194:
-// rs1_val == 0x0000000E and rs2_val == 0xA26B7F62 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xe;  op2val:0xa26b7f62
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xe, 0xa26b7f62, x1, 700, x2)
-
-inst_195:
-// rs1_val == 0x00000007 and rs2_val == 0x4DABB481 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x7;  op2val:0x4dabb481
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x7, 0x4dabb481, x1, 704, x2)
-
-inst_196:
-// rs1_val == 0x00000003 and rs2_val == 0x2FA91425 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x2fa91425
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x3, 0x2fa91425, x1, 708, x2)
-
-inst_197:
-// rs1_val == 0x00000001 and rs2_val == 0x965EDA32 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x965eda32
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x1, 0x965eda32, x1, 712, x2)
-
-inst_198:
-// rs1_val == 0x00000000 and rs2_val == 0xC7FDE805 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xc7fde805
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x0, 0xc7fde805, x1, 716, x2)
-
-inst_199:
-// rs2_val == 0x6D3F408C and rs1_val == 0xFFEC35FE 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xffec35fe;  op2val:0x6d3f408c
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xffec35fe, 0x6d3f408c, x1, 720, x2)
-
-inst_200:
-// rs2_val == 0x946A3674 and rs1_val == 0x976AD220 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x976ad220;  op2val:0x946a3674
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x976ad220, 0x946a3674, x1, 724, x2)
-
-inst_201:
-// rs2_val == 0xDC6113A4 and rs1_val == 0x5990FE96 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x5990fe96;  op2val:0xdc6113a4
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x5990fe96, 0xdc6113a4, x1, 728, x2)
-
-inst_202:
-// rs2_val == 0xE42A809C and rs1_val == 0xC96EFDC4 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xc96efdc4;  op2val:0xe42a809c
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xc96efdc4, 0xe42a809c, x1, 732, x2)
-
-inst_203:
-// rs2_val == 0xF1A25760 and rs1_val == 0xAB8534C1 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xab8534c1;  op2val:0xf1a25760
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xab8534c1, 0xf1a25760, x1, 736, x2)
-
-inst_204:
-// rs2_val == 0xFB37BEC9 and rs1_val == 0xD1142724 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xd1142724;  op2val:0xfb37bec9
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xd1142724, 0xfb37bec9, x1, 740, x2)
-
-inst_205:
-// rs2_val == 0xFCE51A66 and rs1_val == 0xF65E7737 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xf65e7737;  op2val:0xfce51a66
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xf65e7737, 0xfce51a66, x1, 744, x2)
-
-inst_206:
-// rs2_val == 0xFEDEBB9C and rs1_val == 0x16CBC21C 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x16cbc21c;  op2val:0xfedebb9c
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x16cbc21c, 0xfedebb9c, x1, 748, x2)
-
-inst_207:
-// rs2_val == 0xFF69340A and rs1_val == 0xDBDD4DD9 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xdbdd4dd9;  op2val:0xff69340a
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xdbdd4dd9, 0xff69340a, x1, 752, x2)
-
-inst_208:
-// rs2_val == 0xFF9CF3F4 and rs1_val == 0x4BD90A77 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x4bd90a77;  op2val:0xff9cf3f4
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x4bd90a77, 0xff9cf3f4, x1, 756, x2)
-
-inst_209:
-// rs2_val == 0xFFC00793 and rs1_val == 0xCEBE24D9 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xcebe24d9;  op2val:0xffc00793
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xcebe24d9, 0xffc00793, x1, 760, x2)
-
-inst_210:
-// rs2_val == 0xFFEE1FC4 and rs1_val == 0xA0E0BD86 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xa0e0bd86;  op2val:0xffee1fc4
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xa0e0bd86, 0xffee1fc4, x1, 764, x2)
-
-inst_211:
-// rs2_val == 0xFFF06038 and rs1_val == 0x3CC279B3 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x3cc279b3;  op2val:0xfff06038
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x3cc279b3, 0xfff06038, x1, 768, x2)
-
-inst_212:
-// rs2_val == 0xFFF93D53 and rs1_val == 0x754F9B96 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x754f9b96;  op2val:0xfff93d53
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x754f9b96, 0xfff93d53, x1, 772, x2)
-
-inst_213:
-// rs2_val == 0xFFFC47E8 and rs1_val == 0x72745307 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x72745307;  op2val:0xfffc47e8
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x72745307, 0xfffc47e8, x1, 776, x2)
-
-inst_214:
-// rs2_val == 0xFFFE7302 and rs1_val == 0xDCAE6D62 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xdcae6d62;  op2val:0xfffe7302
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xdcae6d62, 0xfffe7302, x1, 780, x2)
-
-inst_215:
-// rs2_val == 0xFFFF1CE8 and rs1_val == 0x7C2C966D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x7c2c966d;  op2val:0xffff1ce8
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x7c2c966d, 0xffff1ce8, x1, 784, x2)
-
-inst_216:
-// rs2_val == 0xFFFFB5C6 and rs1_val == 0x9BB4752D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x9bb4752d;  op2val:0xffffb5c6
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x9bb4752d, 0xffffb5c6, x1, 788, x2)
-
-inst_217:
-// rs2_val == 0xFFFFDFA4 and rs1_val == 0x17BE082F 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x17be082f;  op2val:0xffffdfa4
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x17be082f, 0xffffdfa4, x1, 792, x2)
-
-inst_218:
-// rs2_val == 0xFFFFEF0B and rs1_val == 0x109FF475 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x109ff475;  op2val:0xffffef0b
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x109ff475, 0xffffef0b, x1, 796, x2)
-
-inst_219:
-// rs2_val == 0xFFFFF43F and rs1_val == 0x00B97EA6 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xb97ea6;  op2val:0xfffff43f
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xb97ea6, 0xfffff43f, x1, 800, x2)
-
-inst_220:
-// rs2_val == 0xFFFFFB4A and rs1_val == 0xF956EC0B 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xf956ec0b;  op2val:0xfffffb4a
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xf956ec0b, 0xfffffb4a, x1, 804, x2)
-
-inst_221:
-// rs2_val == 0xFFFFFDA4 and rs1_val == 0x70FC1AFC 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x70fc1afc;  op2val:0xfffffda4
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x70fc1afc, 0xfffffda4, x1, 808, x2)
-
-inst_222:
-// rs2_val == 0xFFFFFECB and rs1_val == 0x6348306E 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x6348306e;  op2val:0xfffffecb
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x6348306e, 0xfffffecb, x1, 812, x2)
-
-inst_223:
-// rs2_val == 0xFFFFFF54 and rs1_val == 0x66B072B9 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x66b072b9;  op2val:0xffffff54
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x66b072b9, 0xffffff54, x1, 816, x2)
-
-inst_224:
-// rs2_val == 0xFFFFFFA9 and rs1_val == 0x7FF822ED 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x7ff822ed;  op2val:0xffffffa9
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x7ff822ed, 0xffffffa9, x1, 820, x2)
-
-inst_225:
-// rs2_val == 0xFFFFFFC3 and rs1_val == 0xE918BE9F 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xe918be9f;  op2val:0xffffffc3
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xe918be9f, 0xffffffc3, x1, 824, x2)
-
-inst_226:
-// rs2_val == 0xFFFFFFE7 and rs1_val == 0xE4BAE7F6 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xe4bae7f6;  op2val:0xffffffe7
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xe4bae7f6, 0xffffffe7, x1, 828, x2)
-
-inst_227:
-// rs2_val == 0xFFFFFFF1 and rs1_val == 0xDE9A896F 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xde9a896f;  op2val:0xfffffff1
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xde9a896f, 0xfffffff1, x1, 832, x2)
-
-inst_228:
-// rs2_val == 0xFFFFFFF8 and rs1_val == 0x2881E531 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x2881e531;  op2val:0xfffffff8
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x2881e531, 0xfffffff8, x1, 836, x2)
-
-inst_229:
-// rs2_val == 0xFFFFFFFC and rs1_val == 0x1475F78D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x1475f78d;  op2val:0xfffffffc
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x1475f78d, 0xfffffffc, x1, 840, x2)
-
-inst_230:
-// rs2_val == 0xFFFFFFFE and rs1_val == 0xE59CF78F 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xe59cf78f;  op2val:0xfffffffe
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xe59cf78f, 0xfffffffe, x1, 844, x2)
-
-inst_231:
-// rs2_val == 0xFFFFFFFF and rs1_val == 0xB66B3284 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xb66b3284;  op2val:0xffffffff
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xb66b3284, 0xffffffff, x1, 848, x2)
-
-inst_232:
-// rs1_val == 0x6F4930C9 and rs2_val == 0x39422745 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x6f4930c9;  op2val:0x39422745
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x6f4930c9, 0x39422745, x1, 852, x2)
-
-inst_233:
-// rs1_val == 0x85D97467 and rs2_val == 0x58FA6E1C 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x85d97467;  op2val:0x58fa6e1c
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x85d97467, 0x58fa6e1c, x1, 856, x2)
-
-inst_234:
-// rs1_val == 0xC70AFC93 and rs2_val == 0x2D143295 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xc70afc93;  op2val:0x2d143295
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xc70afc93, 0x2d143295, x1, 860, x2)
-
-inst_235:
-// rs1_val == 0xE911655F and rs2_val == 0xD230B46C 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xe911655f;  op2val:0xd230b46c
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xe911655f, 0xd230b46c, x1, 864, x2)
-
-inst_236:
-// rs1_val == 0xF4AB0A39 and rs2_val == 0x4D753AC1 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xf4ab0a39;  op2val:0x4d753ac1
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xf4ab0a39, 0x4d753ac1, x1, 868, x2)
-
-inst_237:
-// rs1_val == 0xF8BD4821 and rs2_val == 0x1E9667C2 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xf8bd4821;  op2val:0x1e9667c2
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xf8bd4821, 0x1e9667c2, x1, 872, x2)
-
-inst_238:
-// rs1_val == 0xFCD7E667 and rs2_val == 0xAE4839A1 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfcd7e667;  op2val:0xae4839a1
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfcd7e667, 0xae4839a1, x1, 876, x2)
-
-inst_239:
-// rs1_val == 0xFE71CFDF and rs2_val == 0x6A013380 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfe71cfdf;  op2val:0x6a013380
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfe71cfdf, 0x6a013380, x1, 880, x2)
-
-inst_240:
-// rs1_val == 0xFF1C11AE and rs2_val == 0x59432A19 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xff1c11ae;  op2val:0x59432a19
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xff1c11ae, 0x59432a19, x1, 884, x2)
-
-inst_241:
-// rs1_val == 0xFF89799A and rs2_val == 0xCEB506F6 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xff89799a;  op2val:0xceb506f6
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xff89799a, 0xceb506f6, x1, 888, x2)
-
-inst_242:
-// rs1_val == 0xFFC80B13 and rs2_val == 0xC5EC6148 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xffc80b13;  op2val:0xc5ec6148
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xffc80b13, 0xc5ec6148, x1, 892, x2)
-
-inst_243:
-// rs1_val == 0xFFE94647 and rs2_val == 0x99EF1857 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xffe94647;  op2val:0x99ef1857
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xffe94647, 0x99ef1857, x1, 896, x2)
-
-inst_244:
-// rs1_val == 0xFFF263CF and rs2_val == 0x14B91C79 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfff263cf;  op2val:0x14b91c79
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfff263cf, 0x14b91c79, x1, 900, x2)
-
-inst_245:
-// rs1_val == 0xFFF919A1 and rs2_val == 0xA86B8A6E 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfff919a1;  op2val:0xa86b8a6e
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfff919a1, 0xa86b8a6e, x1, 904, x2)
-
-inst_246:
-// rs1_val == 0xFFFDE89D and rs2_val == 0x08208D09 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfffde89d;  op2val:0x8208d09
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfffde89d, 0x8208d09, x1, 908, x2)
-
-inst_247:
-// rs1_val == 0xFFFEC9D0 and rs2_val == 0x69B1DCBF 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfffec9d0;  op2val:0x69b1dcbf
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfffec9d0, 0x69b1dcbf, x1, 912, x2)
-
-inst_248:
-// rs1_val == 0xFFFF5576 and rs2_val == 0x807DA245 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xffff5576;  op2val:0x807da245
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xffff5576, 0x807da245, x1, 916, x2)
-
-inst_249:
-// rs1_val == 0xFFFFB6DF and rs2_val == 0x95A4D257 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xffffb6df;  op2val:0x95a4d257
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xffffb6df, 0x95a4d257, x1, 920, x2)
-
-inst_250:
-// rs1_val == 0xFFFFC561 and rs2_val == 0x735C076B 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xffffc561;  op2val:0x735c076b
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xffffc561, 0x735c076b, x1, 924, x2)
-
-inst_251:
-// rs1_val == 0xFFFFEAB5 and rs2_val == 0xE5F0307E 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xffffeab5;  op2val:0xe5f0307e
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xffffeab5, 0xe5f0307e, x1, 928, x2)
-
-inst_252:
-// rs1_val == 0xFFFFF602 and rs2_val == 0xE8DAC663 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfffff602;  op2val:0xe8dac663
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfffff602, 0xe8dac663, x1, 932, x2)
-
-inst_253:
-// rs1_val == 0xFFFFF8B1 and rs2_val == 0x0109C207 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfffff8b1;  op2val:0x109c207
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfffff8b1, 0x109c207, x1, 936, x2)
-
-inst_254:
-// rs1_val == 0xFFFFFCA0 and rs2_val == 0x600FECC1 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffca0;  op2val:0x600fecc1
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfffffca0, 0x600fecc1, x1, 940, x2)
-
-inst_255:
-// rs1_val == 0xFFFFFECC and rs2_val == 0xFB7F6F5D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffecc;  op2val:0xfb7f6f5d
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfffffecc, 0xfb7f6f5d, x1, 944, x2)
-
-inst_256:
-// rs1_val == 0xFFFFFF6E and rs2_val == 0x5CD2875E 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xffffff6e;  op2val:0x5cd2875e
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xffffff6e, 0x5cd2875e, x1, 948, x2)
-
-inst_257:
-// rs1_val == 0xFFFFFF84 and rs2_val == 0xACCA7F0D 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xffffff84;  op2val:0xacca7f0d
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xffffff84, 0xacca7f0d, x1, 952, x2)
-
-inst_258:
-// rs1_val == 0xFFFFFFDD and rs2_val == 0x5AE6A228 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xffffffdd;  op2val:0x5ae6a228
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xffffffdd, 0x5ae6a228, x1, 956, x2)
-
-inst_259:
-// rs1_val == 0xFFFFFFE7 and rs2_val == 0xFF1E5BEF 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xffffffe7;  op2val:0xff1e5bef
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xffffffe7, 0xff1e5bef, x1, 960, x2)
-
-inst_260:
-// rs1_val == 0xFFFFFFF4 and rs2_val == 0x137A9777 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffff4;  op2val:0x137a9777
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfffffff4, 0x137a9777, x1, 964, x2)
-
-inst_261:
-// rs1_val == 0xFFFFFFFA and rs2_val == 0x854A9657 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffa;  op2val:0x854a9657
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfffffffa, 0x854a9657, x1, 968, x2)
-
-inst_262:
-// rs1_val == 0xFFFFFFFD and rs2_val == 0xCF84B683 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffd;  op2val:0xcf84b683
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfffffffd, 0xcf84b683, x1, 972, x2)
-
-inst_263:
-// rs1_val == 0xFFFFFFFE and rs2_val == 0x93FDCAB8 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffe;  op2val:0x93fdcab8
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xfffffffe, 0x93fdcab8, x1, 976, x2)
-
-inst_264:
-// rs2_val == 0x80000000 and rs1_val == 0xAFC08ACE 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xafc08ace;  op2val:0x80000000
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xafc08ace, 0x80000000, x1, 980, x2)
-
-inst_265:
-// rs2_val == 0xE0000000 and rs1_val == 0x5B130474 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x5b130474;  op2val:0xe0000000
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x5b130474, 0xe0000000, x1, 984, x2)
-
-inst_266:
-// rs2_val == 0x90000000 and rs1_val == 0x3EEA126E 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x3eea126e;  op2val:0x90000000
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x3eea126e, 0x90000000, x1, 988, x2)
-
-inst_267:
-// rs2_val == 0xB7400000 and rs1_val == 0xBC5FB419 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0xbc5fb419;  op2val:0xb7400000
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0xbc5fb419, 0xb7400000, x1, 992, x2)
-
-inst_268:
-// rs2_val == 0xFB07C000 and rs1_val == 0x4143DA51 
-// opcode: packu ; op1:x10; op2:x11; dest:x12; op1val:0x4143da51;  op2val:0xfb07c000
-TEST_RR_OP(packu, x12, x10, x11, 0x00000000, 0x4143da51, 0xfb07c000, x1, 996, x2)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-rvtest_data:
-.word 0xbabecafe
-RVTEST_DATA_END
-
-RVMODEL_DATA_BEGIN
-
-
-signature_x17_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x17_1:
-    .fill 19*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_0:
-    .fill 250*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/xperm.b-01.S b/riscv-test-suite/rv32i_m/K_unratified/src/xperm.b-01.S
deleted file mode 100644
index d0d5bea..0000000
--- a/riscv-test-suite/rv32i_m/K_unratified/src/xperm.b-01.S
+++ /dev/null
@@ -1,1516 +0,0 @@
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.5
-// timestamp : Thu May 27 16:46:51 2021 GMT
-// usage     : riscv_ctg \
-//                  --cgf /scratch/git-repo/github/riscv-ctg/sample_cgfs/dataset.cgf \
-//                  --cgf /scratch/git-repo/github/riscv-ctg/sample_cgfs/rv32i_k.cgf \
-//                  --base-isa rv32i \
-//                  --randomize
-// -----------
-//
-// -----------
-// Copyright (c) 2021. Indian Institute of Technology Madras. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the xperm.b instruction of the RISC-V  extension for the xperm.b covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*K.*);def TEST_CASE_1=True;",xperm.b)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKs.*);def TEST_CASE_1=True;",xperm.b)
-
-RVTEST_CASE(2,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKn.*);def TEST_CASE_1=True;",xperm.b)
-
-RVTEST_CASE(3,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKb.*);def TEST_CASE_1=True;",xperm.b)
-
-RVTEST_SIGBASE( x8,signature_x8_1)
-
-inst_0:
-// rs1 == rd != rs2, rs1==x18, rs2==x19, rd==x18, rs1_val == 0xFFFFFFFF and rs2_val == 0x08577EB1 
-// opcode: xperm.b ; op1:x18; op2:x19; dest:x18; op1val:0xffffffff;  op2val:0x8577eb1
-TEST_RR_OP(xperm.b, x18, x18, x19, 0x00000000, 0xffffffff, 0x8577eb1, x8, 0, x1)
-
-inst_1:
-// rs1 == rs2 == rd, rs1==x24, rs2==x24, rd==x24, rs1_val == 0x91766f62 and rs2_val == 0x5570084b 
-// opcode: xperm.b ; op1:x24; op2:x24; dest:x24; op1val:0x91766f62;  op2val:0x91766f62
-TEST_RR_OP(xperm.b, x24, x24, x24, 0x00000000, 0x91766f62, 0x91766f62, x8, 4, x1)
-
-inst_2:
-// rs1 == rs2 != rd, rs1==x0, rs2==x0, rd==x29, rs1_val == 0xc0fe15dd and rs2_val == 0x9f053821 
-// opcode: xperm.b ; op1:x0; op2:x0; dest:x29; op1val:0x0;  op2val:0x0
-TEST_RR_OP(xperm.b, x29, x0, x0, 0x00000000, 0x0, 0x0, x8, 8, x1)
-
-inst_3:
-// rs2 == rd != rs1, rs1==x14, rs2==x23, rd==x23, rs1_val == 0xdc80d916 and rs2_val == 0x2a2a146d 
-// opcode: xperm.b ; op1:x14; op2:x23; dest:x23; op1val:0xdc80d916;  op2val:0x2a2a146d
-TEST_RR_OP(xperm.b, x23, x14, x23, 0x00000000, 0xdc80d916, 0x2a2a146d, x8, 12, x1)
-
-inst_4:
-// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x13, rs2==x22, rd==x3, rs1_val == 0x952acffe and rs2_val == 0x25ae27ee 
-// opcode: xperm.b ; op1:x13; op2:x22; dest:x3; op1val:0x952acffe;  op2val:0x25ae27ee
-TEST_RR_OP(xperm.b, x3, x13, x22, 0x00000000, 0x952acffe, 0x25ae27ee, x8, 16, x1)
-
-inst_5:
-// rs1==x26, rs2==x2, rd==x30, rs1_val == 0x40a5ff52 and rs2_val == 0xb6f9706f 
-// opcode: xperm.b ; op1:x26; op2:x2; dest:x30; op1val:0x40a5ff52;  op2val:0xb6f9706f
-TEST_RR_OP(xperm.b, x30, x26, x2, 0x00000000, 0x40a5ff52, 0xb6f9706f, x8, 20, x1)
-
-inst_6:
-// rs1==x23, rs2==x18, rd==x7, rs1_val == 0xe3f4fca3 and rs2_val == 0xa6c9253a 
-// opcode: xperm.b ; op1:x23; op2:x18; dest:x7; op1val:0xe3f4fca3;  op2val:0xa6c9253a
-TEST_RR_OP(xperm.b, x7, x23, x18, 0x00000000, 0xe3f4fca3, 0xa6c9253a, x8, 24, x1)
-
-inst_7:
-// rs1==x19, rs2==x6, rd==x12, rs1_val == 0xc2f1c53e and rs2_val == 0xd05668ae 
-// opcode: xperm.b ; op1:x19; op2:x6; dest:x12; op1val:0xc2f1c53e;  op2val:0xd05668ae
-TEST_RR_OP(xperm.b, x12, x19, x6, 0x00000000, 0xc2f1c53e, 0xd05668ae, x8, 28, x1)
-
-inst_8:
-// rs1==x25, rs2==x3, rd==x14, rs1_val == 0x9722c9a6 and rs2_val == 0x7bcad7c4 
-// opcode: xperm.b ; op1:x25; op2:x3; dest:x14; op1val:0x9722c9a6;  op2val:0x7bcad7c4
-TEST_RR_OP(xperm.b, x14, x25, x3, 0x00000000, 0x9722c9a6, 0x7bcad7c4, x8, 32, x1)
-
-inst_9:
-// rs1==x22, rs2==x5, rd==x19, rs1_val == 0xf7f1305a and rs2_val == 0x9bedfe39 
-// opcode: xperm.b ; op1:x22; op2:x5; dest:x19; op1val:0xf7f1305a;  op2val:0x9bedfe39
-TEST_RR_OP(xperm.b, x19, x22, x5, 0x00000000, 0xf7f1305a, 0x9bedfe39, x8, 36, x1)
-
-inst_10:
-// rs1==x20, rs2==x12, rd==x15, rs1_val == 0xd75739f8 and rs2_val == 0xe6fff3d9 
-// opcode: xperm.b ; op1:x20; op2:x12; dest:x15; op1val:0xd75739f8;  op2val:0xe6fff3d9
-TEST_RR_OP(xperm.b, x15, x20, x12, 0x00000000, 0xd75739f8, 0xe6fff3d9, x8, 40, x1)
-
-inst_11:
-// rs1==x9, rs2==x10, rd==x27, rs1_val == 0x90efb625 and rs2_val == 0x3150e5fa 
-// opcode: xperm.b ; op1:x9; op2:x10; dest:x27; op1val:0x90efb625;  op2val:0x3150e5fa
-TEST_RR_OP(xperm.b, x27, x9, x10, 0x00000000, 0x90efb625, 0x3150e5fa, x8, 44, x1)
-
-inst_12:
-// rs1==x6, rs2==x26, rd==x22, rs1_val == 0x1fc493ca and rs2_val == 0x65408c73 
-// opcode: xperm.b ; op1:x6; op2:x26; dest:x22; op1val:0x1fc493ca;  op2val:0x65408c73
-TEST_RR_OP(xperm.b, x22, x6, x26, 0x00000000, 0x1fc493ca, 0x65408c73, x8, 48, x1)
-
-inst_13:
-// rs1==x27, rs2==x21, rd==x17, rs1_val == 0x8e2eac2a and rs2_val == 0xd169a3f8 
-// opcode: xperm.b ; op1:x27; op2:x21; dest:x17; op1val:0x8e2eac2a;  op2val:0xd169a3f8
-TEST_RR_OP(xperm.b, x17, x27, x21, 0x00000000, 0x8e2eac2a, 0xd169a3f8, x8, 52, x1)
-
-inst_14:
-// rs1==x11, rs2==x14, rd==x13, rs1_val == 0x35f9377f and rs2_val == 0xf4c30307 
-// opcode: xperm.b ; op1:x11; op2:x14; dest:x13; op1val:0x35f9377f;  op2val:0xf4c30307
-TEST_RR_OP(xperm.b, x13, x11, x14, 0x00000000, 0x35f9377f, 0xf4c30307, x8, 56, x1)
-
-inst_15:
-// rs1==x30, rs2==x16, rd==x2, rs1_val == 0x58d548aa and rs2_val == 0xa0569d76 
-// opcode: xperm.b ; op1:x30; op2:x16; dest:x2; op1val:0x58d548aa;  op2val:0xa0569d76
-TEST_RR_OP(xperm.b, x2, x30, x16, 0x00000000, 0x58d548aa, 0xa0569d76, x8, 60, x1)
-
-inst_16:
-// rs1==x2, rs2==x4, rd==x16, rs1_val == 0x55d98c6e and rs2_val == 0x2daf9ac7 
-// opcode: xperm.b ; op1:x2; op2:x4; dest:x16; op1val:0x55d98c6e;  op2val:0x2daf9ac7
-TEST_RR_OP(xperm.b, x16, x2, x4, 0x00000000, 0x55d98c6e, 0x2daf9ac7, x8, 64, x1)
-
-inst_17:
-// rs1==x3, rs2==x29, rd==x4, rs1_val == 0x74b8de87 and rs2_val == 0xf273b44c 
-// opcode: xperm.b ; op1:x3; op2:x29; dest:x4; op1val:0x74b8de87;  op2val:0xf273b44c
-TEST_RR_OP(xperm.b, x4, x3, x29, 0x00000000, 0x74b8de87, 0xf273b44c, x8, 68, x14)
-
-inst_18:
-// rs1==x4, rs2==x25, rd==x20, rs1_val == 0xccce240c and rs2_val == 0x886c3a30 
-// opcode: xperm.b ; op1:x4; op2:x25; dest:x20; op1val:0xccce240c;  op2val:0x886c3a30
-TEST_RR_OP(xperm.b, x20, x4, x25, 0x00000000, 0xccce240c, 0x886c3a30, x8, 72, x14)
-
-inst_19:
-// rs1==x29, rs2==x13, rd==x0, rs1_val == 0xb49c83dc and rs2_val == 0xbb61a9cd 
-// opcode: xperm.b ; op1:x29; op2:x13; dest:x0; op1val:0xb49c83dc;  op2val:0xbb61a9cd
-TEST_RR_OP(xperm.b, x0, x29, x13, 0x00000000, 0xb49c83dc, 0xbb61a9cd, x8, 76, x14)
-
-inst_20:
-// rs1==x17, rs2==x1, rd==x25, rs1_val == 0x254a9493 and rs2_val == 0xc5521660 
-// opcode: xperm.b ; op1:x17; op2:x1; dest:x25; op1val:0x254a9493;  op2val:0xc5521660
-TEST_RR_OP(xperm.b, x25, x17, x1, 0x00000000, 0x254a9493, 0xc5521660, x8, 80, x14)
-RVTEST_SIGBASE( x2,signature_x2_0)
-
-inst_21:
-// rs1==x12, rs2==x8, rd==x31, rs2_val == 0x00000000 and rs1_val == 0x4FFE831A 
-// opcode: xperm.b ; op1:x12; op2:x8; dest:x31; op1val:0x4ffe831a;  op2val:0x0
-TEST_RR_OP(xperm.b, x31, x12, x8, 0x00000000, 0x4ffe831a, 0x0, x2, 0, x14)
-
-inst_22:
-// rs1==x5, rs2==x7, rd==x21, rs2_val == 0x80000000 and rs1_val == 0xAFC08ACE 
-// opcode: xperm.b ; op1:x5; op2:x7; dest:x21; op1val:0xafc08ace;  op2val:0x80000000
-TEST_RR_OP(xperm.b, x21, x5, x7, 0x00000000, 0xafc08ace, 0x80000000, x2, 4, x14)
-
-inst_23:
-// rs1==x31, rs2==x15, rd==x11, rs2_val == 0x40000000 and rs1_val == 0xAF6E9055 
-// opcode: xperm.b ; op1:x31; op2:x15; dest:x11; op1val:0xaf6e9055;  op2val:0x40000000
-TEST_RR_OP(xperm.b, x11, x31, x15, 0x00000000, 0xaf6e9055, 0x40000000, x2, 8, x14)
-
-inst_24:
-// rs1==x8, rs2==x20, rd==x28, rs2_val == 0xE0000000 and rs1_val == 0x5B130474 
-// opcode: xperm.b ; op1:x8; op2:x20; dest:x28; op1val:0x5b130474;  op2val:0xe0000000
-TEST_RR_OP(xperm.b, x28, x8, x20, 0x00000000, 0x5b130474, 0xe0000000, x2, 12, x14)
-
-inst_25:
-// rs1==x7, rs2==x28, rd==x10, rs2_val == 0x90000000 and rs1_val == 0x3EEA126E 
-// opcode: xperm.b ; op1:x7; op2:x28; dest:x10; op1val:0x3eea126e;  op2val:0x90000000
-TEST_RR_OP(xperm.b, x10, x7, x28, 0x00000000, 0x3eea126e, 0x90000000, x2, 16, x14)
-
-inst_26:
-// rs1==x16, rs2==x17, rd==x6, rs2_val == 0xB8000000 and rs1_val == 0x9C734D77 
-// opcode: xperm.b ; op1:x16; op2:x17; dest:x6; op1val:0x9c734d77;  op2val:0xb8000000
-TEST_RR_OP(xperm.b, x6, x16, x17, 0x00000000, 0x9c734d77, 0xb8000000, x2, 20, x14)
-
-inst_27:
-// rs1==x21, rs2==x9, rd==x8, rs2_val == 0xB4000000 and rs1_val == 0x5A694BCA 
-// opcode: xperm.b ; op1:x21; op2:x9; dest:x8; op1val:0x5a694bca;  op2val:0xb4000000
-TEST_RR_OP(xperm.b, x8, x21, x9, 0x00000000, 0x5a694bca, 0xb4000000, x2, 24, x14)
-
-inst_28:
-// rs1==x15, rs2==x27, rd==x9, rs2_val == 0x3E000000 and rs1_val == 0xED52E4CA 
-// opcode: xperm.b ; op1:x15; op2:x27; dest:x9; op1val:0xed52e4ca;  op2val:0x3e000000
-TEST_RR_OP(xperm.b, x9, x15, x27, 0x00000000, 0xed52e4ca, 0x3e000000, x2, 28, x14)
-
-inst_29:
-// rs1==x10, rs2==x31, rd==x5, rs2_val == 0xFB000000 and rs1_val == 0xB5CB2A93 
-// opcode: xperm.b ; op1:x10; op2:x31; dest:x5; op1val:0xb5cb2a93;  op2val:0xfb000000
-TEST_RR_OP(xperm.b, x5, x10, x31, 0x00000000, 0xb5cb2a93, 0xfb000000, x2, 32, x14)
-
-inst_30:
-// rs1==x28, rs2==x30, rd==x26, rs2_val == 0x68800000 and rs1_val == 0x29324E16 
-// opcode: xperm.b ; op1:x28; op2:x30; dest:x26; op1val:0x29324e16;  op2val:0x68800000
-TEST_RR_OP(xperm.b, x26, x28, x30, 0x00000000, 0x29324e16, 0x68800000, x2, 36, x14)
-
-inst_31:
-// rs1==x1, rs2_val == 0xB7400000 and rs1_val == 0xBC5FB419 
-// opcode: xperm.b ; op1:x1; op2:x7; dest:x28; op1val:0xbc5fb419;  op2val:0xb7400000
-TEST_RR_OP(xperm.b, x28, x1, x7, 0x00000000, 0xbc5fb419, 0xb7400000, x2, 40, x14)
-
-inst_32:
-// rs2==x11, rs2_val == 0x5CE00000 and rs1_val == 0x8E92E1B8 
-// opcode: xperm.b ; op1:x25; op2:x11; dest:x16; op1val:0x8e92e1b8;  op2val:0x5ce00000
-TEST_RR_OP(xperm.b, x16, x25, x11, 0x00000000, 0x8e92e1b8, 0x5ce00000, x2, 44, x14)
-
-inst_33:
-// rd==x1, rs2_val == 0x49F00000 and rs1_val == 0x96A3B48B 
-// opcode: xperm.b ; op1:x31; op2:x15; dest:x1; op1val:0x96a3b48b;  op2val:0x49f00000
-TEST_RR_OP(xperm.b, x1, x31, x15, 0x00000000, 0x96a3b48b, 0x49f00000, x2, 48, x14)
-
-inst_34:
-// rs2_val == 0x53D80000 and rs1_val == 0x0A095049 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xa095049;  op2val:0x53d80000
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xa095049, 0x53d80000, x2, 52, x14)
-
-inst_35:
-// rs2_val == 0x2EC40000 and rs1_val == 0x6F6E71B7 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x6f6e71b7;  op2val:0x2ec40000
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x6f6e71b7, 0x2ec40000, x2, 56, x14)
-
-inst_36:
-// rs2_val == 0x8E860000 and rs1_val == 0x236CC43D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x236cc43d;  op2val:0x8e860000
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x236cc43d, 0x8e860000, x2, 60, x14)
-
-inst_37:
-// rs2_val == 0x6FBF0000 and rs1_val == 0xE2ED8971 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xe2ed8971;  op2val:0x6fbf0000
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xe2ed8971, 0x6fbf0000, x2, 64, x14)
-
-inst_38:
-// rs2_val == 0x354E8000 and rs1_val == 0x06FA7B3E 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x6fa7b3e;  op2val:0x354e8000
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x6fa7b3e, 0x354e8000, x2, 68, x14)
-
-inst_39:
-// rs2_val == 0xFB07C000 and rs1_val == 0x4143DA51 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x4143da51;  op2val:0xfb07c000
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x4143da51, 0xfb07c000, x2, 72, x14)
-
-inst_40:
-// rs2_val == 0xDFFA2000 and rs1_val == 0xCAC78511 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xcac78511;  op2val:0xdffa2000
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xcac78511, 0xdffa2000, x2, 76, x14)
-
-inst_41:
-// rs2_val == 0x45D1F000 and rs1_val == 0xDF880B11 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xdf880b11;  op2val:0x45d1f000
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xdf880b11, 0x45d1f000, x2, 80, x14)
-
-inst_42:
-// rs2_val == 0x9069A800 and rs1_val == 0xBD230058 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xbd230058;  op2val:0x9069a800
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xbd230058, 0x9069a800, x2, 84, x14)
-
-inst_43:
-// rs2_val == 0xF5B1B400 and rs1_val == 0xF2597377 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xf2597377;  op2val:0xf5b1b400
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xf2597377, 0xf5b1b400, x2, 88, x14)
-
-inst_44:
-// rs2_val == 0x06B6DA00 and rs1_val == 0x5A8E7F31 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x5a8e7f31;  op2val:0x6b6da00
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x5a8e7f31, 0x6b6da00, x2, 92, x14)
-
-inst_45:
-// rs2_val == 0xBFB0F100 and rs1_val == 0x7A3621F5 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x7a3621f5;  op2val:0xbfb0f100
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x7a3621f5, 0xbfb0f100, x2, 96, x14)
-
-inst_46:
-// rs2_val == 0xD838C880 and rs1_val == 0x1E3C492C 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x1e3c492c;  op2val:0xd838c880
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x1e3c492c, 0xd838c880, x2, 100, x14)
-
-inst_47:
-// rs2_val == 0x5C46AEC0 and rs1_val == 0xD4FAF4B1 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xd4faf4b1;  op2val:0x5c46aec0
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xd4faf4b1, 0x5c46aec0, x2, 104, x14)
-
-inst_48:
-// rs2_val == 0xCF7AC620 and rs1_val == 0x27A16894 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x27a16894;  op2val:0xcf7ac620
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x27a16894, 0xcf7ac620, x2, 108, x14)
-
-inst_49:
-// rs2_val == 0x05C2F650 and rs1_val == 0x0A3EF19E 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xa3ef19e;  op2val:0x5c2f650
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xa3ef19e, 0x5c2f650, x2, 112, x14)
-
-inst_50:
-// rs2_val == 0xEEC50588 and rs1_val == 0xCB8193EF 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xcb8193ef;  op2val:0xeec50588
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xcb8193ef, 0xeec50588, x2, 116, x14)
-
-inst_51:
-// rs2_val == 0xCA7160CC and rs1_val == 0x577F8847 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x577f8847;  op2val:0xca7160cc
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x577f8847, 0xca7160cc, x2, 120, x14)
-
-inst_52:
-// rs2_val == 0x60E30DA2 and rs1_val == 0x9B5EAF0A 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x9b5eaf0a;  op2val:0x60e30da2
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x9b5eaf0a, 0x60e30da2, x2, 124, x14)
-
-inst_53:
-// rs2_val == 0x76F86039 and rs1_val == 0x5D3BBCE0 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x5d3bbce0;  op2val:0x76f86039
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x5d3bbce0, 0x76f86039, x2, 128, x14)
-
-inst_54:
-// rs1_val == 0x00000000 and rs2_val == 0xFD1032E8 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xfd1032e8
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x0, 0xfd1032e8, x2, 132, x14)
-
-inst_55:
-// rs1_val == 0x80000000 and rs2_val == 0x7B246C17 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x80000000;  op2val:0x7b246c17
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x80000000, 0x7b246c17, x2, 136, x14)
-
-inst_56:
-// rs1_val == 0x40000000 and rs2_val == 0x56F3EEF1 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x40000000;  op2val:0x56f3eef1
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x40000000, 0x56f3eef1, x2, 140, x14)
-
-inst_57:
-// rs1_val == 0xA0000000 and rs2_val == 0x75923260 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xa0000000;  op2val:0x75923260
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xa0000000, 0x75923260, x2, 144, x14)
-
-inst_58:
-// rs1_val == 0x10000000 and rs2_val == 0xB9D3087C 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x10000000;  op2val:0xb9d3087c
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x10000000, 0xb9d3087c, x2, 148, x14)
-
-inst_59:
-// rs1_val == 0xA8000000 and rs2_val == 0x46CBD355 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xa8000000;  op2val:0x46cbd355
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xa8000000, 0x46cbd355, x2, 152, x14)
-
-inst_60:
-// rs1_val == 0xE4000000 and rs2_val == 0x4616E73D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xe4000000;  op2val:0x4616e73d
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xe4000000, 0x4616e73d, x2, 156, x14)
-
-inst_61:
-// rs1_val == 0x8E000000 and rs2_val == 0x8CCAEC71 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x8e000000;  op2val:0x8ccaec71
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x8e000000, 0x8ccaec71, x2, 160, x14)
-
-inst_62:
-// rs1_val == 0x13000000 and rs2_val == 0x9B774054 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x13000000;  op2val:0x9b774054
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x13000000, 0x9b774054, x2, 164, x14)
-
-inst_63:
-// rs1_val == 0x8B800000 and rs2_val == 0x6D5FCD18 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x8b800000;  op2val:0x6d5fcd18
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x8b800000, 0x6d5fcd18, x2, 168, x14)
-
-inst_64:
-// rs1_val == 0x7EC00000 and rs2_val == 0x0696F561 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x7ec00000;  op2val:0x696f561
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x7ec00000, 0x696f561, x2, 172, x14)
-
-inst_65:
-// rs1_val == 0x3DA00000 and rs2_val == 0x6E1E98E2 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x3da00000;  op2val:0x6e1e98e2
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x3da00000, 0x6e1e98e2, x2, 176, x14)
-
-inst_66:
-// rs1_val == 0x20100000 and rs2_val == 0x2DEDB6A7 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x20100000;  op2val:0x2dedb6a7
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x20100000, 0x2dedb6a7, x2, 180, x14)
-
-inst_67:
-// rs1_val == 0x98380000 and rs2_val == 0x3C272728 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x98380000;  op2val:0x3c272728
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x98380000, 0x3c272728, x2, 184, x14)
-
-inst_68:
-// rs1_val == 0x80F40000 and rs2_val == 0x4F55C73D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x80f40000;  op2val:0x4f55c73d
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x80f40000, 0x4f55c73d, x2, 188, x14)
-
-inst_69:
-// rs1_val == 0x43560000 and rs2_val == 0xB0AB577A 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x43560000;  op2val:0xb0ab577a
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x43560000, 0xb0ab577a, x2, 192, x14)
-
-inst_70:
-// rs1_val == 0x62A90000 and rs2_val == 0x42F5D75E 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x62a90000;  op2val:0x42f5d75e
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x62a90000, 0x42f5d75e, x2, 196, x14)
-
-inst_71:
-// rs1_val == 0x60348000 and rs2_val == 0xB9F09825 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x60348000;  op2val:0xb9f09825
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x60348000, 0xb9f09825, x2, 200, x14)
-
-inst_72:
-// rs1_val == 0x5EF6C000 and rs2_val == 0x9BFAD94F 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x5ef6c000;  op2val:0x9bfad94f
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x5ef6c000, 0x9bfad94f, x2, 204, x14)
-
-inst_73:
-// rs1_val == 0x79DF6000 and rs2_val == 0x98918DD8 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x79df6000;  op2val:0x98918dd8
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x79df6000, 0x98918dd8, x2, 208, x14)
-
-inst_74:
-// rs1_val == 0x864C1000 and rs2_val == 0x9B811F47 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x864c1000;  op2val:0x9b811f47
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x864c1000, 0x9b811f47, x2, 212, x14)
-
-inst_75:
-// rs1_val == 0x735CB800 and rs2_val == 0xD0D18FB0 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x735cb800;  op2val:0xd0d18fb0
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x735cb800, 0xd0d18fb0, x2, 216, x14)
-
-inst_76:
-// rs1_val == 0x29554400 and rs2_val == 0x71992790 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x29554400;  op2val:0x71992790
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x29554400, 0x71992790, x2, 220, x14)
-
-inst_77:
-// rs1_val == 0xA9A56A00 and rs2_val == 0x8248F803 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xa9a56a00;  op2val:0x8248f803
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xa9a56a00, 0x8248f803, x2, 224, x14)
-
-inst_78:
-// rs1_val == 0xC3405D00 and rs2_val == 0xEB3D7873 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xc3405d00;  op2val:0xeb3d7873
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xc3405d00, 0xeb3d7873, x2, 228, x14)
-
-inst_79:
-// rs1_val == 0x394D8080 and rs2_val == 0xD7A7BF5E 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x394d8080;  op2val:0xd7a7bf5e
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x394d8080, 0xd7a7bf5e, x2, 232, x14)
-
-inst_80:
-// rs1_val == 0xC6677840 and rs2_val == 0xD1BA5C0F 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xc6677840;  op2val:0xd1ba5c0f
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xc6677840, 0xd1ba5c0f, x2, 236, x14)
-
-inst_81:
-// rs1_val == 0x70598E60 and rs2_val == 0xD19E3224 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x70598e60;  op2val:0xd19e3224
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x70598e60, 0xd19e3224, x2, 240, x14)
-
-inst_82:
-// rs1_val == 0x98A59F90 and rs2_val == 0x35D30D74 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x98a59f90;  op2val:0x35d30d74
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x98a59f90, 0x35d30d74, x2, 244, x14)
-
-inst_83:
-// rs1_val == 0xD306DEB8 and rs2_val == 0x70A76E49 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xd306deb8;  op2val:0x70a76e49
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xd306deb8, 0x70a76e49, x2, 248, x14)
-
-inst_84:
-// rs1_val == 0x18A01374 and rs2_val == 0x9FCDB9E1 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x18a01374;  op2val:0x9fcdb9e1
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x18a01374, 0x9fcdb9e1, x2, 252, x14)
-
-inst_85:
-// rs1_val == 0xC3667402 and rs2_val == 0x5FEFE911 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xc3667402;  op2val:0x5fefe911
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xc3667402, 0x5fefe911, x2, 256, x14)
-
-inst_86:
-// rs1_val == 0x797D76DF and rs2_val == 0x598B88DB 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x797d76df;  op2val:0x598b88db
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x797d76df, 0x598b88db, x2, 260, x14)
-
-inst_87:
-// rs2_val == 0x0C04F662 and rs1_val == 0xB7E7669E 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xb7e7669e;  op2val:0xc04f662
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xb7e7669e, 0xc04f662, x2, 264, x14)
-
-inst_88:
-// rs2_val == 0xCD41CAD1 and rs1_val == 0xD24F0724 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xd24f0724;  op2val:0xcd41cad1
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xd24f0724, 0xcd41cad1, x2, 268, x14)
-
-inst_89:
-// rs2_val == 0x1203965B and rs1_val == 0x585022A3 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x585022a3;  op2val:0x1203965b
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x585022a3, 0x1203965b, x2, 272, x14)
-
-inst_90:
-// rs2_val == 0x7A9AC0A7 and rs1_val == 0xEE8F948A 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xee8f948a;  op2val:0x7a9ac0a7
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xee8f948a, 0x7a9ac0a7, x2, 276, x14)
-
-inst_91:
-// rs2_val == 0x2AA8E42F and rs1_val == 0x2655FA99 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x2655fa99;  op2val:0x2aa8e42f
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x2655fa99, 0x2aa8e42f, x2, 280, x14)
-
-inst_92:
-// rs2_val == 0x211D785F and rs1_val == 0x0C96A183 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xc96a183;  op2val:0x211d785f
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xc96a183, 0x211d785f, x2, 284, x14)
-
-inst_93:
-// rs2_val == 0x59DDE33F and rs1_val == 0x88F931F4 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x88f931f4;  op2val:0x59dde33f
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x88f931f4, 0x59dde33f, x2, 288, x14)
-
-inst_94:
-// rs2_val == 0x711E627F and rs1_val == 0x6F2BF862 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x6f2bf862;  op2val:0x711e627f
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x6f2bf862, 0x711e627f, x2, 292, x14)
-
-inst_95:
-// rs2_val == 0x19835AFF and rs1_val == 0x5C6C32A5 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x5c6c32a5;  op2val:0x19835aff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x5c6c32a5, 0x19835aff, x2, 296, x14)
-
-inst_96:
-// rs2_val == 0x088B3DFF and rs1_val == 0x58FC0342 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x58fc0342;  op2val:0x88b3dff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x58fc0342, 0x88b3dff, x2, 300, x14)
-
-inst_97:
-// rs2_val == 0x9A6DA3FF and rs1_val == 0x636A75E3 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x636a75e3;  op2val:0x9a6da3ff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x636a75e3, 0x9a6da3ff, x2, 304, x14)
-
-inst_98:
-// rs2_val == 0x37E0D7FF and rs1_val == 0x4ED62428 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x4ed62428;  op2val:0x37e0d7ff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x4ed62428, 0x37e0d7ff, x2, 308, x14)
-
-inst_99:
-// rs2_val == 0x5E59CFFF and rs1_val == 0xD2D12745 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xd2d12745;  op2val:0x5e59cfff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xd2d12745, 0x5e59cfff, x2, 312, x14)
-
-inst_100:
-// rs2_val == 0xDD129FFF and rs1_val == 0x0D770F3C 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xd770f3c;  op2val:0xdd129fff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xd770f3c, 0xdd129fff, x2, 316, x14)
-
-inst_101:
-// rs2_val == 0x872EBFFF and rs1_val == 0x2311ACFB 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x2311acfb;  op2val:0x872ebfff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x2311acfb, 0x872ebfff, x2, 320, x14)
-
-inst_102:
-// rs2_val == 0x55367FFF and rs1_val == 0x0FB13BBC 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfb13bbc;  op2val:0x55367fff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfb13bbc, 0x55367fff, x2, 324, x14)
-
-inst_103:
-// rs2_val == 0xFDD2FFFF and rs1_val == 0x8DFC2307 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x8dfc2307;  op2val:0xfdd2ffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x8dfc2307, 0xfdd2ffff, x2, 328, x14)
-
-inst_104:
-// rs2_val == 0x30BDFFFF and rs1_val == 0x7312BE6D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x7312be6d;  op2val:0x30bdffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x7312be6d, 0x30bdffff, x2, 332, x14)
-
-inst_105:
-// rs2_val == 0xA743FFFF and rs1_val == 0xC61B1FBF 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xc61b1fbf;  op2val:0xa743ffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xc61b1fbf, 0xa743ffff, x2, 336, x14)
-
-inst_106:
-// rs2_val == 0x9987FFFF and rs1_val == 0xEBDA5A4F 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xebda5a4f;  op2val:0x9987ffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xebda5a4f, 0x9987ffff, x2, 340, x14)
-
-inst_107:
-// rs2_val == 0x118FFFFF and rs1_val == 0xC215E193 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xc215e193;  op2val:0x118fffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xc215e193, 0x118fffff, x2, 344, x14)
-
-inst_108:
-// rs2_val == 0x65DFFFFF and rs1_val == 0x75EE935F 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x75ee935f;  op2val:0x65dfffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x75ee935f, 0x65dfffff, x2, 348, x14)
-
-inst_109:
-// rs2_val == 0x6CBFFFFF and rs1_val == 0x09C16162 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x9c16162;  op2val:0x6cbfffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x9c16162, 0x6cbfffff, x2, 352, x14)
-
-inst_110:
-// rs2_val == 0x347FFFFF and rs1_val == 0xA4053175 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xa4053175;  op2val:0x347fffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xa4053175, 0x347fffff, x2, 356, x14)
-
-inst_111:
-// rs2_val == 0xC4FFFFFF and rs1_val == 0x499006C8 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x499006c8;  op2val:0xc4ffffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x499006c8, 0xc4ffffff, x2, 360, x14)
-
-inst_112:
-// rs2_val == 0x41FFFFFF and rs1_val == 0x3C5B3EEE 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x3c5b3eee;  op2val:0x41ffffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x3c5b3eee, 0x41ffffff, x2, 364, x14)
-
-inst_113:
-// rs2_val == 0x6BFFFFFF and rs1_val == 0xD95FD86A 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xd95fd86a;  op2val:0x6bffffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xd95fd86a, 0x6bffffff, x2, 368, x14)
-
-inst_114:
-// rs2_val == 0x87FFFFFF and rs1_val == 0x25784F4F 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x25784f4f;  op2val:0x87ffffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x25784f4f, 0x87ffffff, x2, 372, x14)
-
-inst_115:
-// rs2_val == 0xCFFFFFFF and rs1_val == 0x082018FA 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x82018fa;  op2val:0xcfffffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x82018fa, 0xcfffffff, x2, 376, x14)
-
-inst_116:
-// rs2_val == 0x9FFFFFFF and rs1_val == 0x350CC530 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x350cc530;  op2val:0x9fffffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x350cc530, 0x9fffffff, x2, 380, x14)
-
-inst_117:
-// rs2_val == 0x3FFFFFFF and rs1_val == 0x7966A24E 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x7966a24e;  op2val:0x3fffffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x7966a24e, 0x3fffffff, x2, 384, x14)
-
-inst_118:
-// rs2_val == 0x7FFFFFFF and rs1_val == 0x51D6D6DA 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x51d6d6da;  op2val:0x7fffffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x51d6d6da, 0x7fffffff, x2, 388, x14)
-
-inst_119:
-// rs2_val == 0xFFFFFFFF and rs1_val == 0xD5A2038F 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xd5a2038f;  op2val:0xffffffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xd5a2038f, 0xffffffff, x2, 392, x14)
-
-inst_120:
-// rs1_val == 0xFF7746E6 and rs2_val == 0x4F829B65 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xff7746e6;  op2val:0x4f829b65
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xff7746e6, 0x4f829b65, x2, 396, x14)
-
-inst_121:
-// rs1_val == 0xF89A7241 and rs2_val == 0x00C2F091 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xf89a7241;  op2val:0xc2f091
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xf89a7241, 0xc2f091, x2, 400, x14)
-
-inst_122:
-// rs1_val == 0x11B36A93 and rs2_val == 0xB1F5D853 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x11b36a93;  op2val:0xb1f5d853
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x11b36a93, 0xb1f5d853, x2, 404, x14)
-
-inst_123:
-// rs1_val == 0xC9932457 and rs2_val == 0x39BE2172 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xc9932457;  op2val:0x39be2172
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xc9932457, 0x39be2172, x2, 408, x14)
-
-inst_124:
-// rs1_val == 0x4B9A6C8F and rs2_val == 0x316039EE 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x4b9a6c8f;  op2val:0x316039ee
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x4b9a6c8f, 0x316039ee, x2, 412, x14)
-
-inst_125:
-// rs1_val == 0x9541241F and rs2_val == 0x5761A866 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x9541241f;  op2val:0x5761a866
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x9541241f, 0x5761a866, x2, 416, x14)
-
-inst_126:
-// rs1_val == 0x94B431BF and rs2_val == 0x09E4D1F4 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x94b431bf;  op2val:0x9e4d1f4
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x94b431bf, 0x9e4d1f4, x2, 420, x14)
-
-inst_127:
-// rs1_val == 0xDC8FE97F and rs2_val == 0x9E03793F 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xdc8fe97f;  op2val:0x9e03793f
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xdc8fe97f, 0x9e03793f, x2, 424, x14)
-
-inst_128:
-// rs1_val == 0xB903CEFF and rs2_val == 0x7F1071EC 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xb903ceff;  op2val:0x7f1071ec
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xb903ceff, 0x7f1071ec, x2, 428, x14)
-
-inst_129:
-// rs1_val == 0xB494A5FF and rs2_val == 0x9A7EF9E4 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xb494a5ff;  op2val:0x9a7ef9e4
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xb494a5ff, 0x9a7ef9e4, x2, 432, x14)
-
-inst_130:
-// rs1_val == 0xE2DD83FF and rs2_val == 0x59C05BB9 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xe2dd83ff;  op2val:0x59c05bb9
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xe2dd83ff, 0x59c05bb9, x2, 436, x14)
-
-inst_131:
-// rs1_val == 0xBBAFD7FF and rs2_val == 0xDE451397 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xbbafd7ff;  op2val:0xde451397
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xbbafd7ff, 0xde451397, x2, 440, x14)
-
-inst_132:
-// rs1_val == 0xCE5C4FFF and rs2_val == 0x40F27005 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xce5c4fff;  op2val:0x40f27005
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xce5c4fff, 0x40f27005, x2, 444, x14)
-
-inst_133:
-// rs1_val == 0x39935FFF and rs2_val == 0x24496FE3 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x39935fff;  op2val:0x24496fe3
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x39935fff, 0x24496fe3, x2, 448, x14)
-
-inst_134:
-// rs1_val == 0xEED7BFFF and rs2_val == 0xDE14BFF2 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xeed7bfff;  op2val:0xde14bff2
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xeed7bfff, 0xde14bff2, x2, 452, x14)
-
-inst_135:
-// rs1_val == 0x008E7FFF and rs2_val == 0xB808A677 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x8e7fff;  op2val:0xb808a677
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x8e7fff, 0xb808a677, x2, 456, x14)
-
-inst_136:
-// rs1_val == 0x12C2FFFF and rs2_val == 0x76B1FD3D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x12c2ffff;  op2val:0x76b1fd3d
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x12c2ffff, 0x76b1fd3d, x2, 460, x14)
-
-inst_137:
-// rs1_val == 0xE3A5FFFF and rs2_val == 0x5DCF019D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xe3a5ffff;  op2val:0x5dcf019d
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xe3a5ffff, 0x5dcf019d, x2, 464, x14)
-
-inst_138:
-// rs1_val == 0x9B03FFFF and rs2_val == 0x47B7097B 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x9b03ffff;  op2val:0x47b7097b
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x9b03ffff, 0x47b7097b, x2, 468, x14)
-
-inst_139:
-// rs1_val == 0x5F07FFFF and rs2_val == 0x759F1B43 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x5f07ffff;  op2val:0x759f1b43
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x5f07ffff, 0x759f1b43, x2, 472, x14)
-
-inst_140:
-// rs1_val == 0x33CFFFFF and rs2_val == 0x5B331999 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x33cfffff;  op2val:0x5b331999
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x33cfffff, 0x5b331999, x2, 476, x14)
-
-inst_141:
-// rs1_val == 0x709FFFFF and rs2_val == 0x2D37DE81 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x709fffff;  op2val:0x2d37de81
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x709fffff, 0x2d37de81, x2, 480, x14)
-
-inst_142:
-// rs1_val == 0xD1BFFFFF and rs2_val == 0xFCB627AF 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xd1bfffff;  op2val:0xfcb627af
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xd1bfffff, 0xfcb627af, x2, 484, x14)
-
-inst_143:
-// rs1_val == 0xAB7FFFFF and rs2_val == 0x1E0B4EE5 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xab7fffff;  op2val:0x1e0b4ee5
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xab7fffff, 0x1e0b4ee5, x2, 488, x14)
-
-inst_144:
-// rs1_val == 0x7CFFFFFF and rs2_val == 0xFB3E7196 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x7cffffff;  op2val:0xfb3e7196
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x7cffffff, 0xfb3e7196, x2, 492, x14)
-
-inst_145:
-// rs1_val == 0x59FFFFFF and rs2_val == 0xD9959A62 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x59ffffff;  op2val:0xd9959a62
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x59ffffff, 0xd9959a62, x2, 496, x14)
-
-inst_146:
-// rs1_val == 0xDBFFFFFF and rs2_val == 0xE08409F0 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xdbffffff;  op2val:0xe08409f0
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xdbffffff, 0xe08409f0, x2, 500, x14)
-
-inst_147:
-// rs1_val == 0xF7FFFFFF and rs2_val == 0x258ECECB 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xf7ffffff;  op2val:0x258ececb
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xf7ffffff, 0x258ececb, x2, 504, x14)
-
-inst_148:
-// rs1_val == 0x6FFFFFFF and rs2_val == 0xFF7D5EC0 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x6fffffff;  op2val:0xff7d5ec0
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x6fffffff, 0xff7d5ec0, x2, 508, x14)
-
-inst_149:
-// rs1_val == 0x9FFFFFFF and rs2_val == 0x4B6EA010 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x9fffffff;  op2val:0x4b6ea010
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x9fffffff, 0x4b6ea010, x2, 512, x14)
-
-inst_150:
-// rs1_val == 0x3FFFFFFF and rs2_val == 0xD885BBAC 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x3fffffff;  op2val:0xd885bbac
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x3fffffff, 0xd885bbac, x2, 516, x14)
-
-inst_151:
-// rs1_val == 0x7FFFFFFF and rs2_val == 0xBBE8F88D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x7fffffff;  op2val:0xbbe8f88d
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x7fffffff, 0xbbe8f88d, x2, 520, x14)
-
-inst_152:
-// rs1_val == 0xFFFFFFFF and rs2_val == 0xE3D6E4B9 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xffffffff;  op2val:0xe3d6e4b9
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xffffffff, 0xe3d6e4b9, x2, 524, x14)
-
-inst_153:
-// rs2_val == 0x970216FD and rs1_val == 0x0494B6D2 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x494b6d2;  op2val:0x970216fd
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x494b6d2, 0x970216fd, x2, 528, x14)
-
-inst_154:
-// rs2_val == 0x5CB58B8F and rs1_val == 0xF2650B71 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xf2650b71;  op2val:0x5cb58b8f
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xf2650b71, 0x5cb58b8f, x2, 532, x14)
-
-inst_155:
-// rs2_val == 0x27EFDA6C and rs1_val == 0x21AF214A 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x21af214a;  op2val:0x27efda6c
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x21af214a, 0x27efda6c, x2, 536, x14)
-
-inst_156:
-// rs2_val == 0x1D1EF7C0 and rs1_val == 0x482EA760 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x482ea760;  op2val:0x1d1ef7c0
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x482ea760, 0x1d1ef7c0, x2, 540, x14)
-
-inst_157:
-// rs2_val == 0x0FC2A909 and rs1_val == 0x0F7A0443 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xf7a0443;  op2val:0xfc2a909
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xf7a0443, 0xfc2a909, x2, 544, x14)
-
-inst_158:
-// rs2_val == 0x04E9E4A6 and rs1_val == 0x69534048 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x69534048;  op2val:0x4e9e4a6
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x69534048, 0x4e9e4a6, x2, 548, x14)
-
-inst_159:
-// rs2_val == 0x025FDCD7 and rs1_val == 0x043E3EF5 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x43e3ef5;  op2val:0x25fdcd7
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x43e3ef5, 0x25fdcd7, x2, 552, x14)
-
-inst_160:
-// rs2_val == 0x01782EBC and rs1_val == 0x12FAD802 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x12fad802;  op2val:0x1782ebc
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x12fad802, 0x1782ebc, x2, 556, x14)
-
-inst_161:
-// rs2_val == 0x00A39575 and rs1_val == 0x119B4FE5 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x119b4fe5;  op2val:0xa39575
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x119b4fe5, 0xa39575, x2, 560, x14)
-
-inst_162:
-// rs2_val == 0x0049886F and rs1_val == 0x7DB224CB 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x7db224cb;  op2val:0x49886f
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x7db224cb, 0x49886f, x2, 564, x14)
-
-inst_163:
-// rs2_val == 0x0025693C and rs1_val == 0xB45F51C3 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xb45f51c3;  op2val:0x25693c
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xb45f51c3, 0x25693c, x2, 568, x14)
-
-inst_164:
-// rs2_val == 0x0018031A and rs1_val == 0x41536363 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x41536363;  op2val:0x18031a
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x41536363, 0x18031a, x2, 572, x14)
-
-inst_165:
-// rs2_val == 0x000A8267 and rs1_val == 0x1A953CCA 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x1a953cca;  op2val:0xa8267
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x1a953cca, 0xa8267, x2, 576, x14)
-
-inst_166:
-// rs2_val == 0x00073010 and rs1_val == 0x14186EBF 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x14186ebf;  op2val:0x73010
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x14186ebf, 0x73010, x2, 580, x14)
-
-inst_167:
-// rs2_val == 0x00038734 and rs1_val == 0xF33C1A7F 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xf33c1a7f;  op2val:0x38734
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xf33c1a7f, 0x38734, x2, 584, x14)
-
-inst_168:
-// rs2_val == 0x0001EAB1 and rs1_val == 0x8DCE6F52 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x8dce6f52;  op2val:0x1eab1
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x8dce6f52, 0x1eab1, x2, 588, x14)
-
-inst_169:
-// rs2_val == 0x0000B8EC and rs1_val == 0x3096C6C8 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x3096c6c8;  op2val:0xb8ec
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x3096c6c8, 0xb8ec, x2, 592, x14)
-
-inst_170:
-// rs2_val == 0x00007530 and rs1_val == 0x9C461CB5 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x9c461cb5;  op2val:0x7530
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x9c461cb5, 0x7530, x2, 596, x14)
-
-inst_171:
-// rs2_val == 0x00003ED5 and rs1_val == 0x27756991 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x27756991;  op2val:0x3ed5
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x27756991, 0x3ed5, x2, 600, x14)
-
-inst_172:
-// rs2_val == 0x00001055 and rs1_val == 0x62D74145 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x62d74145;  op2val:0x1055
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x62d74145, 0x1055, x2, 604, x14)
-
-inst_173:
-// rs2_val == 0x00000E9E and rs1_val == 0x931719FD 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x931719fd;  op2val:0xe9e
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x931719fd, 0xe9e, x2, 608, x14)
-
-inst_174:
-// rs2_val == 0x0000059B and rs1_val == 0x965768E0 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x965768e0;  op2val:0x59b
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x965768e0, 0x59b, x2, 612, x14)
-
-inst_175:
-// rs2_val == 0x00000208 and rs1_val == 0x74057241 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x74057241;  op2val:0x208
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x74057241, 0x208, x2, 616, x14)
-
-inst_176:
-// rs2_val == 0x000001E8 and rs1_val == 0x5E617F8E 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x5e617f8e;  op2val:0x1e8
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x5e617f8e, 0x1e8, x2, 620, x14)
-
-inst_177:
-// rs2_val == 0x000000D2 and rs1_val == 0x3E361858 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x3e361858;  op2val:0xd2
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x3e361858, 0xd2, x2, 624, x14)
-
-inst_178:
-// rs2_val == 0x00000071 and rs1_val == 0x13041452 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x13041452;  op2val:0x71
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x13041452, 0x71, x2, 628, x14)
-
-inst_179:
-// rs2_val == 0x00000034 and rs1_val == 0x4BDBF090 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x4bdbf090;  op2val:0x34
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x4bdbf090, 0x34, x2, 632, x14)
-
-inst_180:
-// rs2_val == 0x00000019 and rs1_val == 0x9C3ECB54 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x9c3ecb54;  op2val:0x19
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x9c3ecb54, 0x19, x2, 636, x14)
-
-inst_181:
-// rs2_val == 0x0000000B and rs1_val == 0x421E7A60 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x421e7a60;  op2val:0xb
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x421e7a60, 0xb, x2, 640, x14)
-
-inst_182:
-// rs2_val == 0x00000005 and rs1_val == 0x2577C1EC 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x2577c1ec;  op2val:0x5
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x2577c1ec, 0x5, x2, 644, x14)
-
-inst_183:
-// rs2_val == 0x00000002 and rs1_val == 0x19AF685D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x19af685d;  op2val:0x2
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x19af685d, 0x2, x2, 648, x14)
-
-inst_184:
-// rs2_val == 0x00000001 and rs1_val == 0x2FF36007 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x2ff36007;  op2val:0x1
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x2ff36007, 0x1, x2, 652, x14)
-
-inst_185:
-// rs2_val == 0x00000000 and rs1_val == 0xE286852C 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xe286852c;  op2val:0x0
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xe286852c, 0x0, x2, 656, x14)
-
-inst_186:
-// rs1_val == 0xC511488A and rs2_val == 0x97BDD982 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xc511488a;  op2val:0x97bdd982
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xc511488a, 0x97bdd982, x2, 660, x14)
-
-inst_187:
-// rs1_val == 0x65151C41 and rs2_val == 0x367E5D6D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x65151c41;  op2val:0x367e5d6d
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x65151c41, 0x367e5d6d, x2, 664, x14)
-
-inst_188:
-// rs1_val == 0x24CA83B3 and rs2_val == 0x623D8EB7 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x24ca83b3;  op2val:0x623d8eb7
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x24ca83b3, 0x623d8eb7, x2, 668, x14)
-
-inst_189:
-// rs1_val == 0x1C3B66FB and rs2_val == 0x21870F0B 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x1c3b66fb;  op2val:0x21870f0b
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x1c3b66fb, 0x21870f0b, x2, 672, x14)
-
-inst_190:
-// rs1_val == 0x0A8A6FD0 and rs2_val == 0x82450164 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xa8a6fd0;  op2val:0x82450164
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xa8a6fd0, 0x82450164, x2, 676, x14)
-
-inst_191:
-// rs1_val == 0x069CA08C and rs2_val == 0x8F2DF760 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x69ca08c;  op2val:0x8f2df760
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x69ca08c, 0x8f2df760, x2, 680, x14)
-
-inst_192:
-// rs1_val == 0x03552C95 and rs2_val == 0x7CA07386 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x3552c95;  op2val:0x7ca07386
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x3552c95, 0x7ca07386, x2, 684, x14)
-
-inst_193:
-// rs1_val == 0x0174EA19 and rs2_val == 0x19DE2BC1 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x174ea19;  op2val:0x19de2bc1
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x174ea19, 0x19de2bc1, x2, 688, x14)
-
-inst_194:
-// rs1_val == 0x00A454F2 and rs2_val == 0xEC3FBF4D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xa454f2;  op2val:0xec3fbf4d
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xa454f2, 0xec3fbf4d, x2, 692, x14)
-
-inst_195:
-// rs1_val == 0x007E9BEE and rs2_val == 0x164F1513 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x7e9bee;  op2val:0x164f1513
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x7e9bee, 0x164f1513, x2, 696, x14)
-
-inst_196:
-// rs1_val == 0x002C7CD0 and rs2_val == 0xACC6D8F2 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x2c7cd0;  op2val:0xacc6d8f2
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x2c7cd0, 0xacc6d8f2, x2, 700, x14)
-
-inst_197:
-// rs1_val == 0x00177310 and rs2_val == 0xA123F501 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x177310;  op2val:0xa123f501
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x177310, 0xa123f501, x2, 704, x14)
-
-inst_198:
-// rs1_val == 0x00091609 and rs2_val == 0xB57A6A1D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x91609;  op2val:0xb57a6a1d
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x91609, 0xb57a6a1d, x2, 708, x14)
-
-inst_199:
-// rs1_val == 0x00040BE0 and rs2_val == 0xE90794DF 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x40be0;  op2val:0xe90794df
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x40be0, 0xe90794df, x2, 712, x14)
-
-inst_200:
-// rs1_val == 0x00028D1B and rs2_val == 0xAF5570EE 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x28d1b;  op2val:0xaf5570ee
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x28d1b, 0xaf5570ee, x2, 716, x14)
-
-inst_201:
-// rs1_val == 0x0001FBE5 and rs2_val == 0xD8B9B45C 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x1fbe5;  op2val:0xd8b9b45c
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x1fbe5, 0xd8b9b45c, x2, 720, x14)
-
-inst_202:
-// rs1_val == 0x0000AAC1 and rs2_val == 0x1BA1192E 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xaac1;  op2val:0x1ba1192e
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xaac1, 0x1ba1192e, x2, 724, x14)
-
-inst_203:
-// rs1_val == 0x000062C3 and rs2_val == 0x49FE85B0 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x62c3;  op2val:0x49fe85b0
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x62c3, 0x49fe85b0, x2, 728, x14)
-
-inst_204:
-// rs1_val == 0x000022FD and rs2_val == 0x4105CCA7 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x22fd;  op2val:0x4105cca7
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x22fd, 0x4105cca7, x2, 732, x14)
-
-inst_205:
-// rs1_val == 0x000016B3 and rs2_val == 0xD7185DDA 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x16b3;  op2val:0xd7185dda
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x16b3, 0xd7185dda, x2, 736, x14)
-
-inst_206:
-// rs1_val == 0x00000A38 and rs2_val == 0xA7A11490 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xa38;  op2val:0xa7a11490
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xa38, 0xa7a11490, x2, 740, x14)
-
-inst_207:
-// rs1_val == 0x000006A7 and rs2_val == 0xA9964AEF 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x6a7;  op2val:0xa9964aef
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x6a7, 0xa9964aef, x2, 744, x14)
-
-inst_208:
-// rs1_val == 0x000003B9 and rs2_val == 0x4B4D8474 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x3b9;  op2val:0x4b4d8474
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x3b9, 0x4b4d8474, x2, 748, x14)
-
-inst_209:
-// rs1_val == 0x00000190 and rs2_val == 0x76C468AE 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x190;  op2val:0x76c468ae
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x190, 0x76c468ae, x2, 752, x14)
-
-inst_210:
-// rs1_val == 0x000000D4 and rs2_val == 0x09208A65 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xd4;  op2val:0x9208a65
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xd4, 0x9208a65, x2, 756, x14)
-
-inst_211:
-// rs1_val == 0x00000067 and rs2_val == 0x8743FEB6 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x67;  op2val:0x8743feb6
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x67, 0x8743feb6, x2, 760, x14)
-
-inst_212:
-// rs1_val == 0x00000039 and rs2_val == 0xA66B0D38 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x39;  op2val:0xa66b0d38
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x39, 0xa66b0d38, x2, 764, x14)
-
-inst_213:
-// rs1_val == 0x0000001C and rs2_val == 0xFB710734 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x1c;  op2val:0xfb710734
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x1c, 0xfb710734, x2, 768, x14)
-
-inst_214:
-// rs1_val == 0x0000000E and rs2_val == 0xA26B7F62 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xe;  op2val:0xa26b7f62
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xe, 0xa26b7f62, x2, 772, x14)
-
-inst_215:
-// rs1_val == 0x00000007 and rs2_val == 0x4DABB481 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x7;  op2val:0x4dabb481
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x7, 0x4dabb481, x2, 776, x14)
-
-inst_216:
-// rs1_val == 0x00000003 and rs2_val == 0x2FA91425 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x2fa91425
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x3, 0x2fa91425, x2, 780, x14)
-
-inst_217:
-// rs1_val == 0x00000001 and rs2_val == 0x965EDA32 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x965eda32
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x1, 0x965eda32, x2, 784, x14)
-
-inst_218:
-// rs1_val == 0x00000000 and rs2_val == 0xC7FDE805 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xc7fde805
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x0, 0xc7fde805, x2, 788, x14)
-
-inst_219:
-// rs2_val == 0x6D3F408C and rs1_val == 0xFFEC35FE 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xffec35fe;  op2val:0x6d3f408c
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xffec35fe, 0x6d3f408c, x2, 792, x14)
-
-inst_220:
-// rs2_val == 0x946A3674 and rs1_val == 0x976AD220 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x976ad220;  op2val:0x946a3674
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x976ad220, 0x946a3674, x2, 796, x14)
-
-inst_221:
-// rs2_val == 0xDC6113A4 and rs1_val == 0x5990FE96 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x5990fe96;  op2val:0xdc6113a4
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x5990fe96, 0xdc6113a4, x2, 800, x14)
-
-inst_222:
-// rs2_val == 0xE42A809C and rs1_val == 0xC96EFDC4 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xc96efdc4;  op2val:0xe42a809c
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xc96efdc4, 0xe42a809c, x2, 804, x14)
-
-inst_223:
-// rs2_val == 0xF1A25760 and rs1_val == 0xAB8534C1 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xab8534c1;  op2val:0xf1a25760
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xab8534c1, 0xf1a25760, x2, 808, x14)
-
-inst_224:
-// rs2_val == 0xFB37BEC9 and rs1_val == 0xD1142724 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xd1142724;  op2val:0xfb37bec9
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xd1142724, 0xfb37bec9, x2, 812, x14)
-
-inst_225:
-// rs2_val == 0xFCE51A66 and rs1_val == 0xF65E7737 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xf65e7737;  op2val:0xfce51a66
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xf65e7737, 0xfce51a66, x2, 816, x14)
-
-inst_226:
-// rs2_val == 0xFEDEBB9C and rs1_val == 0x16CBC21C 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x16cbc21c;  op2val:0xfedebb9c
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x16cbc21c, 0xfedebb9c, x2, 820, x14)
-
-inst_227:
-// rs2_val == 0xFF69340A and rs1_val == 0xDBDD4DD9 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xdbdd4dd9;  op2val:0xff69340a
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xdbdd4dd9, 0xff69340a, x2, 824, x14)
-
-inst_228:
-// rs2_val == 0xFF9CF3F4 and rs1_val == 0x4BD90A77 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x4bd90a77;  op2val:0xff9cf3f4
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x4bd90a77, 0xff9cf3f4, x2, 828, x14)
-
-inst_229:
-// rs2_val == 0xFFC00793 and rs1_val == 0xCEBE24D9 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xcebe24d9;  op2val:0xffc00793
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xcebe24d9, 0xffc00793, x2, 832, x14)
-
-inst_230:
-// rs2_val == 0xFFEE1FC4 and rs1_val == 0xA0E0BD86 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xa0e0bd86;  op2val:0xffee1fc4
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xa0e0bd86, 0xffee1fc4, x2, 836, x14)
-
-inst_231:
-// rs2_val == 0xFFF06038 and rs1_val == 0x3CC279B3 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x3cc279b3;  op2val:0xfff06038
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x3cc279b3, 0xfff06038, x2, 840, x14)
-
-inst_232:
-// rs2_val == 0xFFF93D53 and rs1_val == 0x754F9B96 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x754f9b96;  op2val:0xfff93d53
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x754f9b96, 0xfff93d53, x2, 844, x14)
-
-inst_233:
-// rs2_val == 0xFFFC47E8 and rs1_val == 0x72745307 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x72745307;  op2val:0xfffc47e8
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x72745307, 0xfffc47e8, x2, 848, x14)
-
-inst_234:
-// rs2_val == 0xFFFE7302 and rs1_val == 0xDCAE6D62 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xdcae6d62;  op2val:0xfffe7302
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xdcae6d62, 0xfffe7302, x2, 852, x14)
-
-inst_235:
-// rs2_val == 0xFFFF1CE8 and rs1_val == 0x7C2C966D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x7c2c966d;  op2val:0xffff1ce8
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x7c2c966d, 0xffff1ce8, x2, 856, x14)
-
-inst_236:
-// rs2_val == 0xFFFFB5C6 and rs1_val == 0x9BB4752D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x9bb4752d;  op2val:0xffffb5c6
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x9bb4752d, 0xffffb5c6, x2, 860, x14)
-
-inst_237:
-// rs2_val == 0xFFFFDFA4 and rs1_val == 0x17BE082F 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x17be082f;  op2val:0xffffdfa4
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x17be082f, 0xffffdfa4, x2, 864, x14)
-
-inst_238:
-// rs2_val == 0xFFFFEF0B and rs1_val == 0x109FF475 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x109ff475;  op2val:0xffffef0b
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x109ff475, 0xffffef0b, x2, 868, x14)
-
-inst_239:
-// rs2_val == 0xFFFFF43F and rs1_val == 0x00B97EA6 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xb97ea6;  op2val:0xfffff43f
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xb97ea6, 0xfffff43f, x2, 872, x14)
-
-inst_240:
-// rs2_val == 0xFFFFFB4A and rs1_val == 0xF956EC0B 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xf956ec0b;  op2val:0xfffffb4a
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xf956ec0b, 0xfffffb4a, x2, 876, x14)
-
-inst_241:
-// rs2_val == 0xFFFFFDA4 and rs1_val == 0x70FC1AFC 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x70fc1afc;  op2val:0xfffffda4
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x70fc1afc, 0xfffffda4, x2, 880, x14)
-
-inst_242:
-// rs2_val == 0xFFFFFECB and rs1_val == 0x6348306E 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x6348306e;  op2val:0xfffffecb
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x6348306e, 0xfffffecb, x2, 884, x14)
-
-inst_243:
-// rs2_val == 0xFFFFFF54 and rs1_val == 0x66B072B9 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x66b072b9;  op2val:0xffffff54
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x66b072b9, 0xffffff54, x2, 888, x14)
-
-inst_244:
-// rs2_val == 0xFFFFFFA9 and rs1_val == 0x7FF822ED 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x7ff822ed;  op2val:0xffffffa9
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x7ff822ed, 0xffffffa9, x2, 892, x14)
-
-inst_245:
-// rs2_val == 0xFFFFFFC3 and rs1_val == 0xE918BE9F 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xe918be9f;  op2val:0xffffffc3
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xe918be9f, 0xffffffc3, x2, 896, x14)
-
-inst_246:
-// rs2_val == 0xFFFFFFE7 and rs1_val == 0xE4BAE7F6 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xe4bae7f6;  op2val:0xffffffe7
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xe4bae7f6, 0xffffffe7, x2, 900, x14)
-
-inst_247:
-// rs2_val == 0xFFFFFFF1 and rs1_val == 0xDE9A896F 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xde9a896f;  op2val:0xfffffff1
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xde9a896f, 0xfffffff1, x2, 904, x14)
-
-inst_248:
-// rs2_val == 0xFFFFFFF8 and rs1_val == 0x2881E531 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x2881e531;  op2val:0xfffffff8
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x2881e531, 0xfffffff8, x2, 908, x14)
-
-inst_249:
-// rs2_val == 0xFFFFFFFC and rs1_val == 0x1475F78D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x1475f78d;  op2val:0xfffffffc
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x1475f78d, 0xfffffffc, x2, 912, x14)
-
-inst_250:
-// rs2_val == 0xFFFFFFFE and rs1_val == 0xE59CF78F 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xe59cf78f;  op2val:0xfffffffe
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xe59cf78f, 0xfffffffe, x2, 916, x14)
-
-inst_251:
-// rs2_val == 0xFFFFFFFF and rs1_val == 0xB66B3284 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xb66b3284;  op2val:0xffffffff
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xb66b3284, 0xffffffff, x2, 920, x14)
-
-inst_252:
-// rs1_val == 0x6F4930C9 and rs2_val == 0x39422745 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x6f4930c9;  op2val:0x39422745
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x6f4930c9, 0x39422745, x2, 924, x14)
-
-inst_253:
-// rs1_val == 0x85D97467 and rs2_val == 0x58FA6E1C 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x85d97467;  op2val:0x58fa6e1c
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x85d97467, 0x58fa6e1c, x2, 928, x14)
-
-inst_254:
-// rs1_val == 0xC70AFC93 and rs2_val == 0x2D143295 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xc70afc93;  op2val:0x2d143295
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xc70afc93, 0x2d143295, x2, 932, x14)
-
-inst_255:
-// rs1_val == 0xE911655F and rs2_val == 0xD230B46C 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xe911655f;  op2val:0xd230b46c
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xe911655f, 0xd230b46c, x2, 936, x14)
-
-inst_256:
-// rs1_val == 0xF4AB0A39 and rs2_val == 0x4D753AC1 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xf4ab0a39;  op2val:0x4d753ac1
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xf4ab0a39, 0x4d753ac1, x2, 940, x14)
-
-inst_257:
-// rs1_val == 0xF8BD4821 and rs2_val == 0x1E9667C2 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xf8bd4821;  op2val:0x1e9667c2
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xf8bd4821, 0x1e9667c2, x2, 944, x14)
-
-inst_258:
-// rs1_val == 0xFCD7E667 and rs2_val == 0xAE4839A1 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfcd7e667;  op2val:0xae4839a1
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfcd7e667, 0xae4839a1, x2, 948, x14)
-
-inst_259:
-// rs1_val == 0xFE71CFDF and rs2_val == 0x6A013380 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfe71cfdf;  op2val:0x6a013380
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfe71cfdf, 0x6a013380, x2, 952, x14)
-
-inst_260:
-// rs1_val == 0xFF1C11AE and rs2_val == 0x59432A19 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xff1c11ae;  op2val:0x59432a19
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xff1c11ae, 0x59432a19, x2, 956, x14)
-
-inst_261:
-// rs1_val == 0xFF89799A and rs2_val == 0xCEB506F6 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xff89799a;  op2val:0xceb506f6
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xff89799a, 0xceb506f6, x2, 960, x14)
-
-inst_262:
-// rs1_val == 0xFFC80B13 and rs2_val == 0xC5EC6148 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xffc80b13;  op2val:0xc5ec6148
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xffc80b13, 0xc5ec6148, x2, 964, x14)
-
-inst_263:
-// rs1_val == 0xFFE94647 and rs2_val == 0x99EF1857 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xffe94647;  op2val:0x99ef1857
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xffe94647, 0x99ef1857, x2, 968, x14)
-
-inst_264:
-// rs1_val == 0xFFF263CF and rs2_val == 0x14B91C79 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfff263cf;  op2val:0x14b91c79
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfff263cf, 0x14b91c79, x2, 972, x14)
-
-inst_265:
-// rs1_val == 0xFFF919A1 and rs2_val == 0xA86B8A6E 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfff919a1;  op2val:0xa86b8a6e
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfff919a1, 0xa86b8a6e, x2, 976, x14)
-
-inst_266:
-// rs1_val == 0xFFFDE89D and rs2_val == 0x08208D09 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfffde89d;  op2val:0x8208d09
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfffde89d, 0x8208d09, x2, 980, x14)
-
-inst_267:
-// rs1_val == 0xFFFEC9D0 and rs2_val == 0x69B1DCBF 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfffec9d0;  op2val:0x69b1dcbf
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfffec9d0, 0x69b1dcbf, x2, 984, x14)
-
-inst_268:
-// rs1_val == 0xFFFF5576 and rs2_val == 0x807DA245 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xffff5576;  op2val:0x807da245
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xffff5576, 0x807da245, x2, 988, x14)
-
-inst_269:
-// rs1_val == 0xFFFFB6DF and rs2_val == 0x95A4D257 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xffffb6df;  op2val:0x95a4d257
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xffffb6df, 0x95a4d257, x2, 992, x14)
-
-inst_270:
-// rs1_val == 0xFFFFC561 and rs2_val == 0x735C076B 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xffffc561;  op2val:0x735c076b
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xffffc561, 0x735c076b, x2, 996, x14)
-
-inst_271:
-// rs1_val == 0xFFFFEAB5 and rs2_val == 0xE5F0307E 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xffffeab5;  op2val:0xe5f0307e
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xffffeab5, 0xe5f0307e, x2, 1000, x14)
-
-inst_272:
-// rs1_val == 0xFFFFF602 and rs2_val == 0xE8DAC663 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfffff602;  op2val:0xe8dac663
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfffff602, 0xe8dac663, x2, 1004, x14)
-
-inst_273:
-// rs1_val == 0xFFFFF8B1 and rs2_val == 0x0109C207 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfffff8b1;  op2val:0x109c207
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfffff8b1, 0x109c207, x2, 1008, x14)
-
-inst_274:
-// rs1_val == 0xFFFFFCA0 and rs2_val == 0x600FECC1 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfffffca0;  op2val:0x600fecc1
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfffffca0, 0x600fecc1, x2, 1012, x14)
-
-inst_275:
-// rs1_val == 0xFFFFFECC and rs2_val == 0xFB7F6F5D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfffffecc;  op2val:0xfb7f6f5d
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfffffecc, 0xfb7f6f5d, x2, 1016, x14)
-
-inst_276:
-// rs1_val == 0xFFFFFF6E and rs2_val == 0x5CD2875E 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xffffff6e;  op2val:0x5cd2875e
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xffffff6e, 0x5cd2875e, x2, 1020, x14)
-
-inst_277:
-// rs1_val == 0xFFFFFF84 and rs2_val == 0xACCA7F0D 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xffffff84;  op2val:0xacca7f0d
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xffffff84, 0xacca7f0d, x2, 1024, x14)
-
-inst_278:
-// rs1_val == 0xFFFFFFDD and rs2_val == 0x5AE6A228 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xffffffdd;  op2val:0x5ae6a228
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xffffffdd, 0x5ae6a228, x2, 1028, x14)
-
-inst_279:
-// rs1_val == 0xFFFFFFE7 and rs2_val == 0xFF1E5BEF 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xffffffe7;  op2val:0xff1e5bef
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xffffffe7, 0xff1e5bef, x2, 1032, x14)
-
-inst_280:
-// rs1_val == 0xFFFFFFF4 and rs2_val == 0x137A9777 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfffffff4;  op2val:0x137a9777
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfffffff4, 0x137a9777, x2, 1036, x14)
-
-inst_281:
-// rs1_val == 0xFFFFFFFA and rs2_val == 0x854A9657 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffa;  op2val:0x854a9657
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfffffffa, 0x854a9657, x2, 1040, x14)
-
-inst_282:
-// rs1_val == 0xFFFFFFFD and rs2_val == 0xCF84B683 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffd;  op2val:0xcf84b683
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfffffffd, 0xcf84b683, x2, 1044, x14)
-
-inst_283:
-// rs1_val == 0xFFFFFFFE and rs2_val == 0x93FDCAB8 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffe;  op2val:0x93fdcab8
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xfffffffe, 0x93fdcab8, x2, 1048, x14)
-
-inst_284:
-// rs1_val == 0x91766f62 and rs2_val == 0x5570084b 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0x91766f62;  op2val:0x5570084b
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0x91766f62, 0x5570084b, x2, 1052, x14)
-
-inst_285:
-// rs1_val == 0xc0fe15dd and rs2_val == 0x9f053821 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xc0fe15dd;  op2val:0x9f053821
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xc0fe15dd, 0x9f053821, x2, 1056, x14)
-
-inst_286:
-// rs1_val == 0xb49c83dc and rs2_val == 0xbb61a9cd 
-// opcode: xperm.b ; op1:x10; op2:x11; dest:x12; op1val:0xb49c83dc;  op2val:0xbb61a9cd
-TEST_RR_OP(xperm.b, x12, x10, x11, 0x00000000, 0xb49c83dc, 0xbb61a9cd, x2, 1060, x14)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-rvtest_data:
-.word 0xbabecafe
-RVTEST_DATA_END
-
-RVMODEL_DATA_BEGIN
-
-
-signature_x8_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x8_1:
-    .fill 21*(XLEN/32),4,0xdeadbeef
-
-
-signature_x2_0:
-    .fill 266*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-RVMODEL_DATA_END
diff --git a/riscv-test-suite/rv32i_m/K_unratified/src/xperm.n-01.S b/riscv-test-suite/rv32i_m/K_unratified/src/xperm.n-01.S
deleted file mode 100644
index 697b531..0000000
--- a/riscv-test-suite/rv32i_m/K_unratified/src/xperm.n-01.S
+++ /dev/null
@@ -1,1531 +0,0 @@
-// -----------
-// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
-// version   : 0.4.5
-// timestamp : Thu May 27 16:46:51 2021 GMT
-// usage     : riscv_ctg \
-//                  --cgf /scratch/git-repo/github/riscv-ctg/sample_cgfs/dataset.cgf \
-//                  --cgf /scratch/git-repo/github/riscv-ctg/sample_cgfs/rv32i_k.cgf \
-//                  --base-isa rv32i \
-//                  --randomize
-// -----------
-//
-// -----------
-// Copyright (c) 2021. Indian Institute of Technology Madras. All rights reserved.
-// SPDX-License-Identifier: BSD-3-Clause
-// -----------
-//
-// This assembly file tests the xperm.n instruction of the RISC-V  extension for the xperm.n covergroup.
-// 
-#include "model_test.h"
-#include "arch_test.h"
-RVTEST_ISA("RV32I")
-
-.section .text.init
-.globl rvtest_entry_point
-rvtest_entry_point:
-RVMODEL_BOOT
-RVTEST_CODE_BEGIN
-
-#ifdef TEST_CASE_1
-
-RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*K.*);def TEST_CASE_1=True;",xperm.n)
-
-RVTEST_CASE(1,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKs.*);def TEST_CASE_1=True;",xperm.n)
-
-RVTEST_CASE(2,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKb.*);def TEST_CASE_1=True;",xperm.n)
-
-RVTEST_CASE(3,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*ZKn.*);def TEST_CASE_1=True;",xperm.n)
-
-RVTEST_SIGBASE( x10,signature_x10_1)
-
-inst_0:
-// rs1 == rd != rs2, rs1==x31, rs2==x7, rd==x31, rs1_val == 0xFFFFFFFF and rs2_val == 0x08577EB1 
-// opcode: xperm.n ; op1:x31; op2:x7; dest:x31; op1val:0xffffffff;  op2val:0x8577eb1
-TEST_RR_OP(xperm.n, x31, x31, x7, 0x00000000, 0xffffffff, 0x8577eb1, x10, 0, x17)
-
-inst_1:
-// rs1 == rs2 == rd, rs1==x8, rs2==x8, rd==x8, rs1_val == 0x91766f62 and rs2_val == 0x5570084b 
-// opcode: xperm.n ; op1:x8; op2:x8; dest:x8; op1val:0x91766f62;  op2val:0x91766f62
-TEST_RR_OP(xperm.n, x8, x8, x8, 0x00000000, 0x91766f62, 0x91766f62, x10, 4, x17)
-
-inst_2:
-// rs1 == rs2 != rd, rs1==x12, rs2==x12, rd==x7, rs1_val == 0xc0fe15dd and rs2_val == 0x9f053821 
-// opcode: xperm.n ; op1:x12; op2:x12; dest:x7; op1val:0xc0fe15dd;  op2val:0xc0fe15dd
-TEST_RR_OP(xperm.n, x7, x12, x12, 0x00000000, 0xc0fe15dd, 0xc0fe15dd, x10, 8, x17)
-
-inst_3:
-// rs2 == rd != rs1, rs1==x28, rs2==x2, rd==x2, rs1_val == 0xdc80d916 and rs2_val == 0x2a2a146d 
-// opcode: xperm.n ; op1:x28; op2:x2; dest:x2; op1val:0xdc80d916;  op2val:0x2a2a146d
-TEST_RR_OP(xperm.n, x2, x28, x2, 0x00000000, 0xdc80d916, 0x2a2a146d, x10, 12, x17)
-
-inst_4:
-// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==x4, rs2==x24, rd==x15, rs1_val == 0x952acffe and rs2_val == 0x25ae27ee 
-// opcode: xperm.n ; op1:x4; op2:x24; dest:x15; op1val:0x952acffe;  op2val:0x25ae27ee
-TEST_RR_OP(xperm.n, x15, x4, x24, 0x00000000, 0x952acffe, 0x25ae27ee, x10, 16, x17)
-
-inst_5:
-// rs1==x29, rs2==x4, rd==x14, rs1_val == 0x40a5ff52 and rs2_val == 0xb6f9706f 
-// opcode: xperm.n ; op1:x29; op2:x4; dest:x14; op1val:0x40a5ff52;  op2val:0xb6f9706f
-TEST_RR_OP(xperm.n, x14, x29, x4, 0x00000000, 0x40a5ff52, 0xb6f9706f, x10, 20, x17)
-
-inst_6:
-// rs1==x19, rs2==x5, rd==x25, rs1_val == 0xe3f4fca3 and rs2_val == 0xa6c9253a 
-// opcode: xperm.n ; op1:x19; op2:x5; dest:x25; op1val:0xe3f4fca3;  op2val:0xa6c9253a
-TEST_RR_OP(xperm.n, x25, x19, x5, 0x00000000, 0xe3f4fca3, 0xa6c9253a, x10, 24, x17)
-
-inst_7:
-// rs1==x23, rs2==x30, rd==x27, rs1_val == 0xc2f1c53e and rs2_val == 0xd05668ae 
-// opcode: xperm.n ; op1:x23; op2:x30; dest:x27; op1val:0xc2f1c53e;  op2val:0xd05668ae
-TEST_RR_OP(xperm.n, x27, x23, x30, 0x00000000, 0xc2f1c53e, 0xd05668ae, x10, 28, x17)
-
-inst_8:
-// rs1==x16, rs2==x11, rd==x24, rs1_val == 0x9722c9a6 and rs2_val == 0x7bcad7c4 
-// opcode: xperm.n ; op1:x16; op2:x11; dest:x24; op1val:0x9722c9a6;  op2val:0x7bcad7c4
-TEST_RR_OP(xperm.n, x24, x16, x11, 0x00000000, 0x9722c9a6, 0x7bcad7c4, x10, 32, x17)
-
-inst_9:
-// rs1==x26, rs2==x0, rd==x5, rs1_val == 0xf7f1305a and rs2_val == 0x9bedfe39 
-// opcode: xperm.n ; op1:x26; op2:x0; dest:x5; op1val:0xf7f1305a;  op2val:0x0
-TEST_RR_OP(xperm.n, x5, x26, x0, 0x00000000, 0xf7f1305a, 0x0, x10, 36, x17)
-
-inst_10:
-// rs1==x24, rs2==x31, rd==x11, rs1_val == 0xd75739f8 and rs2_val == 0xe6fff3d9 
-// opcode: xperm.n ; op1:x24; op2:x31; dest:x11; op1val:0xd75739f8;  op2val:0xe6fff3d9
-TEST_RR_OP(xperm.n, x11, x24, x31, 0x00000000, 0xd75739f8, 0xe6fff3d9, x10, 40, x17)
-
-inst_11:
-// rs1==x1, rs2==x29, rd==x9, rs1_val == 0x90efb625 and rs2_val == 0x3150e5fa 
-// opcode: xperm.n ; op1:x1; op2:x29; dest:x9; op1val:0x90efb625;  op2val:0x3150e5fa
-TEST_RR_OP(xperm.n, x9, x1, x29, 0x00000000, 0x90efb625, 0x3150e5fa, x10, 44, x17)
-
-inst_12:
-// rs1==x30, rs2==x3, rd==x13, rs1_val == 0x1fc493ca and rs2_val == 0x65408c73 
-// opcode: xperm.n ; op1:x30; op2:x3; dest:x13; op1val:0x1fc493ca;  op2val:0x65408c73
-TEST_RR_OP(xperm.n, x13, x30, x3, 0x00000000, 0x1fc493ca, 0x65408c73, x10, 48, x17)
-
-inst_13:
-// rs1==x27, rs2==x6, rd==x20, rs1_val == 0x8e2eac2a and rs2_val == 0xd169a3f8 
-// opcode: xperm.n ; op1:x27; op2:x6; dest:x20; op1val:0x8e2eac2a;  op2val:0xd169a3f8
-TEST_RR_OP(xperm.n, x20, x27, x6, 0x00000000, 0x8e2eac2a, 0xd169a3f8, x10, 52, x17)
-
-inst_14:
-// rs1==x22, rs2==x26, rd==x23, rs1_val == 0x35f9377f and rs2_val == 0xf4c30307 
-// opcode: xperm.n ; op1:x22; op2:x26; dest:x23; op1val:0x35f9377f;  op2val:0xf4c30307
-TEST_RR_OP(xperm.n, x23, x22, x26, 0x00000000, 0x35f9377f, 0xf4c30307, x10, 56, x17)
-
-inst_15:
-// rs1==x21, rs2==x25, rd==x28, rs1_val == 0x58d548aa and rs2_val == 0xa0569d76 
-// opcode: xperm.n ; op1:x21; op2:x25; dest:x28; op1val:0x58d548aa;  op2val:0xa0569d76
-TEST_RR_OP(xperm.n, x28, x21, x25, 0x00000000, 0x58d548aa, 0xa0569d76, x10, 60, x7)
-RVTEST_SIGBASE( x8,signature_x8_0)
-
-inst_16:
-// rs1==x15, rs2==x21, rd==x0, rs1_val == 0x55d98c6e and rs2_val == 0x2daf9ac7 
-// opcode: xperm.n ; op1:x15; op2:x21; dest:x0; op1val:0x55d98c6e;  op2val:0x2daf9ac7
-TEST_RR_OP(xperm.n, x0, x15, x21, 0x00000000, 0x55d98c6e, 0x2daf9ac7, x8, 0, x7)
-
-inst_17:
-// rs1==x14, rs2==x10, rd==x26, rs1_val == 0x74b8de87 and rs2_val == 0xf273b44c 
-// opcode: xperm.n ; op1:x14; op2:x10; dest:x26; op1val:0x74b8de87;  op2val:0xf273b44c
-TEST_RR_OP(xperm.n, x26, x14, x10, 0x00000000, 0x74b8de87, 0xf273b44c, x8, 4, x7)
-
-inst_18:
-// rs1==x3, rs2==x9, rd==x1, rs1_val == 0xccce240c and rs2_val == 0x886c3a30 
-// opcode: xperm.n ; op1:x3; op2:x9; dest:x1; op1val:0xccce240c;  op2val:0x886c3a30
-TEST_RR_OP(xperm.n, x1, x3, x9, 0x00000000, 0xccce240c, 0x886c3a30, x8, 8, x7)
-
-inst_19:
-// rs1==x13, rs2==x28, rd==x22, rs1_val == 0xb49c83dc and rs2_val == 0xbb61a9cd 
-// opcode: xperm.n ; op1:x13; op2:x28; dest:x22; op1val:0xb49c83dc;  op2val:0xbb61a9cd
-TEST_RR_OP(xperm.n, x22, x13, x28, 0x00000000, 0xb49c83dc, 0xbb61a9cd, x8, 12, x7)
-
-inst_20:
-// rs1==x20, rs2==x1, rd==x6, rs1_val == 0x254a9493 and rs2_val == 0xc5521660 
-// opcode: xperm.n ; op1:x20; op2:x1; dest:x6; op1val:0x254a9493;  op2val:0xc5521660
-TEST_RR_OP(xperm.n, x6, x20, x1, 0x00000000, 0x254a9493, 0xc5521660, x8, 16, x7)
-
-inst_21:
-// rs1==x9, rs2==x15, rd==x17, rs2_val == 0x00000000 and rs1_val == 0x4FFE831A 
-// opcode: xperm.n ; op1:x9; op2:x15; dest:x17; op1val:0x4ffe831a;  op2val:0x0
-TEST_RR_OP(xperm.n, x17, x9, x15, 0x00000000, 0x4ffe831a, 0x0, x8, 20, x7)
-
-inst_22:
-// rs1==x25, rs2==x20, rd==x4, rs2_val == 0x80000000 and rs1_val == 0xAFC08ACE 
-// opcode: xperm.n ; op1:x25; op2:x20; dest:x4; op1val:0xafc08ace;  op2val:0x80000000
-TEST_RR_OP(xperm.n, x4, x25, x20, 0x00000000, 0xafc08ace, 0x80000000, x8, 24, x7)
-
-inst_23:
-// rs1==x2, rs2==x27, rd==x19, rs2_val == 0x40000000 and rs1_val == 0xAF6E9055 
-// opcode: xperm.n ; op1:x2; op2:x27; dest:x19; op1val:0xaf6e9055;  op2val:0x40000000
-TEST_RR_OP(xperm.n, x19, x2, x27, 0x00000000, 0xaf6e9055, 0x40000000, x8, 28, x7)
-
-inst_24:
-// rs1==x10, rs2==x17, rd==x30, rs2_val == 0xE0000000 and rs1_val == 0x5B130474 
-// opcode: xperm.n ; op1:x10; op2:x17; dest:x30; op1val:0x5b130474;  op2val:0xe0000000
-TEST_RR_OP(xperm.n, x30, x10, x17, 0x00000000, 0x5b130474, 0xe0000000, x8, 32, x7)
-
-inst_25:
-// rs1==x11, rs2==x13, rd==x29, rs2_val == 0x90000000 and rs1_val == 0x3EEA126E 
-// opcode: xperm.n ; op1:x11; op2:x13; dest:x29; op1val:0x3eea126e;  op2val:0x90000000
-TEST_RR_OP(xperm.n, x29, x11, x13, 0x00000000, 0x3eea126e, 0x90000000, x8, 36, x7)
-
-inst_26:
-// rs1==x0, rs2==x14, rd==x18, rs2_val == 0xB8000000 and rs1_val == 0x9C734D77 
-// opcode: xperm.n ; op1:x0; op2:x14; dest:x18; op1val:0x0;  op2val:0xb8000000
-TEST_RR_OP(xperm.n, x18, x0, x14, 0x00000000, 0x0, 0xb8000000, x8, 40, x7)
-
-inst_27:
-// rs1==x17, rs2==x16, rd==x21, rs2_val == 0xB4000000 and rs1_val == 0x5A694BCA 
-// opcode: xperm.n ; op1:x17; op2:x16; dest:x21; op1val:0x5a694bca;  op2val:0xb4000000
-TEST_RR_OP(xperm.n, x21, x17, x16, 0x00000000, 0x5a694bca, 0xb4000000, x8, 44, x7)
-
-inst_28:
-// rs1==x18, rs2==x19, rd==x10, rs2_val == 0x3E000000 and rs1_val == 0xED52E4CA 
-// opcode: xperm.n ; op1:x18; op2:x19; dest:x10; op1val:0xed52e4ca;  op2val:0x3e000000
-TEST_RR_OP(xperm.n, x10, x18, x19, 0x00000000, 0xed52e4ca, 0x3e000000, x8, 48, x7)
-
-inst_29:
-// rs1==x5, rs2==x23, rd==x16, rs2_val == 0xFB000000 and rs1_val == 0xB5CB2A93 
-// opcode: xperm.n ; op1:x5; op2:x23; dest:x16; op1val:0xb5cb2a93;  op2val:0xfb000000
-TEST_RR_OP(xperm.n, x16, x5, x23, 0x00000000, 0xb5cb2a93, 0xfb000000, x8, 52, x7)
-
-inst_30:
-// rs1==x6, rs2==x18, rd==x12, rs2_val == 0x68800000 and rs1_val == 0x29324E16 
-// opcode: xperm.n ; op1:x6; op2:x18; dest:x12; op1val:0x29324e16;  op2val:0x68800000
-TEST_RR_OP(xperm.n, x12, x6, x18, 0x00000000, 0x29324e16, 0x68800000, x8, 56, x7)
-
-inst_31:
-// rs1==x7, rs2==x22, rd==x3, rs2_val == 0xB7400000 and rs1_val == 0xBC5FB419 
-// opcode: xperm.n ; op1:x7; op2:x22; dest:x3; op1val:0xbc5fb419;  op2val:0xb7400000
-TEST_RR_OP(xperm.n, x3, x7, x22, 0x00000000, 0xbc5fb419, 0xb7400000, x8, 60, x2)
-RVTEST_SIGBASE( x1,signature_x1_0)
-
-inst_32:
-// rs2_val == 0x5CE00000 and rs1_val == 0x8E92E1B8 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x8e92e1b8;  op2val:0x5ce00000
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x8e92e1b8, 0x5ce00000, x1, 0, x2)
-
-inst_33:
-// rs2_val == 0x49F00000 and rs1_val == 0x96A3B48B 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x96a3b48b;  op2val:0x49f00000
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x96a3b48b, 0x49f00000, x1, 4, x2)
-
-inst_34:
-// rs2_val == 0x53D80000 and rs1_val == 0x0A095049 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xa095049;  op2val:0x53d80000
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xa095049, 0x53d80000, x1, 8, x2)
-
-inst_35:
-// rs2_val == 0x2EC40000 and rs1_val == 0x6F6E71B7 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x6f6e71b7;  op2val:0x2ec40000
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x6f6e71b7, 0x2ec40000, x1, 12, x2)
-
-inst_36:
-// rs2_val == 0x8E860000 and rs1_val == 0x236CC43D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x236cc43d;  op2val:0x8e860000
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x236cc43d, 0x8e860000, x1, 16, x2)
-
-inst_37:
-// rs2_val == 0x6FBF0000 and rs1_val == 0xE2ED8971 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xe2ed8971;  op2val:0x6fbf0000
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xe2ed8971, 0x6fbf0000, x1, 20, x2)
-
-inst_38:
-// rs2_val == 0x354E8000 and rs1_val == 0x06FA7B3E 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x6fa7b3e;  op2val:0x354e8000
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x6fa7b3e, 0x354e8000, x1, 24, x2)
-
-inst_39:
-// rs2_val == 0xFB07C000 and rs1_val == 0x4143DA51 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x4143da51;  op2val:0xfb07c000
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x4143da51, 0xfb07c000, x1, 28, x2)
-
-inst_40:
-// rs2_val == 0xDFFA2000 and rs1_val == 0xCAC78511 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xcac78511;  op2val:0xdffa2000
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xcac78511, 0xdffa2000, x1, 32, x2)
-
-inst_41:
-// rs2_val == 0x45D1F000 and rs1_val == 0xDF880B11 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xdf880b11;  op2val:0x45d1f000
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xdf880b11, 0x45d1f000, x1, 36, x2)
-
-inst_42:
-// rs2_val == 0x9069A800 and rs1_val == 0xBD230058 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xbd230058;  op2val:0x9069a800
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xbd230058, 0x9069a800, x1, 40, x2)
-
-inst_43:
-// rs2_val == 0xF5B1B400 and rs1_val == 0xF2597377 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xf2597377;  op2val:0xf5b1b400
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xf2597377, 0xf5b1b400, x1, 44, x2)
-
-inst_44:
-// rs2_val == 0x06B6DA00 and rs1_val == 0x5A8E7F31 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x5a8e7f31;  op2val:0x6b6da00
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x5a8e7f31, 0x6b6da00, x1, 48, x2)
-
-inst_45:
-// rs2_val == 0xBFB0F100 and rs1_val == 0x7A3621F5 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x7a3621f5;  op2val:0xbfb0f100
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x7a3621f5, 0xbfb0f100, x1, 52, x2)
-
-inst_46:
-// rs2_val == 0xD838C880 and rs1_val == 0x1E3C492C 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x1e3c492c;  op2val:0xd838c880
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x1e3c492c, 0xd838c880, x1, 56, x2)
-
-inst_47:
-// rs2_val == 0x5C46AEC0 and rs1_val == 0xD4FAF4B1 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xd4faf4b1;  op2val:0x5c46aec0
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xd4faf4b1, 0x5c46aec0, x1, 60, x2)
-
-inst_48:
-// rs2_val == 0xCF7AC620 and rs1_val == 0x27A16894 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x27a16894;  op2val:0xcf7ac620
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x27a16894, 0xcf7ac620, x1, 64, x2)
-
-inst_49:
-// rs2_val == 0x05C2F650 and rs1_val == 0x0A3EF19E 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xa3ef19e;  op2val:0x5c2f650
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xa3ef19e, 0x5c2f650, x1, 68, x2)
-
-inst_50:
-// rs2_val == 0xEEC50588 and rs1_val == 0xCB8193EF 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xcb8193ef;  op2val:0xeec50588
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xcb8193ef, 0xeec50588, x1, 72, x2)
-
-inst_51:
-// rs2_val == 0xCA7160CC and rs1_val == 0x577F8847 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x577f8847;  op2val:0xca7160cc
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x577f8847, 0xca7160cc, x1, 76, x2)
-
-inst_52:
-// rs2_val == 0x60E30DA2 and rs1_val == 0x9B5EAF0A 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x9b5eaf0a;  op2val:0x60e30da2
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x9b5eaf0a, 0x60e30da2, x1, 80, x2)
-
-inst_53:
-// rs2_val == 0x76F86039 and rs1_val == 0x5D3BBCE0 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x5d3bbce0;  op2val:0x76f86039
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x5d3bbce0, 0x76f86039, x1, 84, x2)
-
-inst_54:
-// rs1_val == 0x00000000 and rs2_val == 0xFD1032E8 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xfd1032e8
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x0, 0xfd1032e8, x1, 88, x2)
-
-inst_55:
-// rs1_val == 0x80000000 and rs2_val == 0x7B246C17 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x80000000;  op2val:0x7b246c17
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x80000000, 0x7b246c17, x1, 92, x2)
-
-inst_56:
-// rs1_val == 0x40000000 and rs2_val == 0x56F3EEF1 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x40000000;  op2val:0x56f3eef1
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x40000000, 0x56f3eef1, x1, 96, x2)
-
-inst_57:
-// rs1_val == 0xA0000000 and rs2_val == 0x75923260 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xa0000000;  op2val:0x75923260
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xa0000000, 0x75923260, x1, 100, x2)
-
-inst_58:
-// rs1_val == 0x10000000 and rs2_val == 0xB9D3087C 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x10000000;  op2val:0xb9d3087c
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x10000000, 0xb9d3087c, x1, 104, x2)
-
-inst_59:
-// rs1_val == 0xA8000000 and rs2_val == 0x46CBD355 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xa8000000;  op2val:0x46cbd355
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xa8000000, 0x46cbd355, x1, 108, x2)
-
-inst_60:
-// rs1_val == 0xE4000000 and rs2_val == 0x4616E73D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xe4000000;  op2val:0x4616e73d
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xe4000000, 0x4616e73d, x1, 112, x2)
-
-inst_61:
-// rs1_val == 0x8E000000 and rs2_val == 0x8CCAEC71 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x8e000000;  op2val:0x8ccaec71
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x8e000000, 0x8ccaec71, x1, 116, x2)
-
-inst_62:
-// rs1_val == 0x13000000 and rs2_val == 0x9B774054 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x13000000;  op2val:0x9b774054
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x13000000, 0x9b774054, x1, 120, x2)
-
-inst_63:
-// rs1_val == 0x8B800000 and rs2_val == 0x6D5FCD18 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x8b800000;  op2val:0x6d5fcd18
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x8b800000, 0x6d5fcd18, x1, 124, x2)
-
-inst_64:
-// rs1_val == 0x7EC00000 and rs2_val == 0x0696F561 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x7ec00000;  op2val:0x696f561
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x7ec00000, 0x696f561, x1, 128, x2)
-
-inst_65:
-// rs1_val == 0x3DA00000 and rs2_val == 0x6E1E98E2 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x3da00000;  op2val:0x6e1e98e2
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x3da00000, 0x6e1e98e2, x1, 132, x2)
-
-inst_66:
-// rs1_val == 0x20100000 and rs2_val == 0x2DEDB6A7 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x20100000;  op2val:0x2dedb6a7
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x20100000, 0x2dedb6a7, x1, 136, x2)
-
-inst_67:
-// rs1_val == 0x98380000 and rs2_val == 0x3C272728 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x98380000;  op2val:0x3c272728
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x98380000, 0x3c272728, x1, 140, x2)
-
-inst_68:
-// rs1_val == 0x80F40000 and rs2_val == 0x4F55C73D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x80f40000;  op2val:0x4f55c73d
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x80f40000, 0x4f55c73d, x1, 144, x2)
-
-inst_69:
-// rs1_val == 0x43560000 and rs2_val == 0xB0AB577A 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x43560000;  op2val:0xb0ab577a
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x43560000, 0xb0ab577a, x1, 148, x2)
-
-inst_70:
-// rs1_val == 0x62A90000 and rs2_val == 0x42F5D75E 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x62a90000;  op2val:0x42f5d75e
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x62a90000, 0x42f5d75e, x1, 152, x2)
-
-inst_71:
-// rs1_val == 0x60348000 and rs2_val == 0xB9F09825 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x60348000;  op2val:0xb9f09825
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x60348000, 0xb9f09825, x1, 156, x2)
-
-inst_72:
-// rs1_val == 0x5EF6C000 and rs2_val == 0x9BFAD94F 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x5ef6c000;  op2val:0x9bfad94f
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x5ef6c000, 0x9bfad94f, x1, 160, x2)
-
-inst_73:
-// rs1_val == 0x79DF6000 and rs2_val == 0x98918DD8 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x79df6000;  op2val:0x98918dd8
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x79df6000, 0x98918dd8, x1, 164, x2)
-
-inst_74:
-// rs1_val == 0x864C1000 and rs2_val == 0x9B811F47 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x864c1000;  op2val:0x9b811f47
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x864c1000, 0x9b811f47, x1, 168, x2)
-
-inst_75:
-// rs1_val == 0x735CB800 and rs2_val == 0xD0D18FB0 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x735cb800;  op2val:0xd0d18fb0
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x735cb800, 0xd0d18fb0, x1, 172, x2)
-
-inst_76:
-// rs1_val == 0x29554400 and rs2_val == 0x71992790 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x29554400;  op2val:0x71992790
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x29554400, 0x71992790, x1, 176, x2)
-
-inst_77:
-// rs1_val == 0xA9A56A00 and rs2_val == 0x8248F803 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xa9a56a00;  op2val:0x8248f803
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xa9a56a00, 0x8248f803, x1, 180, x2)
-
-inst_78:
-// rs1_val == 0xC3405D00 and rs2_val == 0xEB3D7873 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xc3405d00;  op2val:0xeb3d7873
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xc3405d00, 0xeb3d7873, x1, 184, x2)
-
-inst_79:
-// rs1_val == 0x394D8080 and rs2_val == 0xD7A7BF5E 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x394d8080;  op2val:0xd7a7bf5e
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x394d8080, 0xd7a7bf5e, x1, 188, x2)
-
-inst_80:
-// rs1_val == 0xC6677840 and rs2_val == 0xD1BA5C0F 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xc6677840;  op2val:0xd1ba5c0f
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xc6677840, 0xd1ba5c0f, x1, 192, x2)
-
-inst_81:
-// rs1_val == 0x70598E60 and rs2_val == 0xD19E3224 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x70598e60;  op2val:0xd19e3224
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x70598e60, 0xd19e3224, x1, 196, x2)
-
-inst_82:
-// rs1_val == 0x98A59F90 and rs2_val == 0x35D30D74 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x98a59f90;  op2val:0x35d30d74
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x98a59f90, 0x35d30d74, x1, 200, x2)
-
-inst_83:
-// rs1_val == 0xD306DEB8 and rs2_val == 0x70A76E49 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xd306deb8;  op2val:0x70a76e49
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xd306deb8, 0x70a76e49, x1, 204, x2)
-
-inst_84:
-// rs1_val == 0x18A01374 and rs2_val == 0x9FCDB9E1 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x18a01374;  op2val:0x9fcdb9e1
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x18a01374, 0x9fcdb9e1, x1, 208, x2)
-
-inst_85:
-// rs1_val == 0xC3667402 and rs2_val == 0x5FEFE911 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xc3667402;  op2val:0x5fefe911
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xc3667402, 0x5fefe911, x1, 212, x2)
-
-inst_86:
-// rs1_val == 0x797D76DF and rs2_val == 0x598B88DB 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x797d76df;  op2val:0x598b88db
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x797d76df, 0x598b88db, x1, 216, x2)
-
-inst_87:
-// rs2_val == 0x0C04F662 and rs1_val == 0xB7E7669E 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xb7e7669e;  op2val:0xc04f662
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xb7e7669e, 0xc04f662, x1, 220, x2)
-
-inst_88:
-// rs2_val == 0xCD41CAD1 and rs1_val == 0xD24F0724 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xd24f0724;  op2val:0xcd41cad1
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xd24f0724, 0xcd41cad1, x1, 224, x2)
-
-inst_89:
-// rs2_val == 0x1203965B and rs1_val == 0x585022A3 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x585022a3;  op2val:0x1203965b
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x585022a3, 0x1203965b, x1, 228, x2)
-
-inst_90:
-// rs2_val == 0x7A9AC0A7 and rs1_val == 0xEE8F948A 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xee8f948a;  op2val:0x7a9ac0a7
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xee8f948a, 0x7a9ac0a7, x1, 232, x2)
-
-inst_91:
-// rs2_val == 0x2AA8E42F and rs1_val == 0x2655FA99 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x2655fa99;  op2val:0x2aa8e42f
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x2655fa99, 0x2aa8e42f, x1, 236, x2)
-
-inst_92:
-// rs2_val == 0x211D785F and rs1_val == 0x0C96A183 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xc96a183;  op2val:0x211d785f
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xc96a183, 0x211d785f, x1, 240, x2)
-
-inst_93:
-// rs2_val == 0x59DDE33F and rs1_val == 0x88F931F4 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x88f931f4;  op2val:0x59dde33f
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x88f931f4, 0x59dde33f, x1, 244, x2)
-
-inst_94:
-// rs2_val == 0x711E627F and rs1_val == 0x6F2BF862 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x6f2bf862;  op2val:0x711e627f
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x6f2bf862, 0x711e627f, x1, 248, x2)
-
-inst_95:
-// rs2_val == 0x19835AFF and rs1_val == 0x5C6C32A5 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x5c6c32a5;  op2val:0x19835aff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x5c6c32a5, 0x19835aff, x1, 252, x2)
-
-inst_96:
-// rs2_val == 0x088B3DFF and rs1_val == 0x58FC0342 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x58fc0342;  op2val:0x88b3dff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x58fc0342, 0x88b3dff, x1, 256, x2)
-
-inst_97:
-// rs2_val == 0x9A6DA3FF and rs1_val == 0x636A75E3 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x636a75e3;  op2val:0x9a6da3ff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x636a75e3, 0x9a6da3ff, x1, 260, x2)
-
-inst_98:
-// rs2_val == 0x37E0D7FF and rs1_val == 0x4ED62428 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x4ed62428;  op2val:0x37e0d7ff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x4ed62428, 0x37e0d7ff, x1, 264, x2)
-
-inst_99:
-// rs2_val == 0x5E59CFFF and rs1_val == 0xD2D12745 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xd2d12745;  op2val:0x5e59cfff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xd2d12745, 0x5e59cfff, x1, 268, x2)
-
-inst_100:
-// rs2_val == 0xDD129FFF and rs1_val == 0x0D770F3C 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xd770f3c;  op2val:0xdd129fff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xd770f3c, 0xdd129fff, x1, 272, x2)
-
-inst_101:
-// rs2_val == 0x872EBFFF and rs1_val == 0x2311ACFB 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x2311acfb;  op2val:0x872ebfff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x2311acfb, 0x872ebfff, x1, 276, x2)
-
-inst_102:
-// rs2_val == 0x55367FFF and rs1_val == 0x0FB13BBC 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfb13bbc;  op2val:0x55367fff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfb13bbc, 0x55367fff, x1, 280, x2)
-
-inst_103:
-// rs2_val == 0xFDD2FFFF and rs1_val == 0x8DFC2307 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x8dfc2307;  op2val:0xfdd2ffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x8dfc2307, 0xfdd2ffff, x1, 284, x2)
-
-inst_104:
-// rs2_val == 0x30BDFFFF and rs1_val == 0x7312BE6D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x7312be6d;  op2val:0x30bdffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x7312be6d, 0x30bdffff, x1, 288, x2)
-
-inst_105:
-// rs2_val == 0xA743FFFF and rs1_val == 0xC61B1FBF 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xc61b1fbf;  op2val:0xa743ffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xc61b1fbf, 0xa743ffff, x1, 292, x2)
-
-inst_106:
-// rs2_val == 0x9987FFFF and rs1_val == 0xEBDA5A4F 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xebda5a4f;  op2val:0x9987ffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xebda5a4f, 0x9987ffff, x1, 296, x2)
-
-inst_107:
-// rs2_val == 0x118FFFFF and rs1_val == 0xC215E193 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xc215e193;  op2val:0x118fffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xc215e193, 0x118fffff, x1, 300, x2)
-
-inst_108:
-// rs2_val == 0x65DFFFFF and rs1_val == 0x75EE935F 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x75ee935f;  op2val:0x65dfffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x75ee935f, 0x65dfffff, x1, 304, x2)
-
-inst_109:
-// rs2_val == 0x6CBFFFFF and rs1_val == 0x09C16162 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x9c16162;  op2val:0x6cbfffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x9c16162, 0x6cbfffff, x1, 308, x2)
-
-inst_110:
-// rs2_val == 0x347FFFFF and rs1_val == 0xA4053175 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xa4053175;  op2val:0x347fffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xa4053175, 0x347fffff, x1, 312, x2)
-
-inst_111:
-// rs2_val == 0xC4FFFFFF and rs1_val == 0x499006C8 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x499006c8;  op2val:0xc4ffffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x499006c8, 0xc4ffffff, x1, 316, x2)
-
-inst_112:
-// rs2_val == 0x41FFFFFF and rs1_val == 0x3C5B3EEE 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x3c5b3eee;  op2val:0x41ffffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x3c5b3eee, 0x41ffffff, x1, 320, x2)
-
-inst_113:
-// rs2_val == 0x6BFFFFFF and rs1_val == 0xD95FD86A 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xd95fd86a;  op2val:0x6bffffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xd95fd86a, 0x6bffffff, x1, 324, x2)
-
-inst_114:
-// rs2_val == 0x87FFFFFF and rs1_val == 0x25784F4F 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x25784f4f;  op2val:0x87ffffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x25784f4f, 0x87ffffff, x1, 328, x2)
-
-inst_115:
-// rs2_val == 0xCFFFFFFF and rs1_val == 0x082018FA 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x82018fa;  op2val:0xcfffffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x82018fa, 0xcfffffff, x1, 332, x2)
-
-inst_116:
-// rs2_val == 0x9FFFFFFF and rs1_val == 0x350CC530 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x350cc530;  op2val:0x9fffffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x350cc530, 0x9fffffff, x1, 336, x2)
-
-inst_117:
-// rs2_val == 0x3FFFFFFF and rs1_val == 0x7966A24E 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x7966a24e;  op2val:0x3fffffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x7966a24e, 0x3fffffff, x1, 340, x2)
-
-inst_118:
-// rs2_val == 0x7FFFFFFF and rs1_val == 0x51D6D6DA 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x51d6d6da;  op2val:0x7fffffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x51d6d6da, 0x7fffffff, x1, 344, x2)
-
-inst_119:
-// rs2_val == 0xFFFFFFFF and rs1_val == 0xD5A2038F 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xd5a2038f;  op2val:0xffffffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xd5a2038f, 0xffffffff, x1, 348, x2)
-
-inst_120:
-// rs1_val == 0xFF7746E6 and rs2_val == 0x4F829B65 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xff7746e6;  op2val:0x4f829b65
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xff7746e6, 0x4f829b65, x1, 352, x2)
-
-inst_121:
-// rs1_val == 0xF89A7241 and rs2_val == 0x00C2F091 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xf89a7241;  op2val:0xc2f091
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xf89a7241, 0xc2f091, x1, 356, x2)
-
-inst_122:
-// rs1_val == 0x11B36A93 and rs2_val == 0xB1F5D853 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x11b36a93;  op2val:0xb1f5d853
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x11b36a93, 0xb1f5d853, x1, 360, x2)
-
-inst_123:
-// rs1_val == 0xC9932457 and rs2_val == 0x39BE2172 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xc9932457;  op2val:0x39be2172
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xc9932457, 0x39be2172, x1, 364, x2)
-
-inst_124:
-// rs1_val == 0x4B9A6C8F and rs2_val == 0x316039EE 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x4b9a6c8f;  op2val:0x316039ee
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x4b9a6c8f, 0x316039ee, x1, 368, x2)
-
-inst_125:
-// rs1_val == 0x9541241F and rs2_val == 0x5761A866 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x9541241f;  op2val:0x5761a866
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x9541241f, 0x5761a866, x1, 372, x2)
-
-inst_126:
-// rs1_val == 0x94B431BF and rs2_val == 0x09E4D1F4 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x94b431bf;  op2val:0x9e4d1f4
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x94b431bf, 0x9e4d1f4, x1, 376, x2)
-
-inst_127:
-// rs1_val == 0xDC8FE97F and rs2_val == 0x9E03793F 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xdc8fe97f;  op2val:0x9e03793f
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xdc8fe97f, 0x9e03793f, x1, 380, x2)
-
-inst_128:
-// rs1_val == 0xB903CEFF and rs2_val == 0x7F1071EC 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xb903ceff;  op2val:0x7f1071ec
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xb903ceff, 0x7f1071ec, x1, 384, x2)
-
-inst_129:
-// rs1_val == 0xB494A5FF and rs2_val == 0x9A7EF9E4 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xb494a5ff;  op2val:0x9a7ef9e4
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xb494a5ff, 0x9a7ef9e4, x1, 388, x2)
-
-inst_130:
-// rs1_val == 0xE2DD83FF and rs2_val == 0x59C05BB9 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xe2dd83ff;  op2val:0x59c05bb9
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xe2dd83ff, 0x59c05bb9, x1, 392, x2)
-
-inst_131:
-// rs1_val == 0xBBAFD7FF and rs2_val == 0xDE451397 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xbbafd7ff;  op2val:0xde451397
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xbbafd7ff, 0xde451397, x1, 396, x2)
-
-inst_132:
-// rs1_val == 0xCE5C4FFF and rs2_val == 0x40F27005 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xce5c4fff;  op2val:0x40f27005
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xce5c4fff, 0x40f27005, x1, 400, x2)
-
-inst_133:
-// rs1_val == 0x39935FFF and rs2_val == 0x24496FE3 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x39935fff;  op2val:0x24496fe3
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x39935fff, 0x24496fe3, x1, 404, x2)
-
-inst_134:
-// rs1_val == 0xEED7BFFF and rs2_val == 0xDE14BFF2 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xeed7bfff;  op2val:0xde14bff2
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xeed7bfff, 0xde14bff2, x1, 408, x2)
-
-inst_135:
-// rs1_val == 0x008E7FFF and rs2_val == 0xB808A677 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x8e7fff;  op2val:0xb808a677
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x8e7fff, 0xb808a677, x1, 412, x2)
-
-inst_136:
-// rs1_val == 0x12C2FFFF and rs2_val == 0x76B1FD3D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x12c2ffff;  op2val:0x76b1fd3d
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x12c2ffff, 0x76b1fd3d, x1, 416, x2)
-
-inst_137:
-// rs1_val == 0xE3A5FFFF and rs2_val == 0x5DCF019D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xe3a5ffff;  op2val:0x5dcf019d
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xe3a5ffff, 0x5dcf019d, x1, 420, x2)
-
-inst_138:
-// rs1_val == 0x9B03FFFF and rs2_val == 0x47B7097B 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x9b03ffff;  op2val:0x47b7097b
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x9b03ffff, 0x47b7097b, x1, 424, x2)
-
-inst_139:
-// rs1_val == 0x5F07FFFF and rs2_val == 0x759F1B43 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x5f07ffff;  op2val:0x759f1b43
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x5f07ffff, 0x759f1b43, x1, 428, x2)
-
-inst_140:
-// rs1_val == 0x33CFFFFF and rs2_val == 0x5B331999 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x33cfffff;  op2val:0x5b331999
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x33cfffff, 0x5b331999, x1, 432, x2)
-
-inst_141:
-// rs1_val == 0x709FFFFF and rs2_val == 0x2D37DE81 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x709fffff;  op2val:0x2d37de81
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x709fffff, 0x2d37de81, x1, 436, x2)
-
-inst_142:
-// rs1_val == 0xD1BFFFFF and rs2_val == 0xFCB627AF 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xd1bfffff;  op2val:0xfcb627af
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xd1bfffff, 0xfcb627af, x1, 440, x2)
-
-inst_143:
-// rs1_val == 0xAB7FFFFF and rs2_val == 0x1E0B4EE5 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xab7fffff;  op2val:0x1e0b4ee5
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xab7fffff, 0x1e0b4ee5, x1, 444, x2)
-
-inst_144:
-// rs1_val == 0x7CFFFFFF and rs2_val == 0xFB3E7196 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x7cffffff;  op2val:0xfb3e7196
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x7cffffff, 0xfb3e7196, x1, 448, x2)
-
-inst_145:
-// rs1_val == 0x59FFFFFF and rs2_val == 0xD9959A62 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x59ffffff;  op2val:0xd9959a62
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x59ffffff, 0xd9959a62, x1, 452, x2)
-
-inst_146:
-// rs1_val == 0xDBFFFFFF and rs2_val == 0xE08409F0 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xdbffffff;  op2val:0xe08409f0
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xdbffffff, 0xe08409f0, x1, 456, x2)
-
-inst_147:
-// rs1_val == 0xF7FFFFFF and rs2_val == 0x258ECECB 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xf7ffffff;  op2val:0x258ececb
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xf7ffffff, 0x258ececb, x1, 460, x2)
-
-inst_148:
-// rs1_val == 0x6FFFFFFF and rs2_val == 0xFF7D5EC0 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x6fffffff;  op2val:0xff7d5ec0
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x6fffffff, 0xff7d5ec0, x1, 464, x2)
-
-inst_149:
-// rs1_val == 0x9FFFFFFF and rs2_val == 0x4B6EA010 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x9fffffff;  op2val:0x4b6ea010
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x9fffffff, 0x4b6ea010, x1, 468, x2)
-
-inst_150:
-// rs1_val == 0x3FFFFFFF and rs2_val == 0xD885BBAC 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x3fffffff;  op2val:0xd885bbac
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x3fffffff, 0xd885bbac, x1, 472, x2)
-
-inst_151:
-// rs1_val == 0x7FFFFFFF and rs2_val == 0xBBE8F88D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x7fffffff;  op2val:0xbbe8f88d
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x7fffffff, 0xbbe8f88d, x1, 476, x2)
-
-inst_152:
-// rs1_val == 0xFFFFFFFF and rs2_val == 0xE3D6E4B9 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xffffffff;  op2val:0xe3d6e4b9
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xffffffff, 0xe3d6e4b9, x1, 480, x2)
-
-inst_153:
-// rs2_val == 0x970216FD and rs1_val == 0x0494B6D2 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x494b6d2;  op2val:0x970216fd
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x494b6d2, 0x970216fd, x1, 484, x2)
-
-inst_154:
-// rs2_val == 0x5CB58B8F and rs1_val == 0xF2650B71 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xf2650b71;  op2val:0x5cb58b8f
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xf2650b71, 0x5cb58b8f, x1, 488, x2)
-
-inst_155:
-// rs2_val == 0x27EFDA6C and rs1_val == 0x21AF214A 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x21af214a;  op2val:0x27efda6c
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x21af214a, 0x27efda6c, x1, 492, x2)
-
-inst_156:
-// rs2_val == 0x1D1EF7C0 and rs1_val == 0x482EA760 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x482ea760;  op2val:0x1d1ef7c0
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x482ea760, 0x1d1ef7c0, x1, 496, x2)
-
-inst_157:
-// rs2_val == 0x0FC2A909 and rs1_val == 0x0F7A0443 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xf7a0443;  op2val:0xfc2a909
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xf7a0443, 0xfc2a909, x1, 500, x2)
-
-inst_158:
-// rs2_val == 0x04E9E4A6 and rs1_val == 0x69534048 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x69534048;  op2val:0x4e9e4a6
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x69534048, 0x4e9e4a6, x1, 504, x2)
-
-inst_159:
-// rs2_val == 0x025FDCD7 and rs1_val == 0x043E3EF5 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x43e3ef5;  op2val:0x25fdcd7
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x43e3ef5, 0x25fdcd7, x1, 508, x2)
-
-inst_160:
-// rs2_val == 0x01782EBC and rs1_val == 0x12FAD802 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x12fad802;  op2val:0x1782ebc
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x12fad802, 0x1782ebc, x1, 512, x2)
-
-inst_161:
-// rs2_val == 0x00A39575 and rs1_val == 0x119B4FE5 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x119b4fe5;  op2val:0xa39575
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x119b4fe5, 0xa39575, x1, 516, x2)
-
-inst_162:
-// rs2_val == 0x0049886F and rs1_val == 0x7DB224CB 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x7db224cb;  op2val:0x49886f
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x7db224cb, 0x49886f, x1, 520, x2)
-
-inst_163:
-// rs2_val == 0x0025693C and rs1_val == 0xB45F51C3 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xb45f51c3;  op2val:0x25693c
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xb45f51c3, 0x25693c, x1, 524, x2)
-
-inst_164:
-// rs2_val == 0x0018031A and rs1_val == 0x41536363 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x41536363;  op2val:0x18031a
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x41536363, 0x18031a, x1, 528, x2)
-
-inst_165:
-// rs2_val == 0x000A8267 and rs1_val == 0x1A953CCA 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x1a953cca;  op2val:0xa8267
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x1a953cca, 0xa8267, x1, 532, x2)
-
-inst_166:
-// rs2_val == 0x00073010 and rs1_val == 0x14186EBF 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x14186ebf;  op2val:0x73010
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x14186ebf, 0x73010, x1, 536, x2)
-
-inst_167:
-// rs2_val == 0x00038734 and rs1_val == 0xF33C1A7F 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xf33c1a7f;  op2val:0x38734
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xf33c1a7f, 0x38734, x1, 540, x2)
-
-inst_168:
-// rs2_val == 0x0001EAB1 and rs1_val == 0x8DCE6F52 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x8dce6f52;  op2val:0x1eab1
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x8dce6f52, 0x1eab1, x1, 544, x2)
-
-inst_169:
-// rs2_val == 0x0000B8EC and rs1_val == 0x3096C6C8 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x3096c6c8;  op2val:0xb8ec
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x3096c6c8, 0xb8ec, x1, 548, x2)
-
-inst_170:
-// rs2_val == 0x00007530 and rs1_val == 0x9C461CB5 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x9c461cb5;  op2val:0x7530
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x9c461cb5, 0x7530, x1, 552, x2)
-
-inst_171:
-// rs2_val == 0x00003ED5 and rs1_val == 0x27756991 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x27756991;  op2val:0x3ed5
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x27756991, 0x3ed5, x1, 556, x2)
-
-inst_172:
-// rs2_val == 0x00001055 and rs1_val == 0x62D74145 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x62d74145;  op2val:0x1055
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x62d74145, 0x1055, x1, 560, x2)
-
-inst_173:
-// rs2_val == 0x00000E9E and rs1_val == 0x931719FD 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x931719fd;  op2val:0xe9e
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x931719fd, 0xe9e, x1, 564, x2)
-
-inst_174:
-// rs2_val == 0x0000059B and rs1_val == 0x965768E0 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x965768e0;  op2val:0x59b
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x965768e0, 0x59b, x1, 568, x2)
-
-inst_175:
-// rs2_val == 0x00000208 and rs1_val == 0x74057241 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x74057241;  op2val:0x208
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x74057241, 0x208, x1, 572, x2)
-
-inst_176:
-// rs2_val == 0x000001E8 and rs1_val == 0x5E617F8E 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x5e617f8e;  op2val:0x1e8
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x5e617f8e, 0x1e8, x1, 576, x2)
-
-inst_177:
-// rs2_val == 0x000000D2 and rs1_val == 0x3E361858 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x3e361858;  op2val:0xd2
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x3e361858, 0xd2, x1, 580, x2)
-
-inst_178:
-// rs2_val == 0x00000071 and rs1_val == 0x13041452 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x13041452;  op2val:0x71
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x13041452, 0x71, x1, 584, x2)
-
-inst_179:
-// rs2_val == 0x00000034 and rs1_val == 0x4BDBF090 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x4bdbf090;  op2val:0x34
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x4bdbf090, 0x34, x1, 588, x2)
-
-inst_180:
-// rs2_val == 0x00000019 and rs1_val == 0x9C3ECB54 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x9c3ecb54;  op2val:0x19
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x9c3ecb54, 0x19, x1, 592, x2)
-
-inst_181:
-// rs2_val == 0x0000000B and rs1_val == 0x421E7A60 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x421e7a60;  op2val:0xb
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x421e7a60, 0xb, x1, 596, x2)
-
-inst_182:
-// rs2_val == 0x00000005 and rs1_val == 0x2577C1EC 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x2577c1ec;  op2val:0x5
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x2577c1ec, 0x5, x1, 600, x2)
-
-inst_183:
-// rs2_val == 0x00000002 and rs1_val == 0x19AF685D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x19af685d;  op2val:0x2
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x19af685d, 0x2, x1, 604, x2)
-
-inst_184:
-// rs2_val == 0x00000001 and rs1_val == 0x2FF36007 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x2ff36007;  op2val:0x1
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x2ff36007, 0x1, x1, 608, x2)
-
-inst_185:
-// rs2_val == 0x00000000 and rs1_val == 0xE286852C 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xe286852c;  op2val:0x0
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xe286852c, 0x0, x1, 612, x2)
-
-inst_186:
-// rs1_val == 0xC511488A and rs2_val == 0x97BDD982 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xc511488a;  op2val:0x97bdd982
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xc511488a, 0x97bdd982, x1, 616, x2)
-
-inst_187:
-// rs1_val == 0x65151C41 and rs2_val == 0x367E5D6D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x65151c41;  op2val:0x367e5d6d
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x65151c41, 0x367e5d6d, x1, 620, x2)
-
-inst_188:
-// rs1_val == 0x24CA83B3 and rs2_val == 0x623D8EB7 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x24ca83b3;  op2val:0x623d8eb7
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x24ca83b3, 0x623d8eb7, x1, 624, x2)
-
-inst_189:
-// rs1_val == 0x1C3B66FB and rs2_val == 0x21870F0B 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x1c3b66fb;  op2val:0x21870f0b
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x1c3b66fb, 0x21870f0b, x1, 628, x2)
-
-inst_190:
-// rs1_val == 0x0A8A6FD0 and rs2_val == 0x82450164 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xa8a6fd0;  op2val:0x82450164
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xa8a6fd0, 0x82450164, x1, 632, x2)
-
-inst_191:
-// rs1_val == 0x069CA08C and rs2_val == 0x8F2DF760 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x69ca08c;  op2val:0x8f2df760
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x69ca08c, 0x8f2df760, x1, 636, x2)
-
-inst_192:
-// rs1_val == 0x03552C95 and rs2_val == 0x7CA07386 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x3552c95;  op2val:0x7ca07386
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x3552c95, 0x7ca07386, x1, 640, x2)
-
-inst_193:
-// rs1_val == 0x0174EA19 and rs2_val == 0x19DE2BC1 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x174ea19;  op2val:0x19de2bc1
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x174ea19, 0x19de2bc1, x1, 644, x2)
-
-inst_194:
-// rs1_val == 0x00A454F2 and rs2_val == 0xEC3FBF4D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xa454f2;  op2val:0xec3fbf4d
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xa454f2, 0xec3fbf4d, x1, 648, x2)
-
-inst_195:
-// rs1_val == 0x007E9BEE and rs2_val == 0x164F1513 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x7e9bee;  op2val:0x164f1513
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x7e9bee, 0x164f1513, x1, 652, x2)
-
-inst_196:
-// rs1_val == 0x002C7CD0 and rs2_val == 0xACC6D8F2 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x2c7cd0;  op2val:0xacc6d8f2
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x2c7cd0, 0xacc6d8f2, x1, 656, x2)
-
-inst_197:
-// rs1_val == 0x00177310 and rs2_val == 0xA123F501 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x177310;  op2val:0xa123f501
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x177310, 0xa123f501, x1, 660, x2)
-
-inst_198:
-// rs1_val == 0x00091609 and rs2_val == 0xB57A6A1D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x91609;  op2val:0xb57a6a1d
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x91609, 0xb57a6a1d, x1, 664, x2)
-
-inst_199:
-// rs1_val == 0x00040BE0 and rs2_val == 0xE90794DF 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x40be0;  op2val:0xe90794df
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x40be0, 0xe90794df, x1, 668, x2)
-
-inst_200:
-// rs1_val == 0x00028D1B and rs2_val == 0xAF5570EE 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x28d1b;  op2val:0xaf5570ee
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x28d1b, 0xaf5570ee, x1, 672, x2)
-
-inst_201:
-// rs1_val == 0x0001FBE5 and rs2_val == 0xD8B9B45C 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x1fbe5;  op2val:0xd8b9b45c
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x1fbe5, 0xd8b9b45c, x1, 676, x2)
-
-inst_202:
-// rs1_val == 0x0000AAC1 and rs2_val == 0x1BA1192E 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xaac1;  op2val:0x1ba1192e
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xaac1, 0x1ba1192e, x1, 680, x2)
-
-inst_203:
-// rs1_val == 0x000062C3 and rs2_val == 0x49FE85B0 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x62c3;  op2val:0x49fe85b0
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x62c3, 0x49fe85b0, x1, 684, x2)
-
-inst_204:
-// rs1_val == 0x000022FD and rs2_val == 0x4105CCA7 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x22fd;  op2val:0x4105cca7
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x22fd, 0x4105cca7, x1, 688, x2)
-
-inst_205:
-// rs1_val == 0x000016B3 and rs2_val == 0xD7185DDA 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x16b3;  op2val:0xd7185dda
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x16b3, 0xd7185dda, x1, 692, x2)
-
-inst_206:
-// rs1_val == 0x00000A38 and rs2_val == 0xA7A11490 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xa38;  op2val:0xa7a11490
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xa38, 0xa7a11490, x1, 696, x2)
-
-inst_207:
-// rs1_val == 0x000006A7 and rs2_val == 0xA9964AEF 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x6a7;  op2val:0xa9964aef
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x6a7, 0xa9964aef, x1, 700, x2)
-
-inst_208:
-// rs1_val == 0x000003B9 and rs2_val == 0x4B4D8474 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x3b9;  op2val:0x4b4d8474
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x3b9, 0x4b4d8474, x1, 704, x2)
-
-inst_209:
-// rs1_val == 0x00000190 and rs2_val == 0x76C468AE 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x190;  op2val:0x76c468ae
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x190, 0x76c468ae, x1, 708, x2)
-
-inst_210:
-// rs1_val == 0x000000D4 and rs2_val == 0x09208A65 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xd4;  op2val:0x9208a65
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xd4, 0x9208a65, x1, 712, x2)
-
-inst_211:
-// rs1_val == 0x00000067 and rs2_val == 0x8743FEB6 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x67;  op2val:0x8743feb6
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x67, 0x8743feb6, x1, 716, x2)
-
-inst_212:
-// rs1_val == 0x00000039 and rs2_val == 0xA66B0D38 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x39;  op2val:0xa66b0d38
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x39, 0xa66b0d38, x1, 720, x2)
-
-inst_213:
-// rs1_val == 0x0000001C and rs2_val == 0xFB710734 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x1c;  op2val:0xfb710734
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x1c, 0xfb710734, x1, 724, x2)
-
-inst_214:
-// rs1_val == 0x0000000E and rs2_val == 0xA26B7F62 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xe;  op2val:0xa26b7f62
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xe, 0xa26b7f62, x1, 728, x2)
-
-inst_215:
-// rs1_val == 0x00000007 and rs2_val == 0x4DABB481 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x7;  op2val:0x4dabb481
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x7, 0x4dabb481, x1, 732, x2)
-
-inst_216:
-// rs1_val == 0x00000003 and rs2_val == 0x2FA91425 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x3;  op2val:0x2fa91425
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x3, 0x2fa91425, x1, 736, x2)
-
-inst_217:
-// rs1_val == 0x00000001 and rs2_val == 0x965EDA32 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x1;  op2val:0x965eda32
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x1, 0x965eda32, x1, 740, x2)
-
-inst_218:
-// rs1_val == 0x00000000 and rs2_val == 0xC7FDE805 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x0;  op2val:0xc7fde805
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x0, 0xc7fde805, x1, 744, x2)
-
-inst_219:
-// rs2_val == 0x6D3F408C and rs1_val == 0xFFEC35FE 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xffec35fe;  op2val:0x6d3f408c
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xffec35fe, 0x6d3f408c, x1, 748, x2)
-
-inst_220:
-// rs2_val == 0x946A3674 and rs1_val == 0x976AD220 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x976ad220;  op2val:0x946a3674
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x976ad220, 0x946a3674, x1, 752, x2)
-
-inst_221:
-// rs2_val == 0xDC6113A4 and rs1_val == 0x5990FE96 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x5990fe96;  op2val:0xdc6113a4
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x5990fe96, 0xdc6113a4, x1, 756, x2)
-
-inst_222:
-// rs2_val == 0xE42A809C and rs1_val == 0xC96EFDC4 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xc96efdc4;  op2val:0xe42a809c
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xc96efdc4, 0xe42a809c, x1, 760, x2)
-
-inst_223:
-// rs2_val == 0xF1A25760 and rs1_val == 0xAB8534C1 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xab8534c1;  op2val:0xf1a25760
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xab8534c1, 0xf1a25760, x1, 764, x2)
-
-inst_224:
-// rs2_val == 0xFB37BEC9 and rs1_val == 0xD1142724 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xd1142724;  op2val:0xfb37bec9
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xd1142724, 0xfb37bec9, x1, 768, x2)
-
-inst_225:
-// rs2_val == 0xFCE51A66 and rs1_val == 0xF65E7737 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xf65e7737;  op2val:0xfce51a66
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xf65e7737, 0xfce51a66, x1, 772, x2)
-
-inst_226:
-// rs2_val == 0xFEDEBB9C and rs1_val == 0x16CBC21C 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x16cbc21c;  op2val:0xfedebb9c
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x16cbc21c, 0xfedebb9c, x1, 776, x2)
-
-inst_227:
-// rs2_val == 0xFF69340A and rs1_val == 0xDBDD4DD9 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xdbdd4dd9;  op2val:0xff69340a
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xdbdd4dd9, 0xff69340a, x1, 780, x2)
-
-inst_228:
-// rs2_val == 0xFF9CF3F4 and rs1_val == 0x4BD90A77 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x4bd90a77;  op2val:0xff9cf3f4
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x4bd90a77, 0xff9cf3f4, x1, 784, x2)
-
-inst_229:
-// rs2_val == 0xFFC00793 and rs1_val == 0xCEBE24D9 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xcebe24d9;  op2val:0xffc00793
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xcebe24d9, 0xffc00793, x1, 788, x2)
-
-inst_230:
-// rs2_val == 0xFFEE1FC4 and rs1_val == 0xA0E0BD86 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xa0e0bd86;  op2val:0xffee1fc4
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xa0e0bd86, 0xffee1fc4, x1, 792, x2)
-
-inst_231:
-// rs2_val == 0xFFF06038 and rs1_val == 0x3CC279B3 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x3cc279b3;  op2val:0xfff06038
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x3cc279b3, 0xfff06038, x1, 796, x2)
-
-inst_232:
-// rs2_val == 0xFFF93D53 and rs1_val == 0x754F9B96 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x754f9b96;  op2val:0xfff93d53
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x754f9b96, 0xfff93d53, x1, 800, x2)
-
-inst_233:
-// rs2_val == 0xFFFC47E8 and rs1_val == 0x72745307 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x72745307;  op2val:0xfffc47e8
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x72745307, 0xfffc47e8, x1, 804, x2)
-
-inst_234:
-// rs2_val == 0xFFFE7302 and rs1_val == 0xDCAE6D62 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xdcae6d62;  op2val:0xfffe7302
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xdcae6d62, 0xfffe7302, x1, 808, x2)
-
-inst_235:
-// rs2_val == 0xFFFF1CE8 and rs1_val == 0x7C2C966D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x7c2c966d;  op2val:0xffff1ce8
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x7c2c966d, 0xffff1ce8, x1, 812, x2)
-
-inst_236:
-// rs2_val == 0xFFFFB5C6 and rs1_val == 0x9BB4752D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x9bb4752d;  op2val:0xffffb5c6
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x9bb4752d, 0xffffb5c6, x1, 816, x2)
-
-inst_237:
-// rs2_val == 0xFFFFDFA4 and rs1_val == 0x17BE082F 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x17be082f;  op2val:0xffffdfa4
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x17be082f, 0xffffdfa4, x1, 820, x2)
-
-inst_238:
-// rs2_val == 0xFFFFEF0B and rs1_val == 0x109FF475 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x109ff475;  op2val:0xffffef0b
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x109ff475, 0xffffef0b, x1, 824, x2)
-
-inst_239:
-// rs2_val == 0xFFFFF43F and rs1_val == 0x00B97EA6 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xb97ea6;  op2val:0xfffff43f
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xb97ea6, 0xfffff43f, x1, 828, x2)
-
-inst_240:
-// rs2_val == 0xFFFFFB4A and rs1_val == 0xF956EC0B 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xf956ec0b;  op2val:0xfffffb4a
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xf956ec0b, 0xfffffb4a, x1, 832, x2)
-
-inst_241:
-// rs2_val == 0xFFFFFDA4 and rs1_val == 0x70FC1AFC 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x70fc1afc;  op2val:0xfffffda4
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x70fc1afc, 0xfffffda4, x1, 836, x2)
-
-inst_242:
-// rs2_val == 0xFFFFFECB and rs1_val == 0x6348306E 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x6348306e;  op2val:0xfffffecb
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x6348306e, 0xfffffecb, x1, 840, x2)
-
-inst_243:
-// rs2_val == 0xFFFFFF54 and rs1_val == 0x66B072B9 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x66b072b9;  op2val:0xffffff54
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x66b072b9, 0xffffff54, x1, 844, x2)
-
-inst_244:
-// rs2_val == 0xFFFFFFA9 and rs1_val == 0x7FF822ED 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x7ff822ed;  op2val:0xffffffa9
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x7ff822ed, 0xffffffa9, x1, 848, x2)
-
-inst_245:
-// rs2_val == 0xFFFFFFC3 and rs1_val == 0xE918BE9F 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xe918be9f;  op2val:0xffffffc3
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xe918be9f, 0xffffffc3, x1, 852, x2)
-
-inst_246:
-// rs2_val == 0xFFFFFFE7 and rs1_val == 0xE4BAE7F6 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xe4bae7f6;  op2val:0xffffffe7
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xe4bae7f6, 0xffffffe7, x1, 856, x2)
-
-inst_247:
-// rs2_val == 0xFFFFFFF1 and rs1_val == 0xDE9A896F 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xde9a896f;  op2val:0xfffffff1
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xde9a896f, 0xfffffff1, x1, 860, x2)
-
-inst_248:
-// rs2_val == 0xFFFFFFF8 and rs1_val == 0x2881E531 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x2881e531;  op2val:0xfffffff8
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x2881e531, 0xfffffff8, x1, 864, x2)
-
-inst_249:
-// rs2_val == 0xFFFFFFFC and rs1_val == 0x1475F78D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x1475f78d;  op2val:0xfffffffc
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x1475f78d, 0xfffffffc, x1, 868, x2)
-
-inst_250:
-// rs2_val == 0xFFFFFFFE and rs1_val == 0xE59CF78F 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xe59cf78f;  op2val:0xfffffffe
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xe59cf78f, 0xfffffffe, x1, 872, x2)
-
-inst_251:
-// rs2_val == 0xFFFFFFFF and rs1_val == 0xB66B3284 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xb66b3284;  op2val:0xffffffff
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xb66b3284, 0xffffffff, x1, 876, x2)
-
-inst_252:
-// rs1_val == 0x6F4930C9 and rs2_val == 0x39422745 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x6f4930c9;  op2val:0x39422745
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x6f4930c9, 0x39422745, x1, 880, x2)
-
-inst_253:
-// rs1_val == 0x85D97467 and rs2_val == 0x58FA6E1C 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x85d97467;  op2val:0x58fa6e1c
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x85d97467, 0x58fa6e1c, x1, 884, x2)
-
-inst_254:
-// rs1_val == 0xC70AFC93 and rs2_val == 0x2D143295 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xc70afc93;  op2val:0x2d143295
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xc70afc93, 0x2d143295, x1, 888, x2)
-
-inst_255:
-// rs1_val == 0xE911655F and rs2_val == 0xD230B46C 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xe911655f;  op2val:0xd230b46c
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xe911655f, 0xd230b46c, x1, 892, x2)
-
-inst_256:
-// rs1_val == 0xF4AB0A39 and rs2_val == 0x4D753AC1 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xf4ab0a39;  op2val:0x4d753ac1
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xf4ab0a39, 0x4d753ac1, x1, 896, x2)
-
-inst_257:
-// rs1_val == 0xF8BD4821 and rs2_val == 0x1E9667C2 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xf8bd4821;  op2val:0x1e9667c2
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xf8bd4821, 0x1e9667c2, x1, 900, x2)
-
-inst_258:
-// rs1_val == 0xFCD7E667 and rs2_val == 0xAE4839A1 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfcd7e667;  op2val:0xae4839a1
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfcd7e667, 0xae4839a1, x1, 904, x2)
-
-inst_259:
-// rs1_val == 0xFE71CFDF and rs2_val == 0x6A013380 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfe71cfdf;  op2val:0x6a013380
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfe71cfdf, 0x6a013380, x1, 908, x2)
-
-inst_260:
-// rs1_val == 0xFF1C11AE and rs2_val == 0x59432A19 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xff1c11ae;  op2val:0x59432a19
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xff1c11ae, 0x59432a19, x1, 912, x2)
-
-inst_261:
-// rs1_val == 0xFF89799A and rs2_val == 0xCEB506F6 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xff89799a;  op2val:0xceb506f6
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xff89799a, 0xceb506f6, x1, 916, x2)
-
-inst_262:
-// rs1_val == 0xFFC80B13 and rs2_val == 0xC5EC6148 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xffc80b13;  op2val:0xc5ec6148
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xffc80b13, 0xc5ec6148, x1, 920, x2)
-
-inst_263:
-// rs1_val == 0xFFE94647 and rs2_val == 0x99EF1857 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xffe94647;  op2val:0x99ef1857
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xffe94647, 0x99ef1857, x1, 924, x2)
-
-inst_264:
-// rs1_val == 0xFFF263CF and rs2_val == 0x14B91C79 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfff263cf;  op2val:0x14b91c79
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfff263cf, 0x14b91c79, x1, 928, x2)
-
-inst_265:
-// rs1_val == 0xFFF919A1 and rs2_val == 0xA86B8A6E 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfff919a1;  op2val:0xa86b8a6e
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfff919a1, 0xa86b8a6e, x1, 932, x2)
-
-inst_266:
-// rs1_val == 0xFFFDE89D and rs2_val == 0x08208D09 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfffde89d;  op2val:0x8208d09
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfffde89d, 0x8208d09, x1, 936, x2)
-
-inst_267:
-// rs1_val == 0xFFFEC9D0 and rs2_val == 0x69B1DCBF 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfffec9d0;  op2val:0x69b1dcbf
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfffec9d0, 0x69b1dcbf, x1, 940, x2)
-
-inst_268:
-// rs1_val == 0xFFFF5576 and rs2_val == 0x807DA245 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xffff5576;  op2val:0x807da245
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xffff5576, 0x807da245, x1, 944, x2)
-
-inst_269:
-// rs1_val == 0xFFFFB6DF and rs2_val == 0x95A4D257 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xffffb6df;  op2val:0x95a4d257
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xffffb6df, 0x95a4d257, x1, 948, x2)
-
-inst_270:
-// rs1_val == 0xFFFFC561 and rs2_val == 0x735C076B 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xffffc561;  op2val:0x735c076b
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xffffc561, 0x735c076b, x1, 952, x2)
-
-inst_271:
-// rs1_val == 0xFFFFEAB5 and rs2_val == 0xE5F0307E 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xffffeab5;  op2val:0xe5f0307e
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xffffeab5, 0xe5f0307e, x1, 956, x2)
-
-inst_272:
-// rs1_val == 0xFFFFF602 and rs2_val == 0xE8DAC663 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfffff602;  op2val:0xe8dac663
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfffff602, 0xe8dac663, x1, 960, x2)
-
-inst_273:
-// rs1_val == 0xFFFFF8B1 and rs2_val == 0x0109C207 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfffff8b1;  op2val:0x109c207
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfffff8b1, 0x109c207, x1, 964, x2)
-
-inst_274:
-// rs1_val == 0xFFFFFCA0 and rs2_val == 0x600FECC1 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfffffca0;  op2val:0x600fecc1
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfffffca0, 0x600fecc1, x1, 968, x2)
-
-inst_275:
-// rs1_val == 0xFFFFFECC and rs2_val == 0xFB7F6F5D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfffffecc;  op2val:0xfb7f6f5d
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfffffecc, 0xfb7f6f5d, x1, 972, x2)
-
-inst_276:
-// rs1_val == 0xFFFFFF6E and rs2_val == 0x5CD2875E 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xffffff6e;  op2val:0x5cd2875e
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xffffff6e, 0x5cd2875e, x1, 976, x2)
-
-inst_277:
-// rs1_val == 0xFFFFFF84 and rs2_val == 0xACCA7F0D 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xffffff84;  op2val:0xacca7f0d
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xffffff84, 0xacca7f0d, x1, 980, x2)
-
-inst_278:
-// rs1_val == 0xFFFFFFDD and rs2_val == 0x5AE6A228 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xffffffdd;  op2val:0x5ae6a228
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xffffffdd, 0x5ae6a228, x1, 984, x2)
-
-inst_279:
-// rs1_val == 0xFFFFFFE7 and rs2_val == 0xFF1E5BEF 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xffffffe7;  op2val:0xff1e5bef
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xffffffe7, 0xff1e5bef, x1, 988, x2)
-
-inst_280:
-// rs1_val == 0xFFFFFFF4 and rs2_val == 0x137A9777 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfffffff4;  op2val:0x137a9777
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfffffff4, 0x137a9777, x1, 992, x2)
-
-inst_281:
-// rs1_val == 0xFFFFFFFA and rs2_val == 0x854A9657 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffa;  op2val:0x854a9657
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfffffffa, 0x854a9657, x1, 996, x2)
-
-inst_282:
-// rs1_val == 0xFFFFFFFD and rs2_val == 0xCF84B683 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffd;  op2val:0xcf84b683
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfffffffd, 0xcf84b683, x1, 1000, x2)
-
-inst_283:
-// rs1_val == 0xFFFFFFFE and rs2_val == 0x93FDCAB8 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xfffffffe;  op2val:0x93fdcab8
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xfffffffe, 0x93fdcab8, x1, 1004, x2)
-
-inst_284:
-// rs1_val == 0x91766f62 and rs2_val == 0x5570084b 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x91766f62;  op2val:0x5570084b
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x91766f62, 0x5570084b, x1, 1008, x2)
-
-inst_285:
-// rs1_val == 0xc0fe15dd and rs2_val == 0x9f053821 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xc0fe15dd;  op2val:0x9f053821
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xc0fe15dd, 0x9f053821, x1, 1012, x2)
-
-inst_286:
-// rs1_val == 0xf7f1305a and rs2_val == 0x9bedfe39 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0xf7f1305a;  op2val:0x9bedfe39
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0xf7f1305a, 0x9bedfe39, x1, 1016, x2)
-
-inst_287:
-// rs1_val == 0x55d98c6e and rs2_val == 0x2daf9ac7 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x55d98c6e;  op2val:0x2daf9ac7
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x55d98c6e, 0x2daf9ac7, x1, 1020, x2)
-
-inst_288:
-// rs2_val == 0xB8000000 and rs1_val == 0x9C734D77 
-// opcode: xperm.n ; op1:x10; op2:x11; dest:x12; op1val:0x9c734d77;  op2val:0xb8000000
-TEST_RR_OP(xperm.n, x12, x10, x11, 0x00000000, 0x9c734d77, 0xb8000000, x1, 1024, x2)
-#endif
-
-
-RVTEST_CODE_END
-RVMODEL_HALT
-
-RVTEST_DATA_BEGIN
-.align 4
-rvtest_data:
-.word 0xbabecafe
-RVTEST_DATA_END
-
-RVMODEL_DATA_BEGIN
-
-
-signature_x10_0:
-    .fill 0*(XLEN/32),4,0xdeadbeef
-
-
-signature_x10_1:
-    .fill 16*(XLEN/32),4,0xdeadbeef
-
-
-signature_x8_0:
-    .fill 16*(XLEN/32),4,0xdeadbeef
-
-
-signature_x1_0:
-    .fill 257*(XLEN/32),4,0xdeadbeef
-
-#ifdef rvtest_mtrap_routine
-
-mtrap_sigptr:
-    .fill 64*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-#ifdef rvtest_gpr_save
-
-gpr_save:
-    .fill 32*(XLEN/32),4,0xdeadbeef
-
-#endif
-
-RVMODEL_DATA_END
